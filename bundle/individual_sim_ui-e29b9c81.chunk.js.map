{"version":3,"file":"individual_sim_ui-e29b9c81.chunk.js","sources":["../../../ui/core/constants/mechanics.ts","../../../ui/core/encounter.ts","../../../ui/core/talents/talents_picker.ts","../../../ui/core/talents/druid.ts","../../../ui/core/talents/hunter.ts","../../../ui/core/talents/mage.ts","../../../ui/core/talents/paladin.ts","../../../ui/core/talents/priest.ts","../../../ui/core/talents/rogue.ts","../../../ui/core/talents/shaman.ts","../../../ui/core/talents/warlock.ts","../../../ui/core/talents/warrior.ts","../../../ui/core/talents/deathknight.ts","../../../ui/core/css_utils.ts","../../../ui/core/components/close_button.ts","../../../ui/core/components/base_modal.ts","../../../ui/core/talents/glyphs_picker.ts","../../../ui/core/talents/factory.ts","../../../ui/core/player.ts","../../../ui/core/party.ts","../../../ui/core/raid.ts","../../../ui/core/worker_pool.ts","../../../ui/core/sim.ts","../../../ui/core/launched_sims.ts","../../../ui/core/components/number_picker.ts","../../../ui/core/components/results_viewer.ts","../../../ui/core/components/sim_title_dropdown.ts","../../../ui/core/components/boolean_picker.ts","../../../ui/core/components/enum_picker.ts","../../../ui/core/components/settings_menu.ts","../../../ui/core/components/sim_header.ts","../../../ui/core/sim_ui.ts","../../../ui/core/components/character_stats.ts","../../../ui/core/components/icon_enum_picker.ts","../../../ui/core/components/log_runner.ts","../../../ui/core/components/content_block.ts","../../../ui/core/components/saved_data_manager.ts","../../../ui/core/components/stat_weights_action.ts","../../../ui/core/components/importers.ts","../../../ui/core/components/filters_menu.ts","../../../ui/core/components/other_inputs.ts","../../../ui/core/proto_utils/enchants.ts","../../../ui/core/components/gear_picker.ts","../../../ui/core/components/sim_tab.ts","../../../ui/core/components/individual_sim_ui/bulk_tab.ts","../../../ui/core/components/individual_sim_ui/gear_tab.ts","../../../ui/core/components/list_picker.ts","../../../ui/core/components/encounter_picker.ts","../../../ui/core/components/icon_picker.ts","../../../ui/core/components/multi_icon_picker.ts","../../../ui/core/components/individual_sim_ui/custom_rotation_picker.ts","../../../ui/core/components/number_list_picker.ts","../../../ui/core/components/individual_sim_ui/cooldowns_picker.ts","../../../ui/core/components/input_helpers.ts","../../../ui/core/components/icon_inputs.ts","../../../ui/core/components/individual_sim_ui/consumes_picker.ts","../../../ui/core/constants/tooltips.ts","../../../ui/core/components/item_swap_picker.ts","../../../ui/core/components/individual_sim_ui/settings_tab.ts","../../../ui/core/components/dropdown_picker.ts","../../../ui/core/components/string_picker.ts","../../../ui/core/components/individual_sim_ui/apl_helpers.ts","../../../ui/core/components/individual_sim_ui/apl_rotation_picker.ts","../../../ui/core/components/individual_sim_ui/apl_actions.ts","../../../ui/core/components/individual_sim_ui/rotation_tab.ts","../../../ui/core/talents/hunter_pet.ts","../../../ui/core/components/exporters.ts","../../../ui/core/individual_sim_ui.ts"],"sourcesContent":["export const CHARACTER_LEVEL = 80;\nexport const MAX_TALENT_POINTS = CHARACTER_LEVEL - 9;\nexport const BOSS_LEVEL = CHARACTER_LEVEL + 3;\n\nexport const EXPERTISE_PER_QUARTER_PERCENT_REDUCTION = 32.79 / 4;\nexport const MELEE_CRIT_RATING_PER_CRIT_CHANCE = 45.91;\nexport const MELEE_HIT_RATING_PER_HIT_CHANCE = 32.79;\nexport const ARMOR_PEN_PER_PERCENT_ARMOR = 13.99;\n\nexport const SPELL_CRIT_RATING_PER_CRIT_CHANCE = 45.91;\nexport const SPELL_HIT_RATING_PER_HIT_CHANCE = 26.23;\n\nexport const HASTE_RATING_PER_HASTE_PERCENT = 32.79;\n\n// Shamans, Paladins, Druids, Deathknights get more haste than everyone else, for melee.\nexport const SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT = 25.22;\n\nexport const DEFENSE_RATING_PER_DEFENSE = 4.92;\nexport const MISS_DODGE_PARRY_BLOCK_CRIT_CHANCE_PER_DEFENSE = 0.04;\nexport const BLOCK_RATING_PER_BLOCK_CHANCE = 16.39;\nexport const DODGE_RATING_PER_DODGE_CHANCE = 45.25;\nexport const PARRY_RATING_PER_PARRY_CHANCE = 45.25;\nexport const RESILIENCE_RATING_PER_CRIT_REDUCTION_CHANCE = 94.27;\nexport const RESILIENCE_RATING_PER_CRIT_DAMAGE_REDUCTION_PERCENT = 94.27 / 2.2;\n","import {\n\tEncounter as EncounterProto,\n\tMobType,\n\tSpellSchool,\n\tStat,\n\tTarget as TargetProto,\n\tTargetInput,\n\tPresetEncounter,\n\tPresetTarget,\n} from './proto/common.js';\nimport { Stats } from './proto_utils/stats.js';\nimport * as Mechanics from './constants/mechanics.js';\n\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\n// Manages all the settings for an Encounter.\nexport class Encounter {\n\treadonly sim: Sim;\n\n\tprivate duration: number = 180;\n\tprivate durationVariation: number = 5;\n\tprivate executeProportion20: number = 0.2;\n\tprivate executeProportion25: number = 0.25;\n\tprivate executeProportion35: number = 0.35;\n\tprivate useHealth: boolean = false;\n\ttargets: Array<TargetProto>;\n\n\treadonly targetsChangeEmitter = new TypedEvent<void>();\n\treadonly durationChangeEmitter = new TypedEvent<void>();\n\treadonly executeProportionChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.targets = [Encounter.defaultTargetProto()];\n\n\t\t[\n\t\t\tthis.targetsChangeEmitter,\n\t\t\tthis.durationChangeEmitter,\n\t\t\tthis.executeProportionChangeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\t}\n\n\tget primaryTarget(): TargetProto {\n\t\treturn TargetProto.clone(this.targets[0]);\n\t}\n\n\tgetDurationVariation(): number {\n\t\treturn this.durationVariation;\n\t}\n\tsetDurationVariation(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.durationVariation)\n\t\t\treturn;\n\n\t\tthis.durationVariation = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetDuration(): number {\n\t\treturn this.duration;\n\t}\n\tsetDuration(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.duration)\n\t\t\treturn;\n\n\t\tthis.duration = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetExecuteProportion20(): number {\n\t\treturn this.executeProportion20;\n\t}\n\tsetExecuteProportion20(eventID: EventID, newExecuteProportion20: number) {\n\t\tif (newExecuteProportion20 == this.executeProportion20)\n\t\t\treturn;\n\n\t\tthis.executeProportion20 = newExecuteProportion20;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion25(): number {\n\t\treturn this.executeProportion25;\n\t}\n\tsetExecuteProportion25(eventID: EventID, newExecuteProportion25: number) {\n\t\tif (newExecuteProportion25 == this.executeProportion25)\n\t\t\treturn;\n\n\t\tthis.executeProportion25 = newExecuteProportion25;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion35(): number {\n\t\treturn this.executeProportion35;\n\t}\n\tsetExecuteProportion35(eventID: EventID, newExecuteProportion35: number) {\n\t\tif (newExecuteProportion35 == this.executeProportion35)\n\t\t\treturn;\n\n\t\tthis.executeProportion35 = newExecuteProportion35;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tgetUseHealth(): boolean {\n\t\treturn this.useHealth;\n\t}\n\tsetUseHealth(eventID: EventID, newUseHealth: boolean) {\n\t\tif (newUseHealth == this.useHealth)\n\t\t\treturn;\n\n\t\tthis.useHealth = newUseHealth;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tmatchesPreset(preset: PresetEncounter): boolean {\n\t\treturn preset.targets.length == this.targets.length && this.targets.every((t, i) => TargetProto.equals(t, preset.targets[i].target));\n\t}\n\n\tapplyPreset(eventID: EventID, preset: PresetEncounter) {\n\t\tthis.targets = preset.targets.map(presetTarget => presetTarget.target || TargetProto.create());\n\t\tthis.targetsChangeEmitter.emit(eventID);\n\t}\n\n\tapplyPresetTarget(eventID: EventID, preset: PresetTarget, index: number) {\n\t\tthis.targets[index] = preset.target || TargetProto.create();\n\t\tthis.targetsChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(): EncounterProto {\n\t\treturn EncounterProto.create({\n\t\t\tduration: this.duration,\n\t\t\tdurationVariation: this.durationVariation,\n\t\t\texecuteProportion20: this.executeProportion20,\n\t\t\texecuteProportion25: this.executeProportion25,\n\t\t\texecuteProportion35: this.executeProportion35,\n\t\t\tuseHealth: this.useHealth,\n\t\t\ttargets: this.targets,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: EncounterProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setDuration(eventID, proto.duration);\n\t\t\tthis.setDurationVariation(eventID, proto.durationVariation);\n\t\t\tthis.setExecuteProportion20(eventID, proto.executeProportion20);\n\t\t\tthis.setExecuteProportion25(eventID, proto.executeProportion25);\n\t\t\tthis.setExecuteProportion35(eventID, proto.executeProportion35);\n\t\t\tthis.setUseHealth(eventID, proto.useHealth);\n\t\t\tthis.targets = proto.targets;\n\t\t\tthis.targetsChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tthis.fromProto(eventID, EncounterProto.create({\n\t\t\tduration: 180,\n\t\t\tdurationVariation: 5,\n\t\t\texecuteProportion20: 0.2,\n\t\t\texecuteProportion25: 0.25,\n\t\t\texecuteProportion35: 0.35,\n\t\t\ttargets: [Encounter.defaultTargetProto()],\n\t\t}));\n\t}\n\n\tstatic defaultTargetProto(): TargetProto {\n\t\treturn TargetProto.create({\n\t\t\tlevel: Mechanics.BOSS_LEVEL,\n\t\t\tmobType: MobType.MobTypeGiant,\n\t\t\ttankIndex: 0,\n\t\t\tswingSpeed: 1.5,\n\t\t\tminBaseDamage: 65000,\n\t\t\tdualWield: false,\n\t\t\tdualWieldPenalty: false,\n\t\t\tsuppressDodge: false,\n\t\t\tparryHaste: true,\n\t\t\tspellSchool: SpellSchool.SpellSchoolPhysical,\n\t\t\tstats: Stats.fromMap({\n\t\t\t\t[Stat.StatArmor]: 10643,\n\t\t\t\t[Stat.StatAttackPower]: 805,\n\t\t\t\t[Stat.StatBlockValue]: 76,\n\t\t\t}).asArray(),\n\t\t\ttargetInputs: new Array<TargetInput>(0),\n\t\t});\n\t}\n}\n","import { Component } from '../components/component.js';\nimport { Input, InputConfig } from '../components/input.js';\nimport { Spec } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\nimport { sum } from '../utils.js';\n\nexport interface TalentsPickerConfig<ModObject, TalentsProto> extends InputConfig<ModObject, string> {\n\ttrees: TalentsConfig<TalentsProto>,\n\tpointsPerRow: number,\n\tmaxPoints: number,\n}\n\nexport class TalentsPicker<ModObject, TalentsProto> extends Input<ModObject, string> {\n\treadonly numRows: number;\n\treadonly pointsPerRow: number;\n\tmaxPoints: number;\n\n\treadonly trees: Array<TalentTreePicker<TalentsProto>>;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: TalentsPickerConfig<ModObject, TalentsProto>) {\n\t\tsuper(parent, 'talents-picker-root', modObject, {...config, inline: true});\n\t\tthis.pointsPerRow = config.pointsPerRow;\n\t\tthis.maxPoints = config.maxPoints;\n\t\tthis.numRows = Math.max(...config.trees.map(treeConfig => treeConfig.talents.map(talentConfig => talentConfig.location.rowIdx).flat()).flat()) + 1;\n\n\t\tthis.trees = config.trees.map(treeConfig => new TalentTreePicker(this.rootElem, treeConfig, this));\n\t\tthis.trees.forEach(tree => tree.talents.forEach(talent => talent.setPoints(0, false)));\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): string {\n\t\treturn this.trees.map(tree => tree.getTalentsString()).join('-').replace(/-+$/g, '');\n\t}\n\n\tsetInputValue(newValue: string) {\n\t\tconst parts = newValue.split('-');\n\t\tthis.trees.forEach((tree, idx) => tree.setTalentsString(parts[idx] || ''));\n\t\tthis.updateTrees();\n\t}\n\n\tupdateTrees() {\n\t\tif (this.isFull()) {\n\t\t\tthis.rootElem.classList.add('talents-full');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talents-full');\n\t\t}\n\t\tthis.trees.forEach(tree => tree.update());\n\t}\n\n\tget numPoints() {\n\t\treturn sum(this.trees.map(tree => tree.numPoints));\n\t}\n\n\tisFull() {\n\t\treturn this.numPoints >= this.maxPoints;\n\t}\n\n\tsetMaxPoints(newMaxPoints: number) {\n\t\tif (newMaxPoints != this.maxPoints) {\n\t\t\tthis.maxPoints = newMaxPoints;\n\t\t\tthis.updateTrees();\n\t\t}\n\t}\n}\n\nclass TalentTreePicker<TalentsProto> extends Component {\n\tprivate readonly config: TalentTreeConfig<TalentsProto>;\n\tprivate readonly title: HTMLElement;\n\n\treadonly talents: Array<TalentPicker<TalentsProto>>;\n\treadonly picker: TalentsPicker<any, TalentsProto>;\n\n\t// The current number of points in this tree\n\tnumPoints: number;\n\n\tconstructor(parent: HTMLElement, config: TalentTreeConfig<TalentsProto>, picker: TalentsPicker<any, TalentsProto>) {\n\t\tsuper(parent, 'talent-tree-picker-root');\n\t\tthis.config = config;\n\t\tthis.numPoints = 0;\n\t\tthis.picker = picker;\n\n\t\tthis.rootElem.innerHTML = `\n    <div class=\"talent-tree-header\">\n      <span class=\"talent-tree-title\"></span>\n      <span class=\"talent-tree-reset fa fa-times\"></span>\n    </div>\n    <div class=\"talent-tree-main\">\n    </div>\n    `;\n\n\t\tthis.title = this.rootElem.getElementsByClassName('talent-tree-title')[0] as HTMLElement;\n\n\t\tconst main = this.rootElem.getElementsByClassName('talent-tree-main')[0] as HTMLElement;\n\t\tmain.style.backgroundImage = `url('${config.backgroundUrl}')`;\n\t\tmain.style.gridTemplateRows = `repeat(${this.picker.numRows}, 1fr)`;\n\n\t\tconst iconSize = Math.min(70 / this.picker.numRows, 10);\n\t\tmain.style.height = `${iconSize * this.picker.numRows}vh`\n\t\tmain.style.width = `${iconSize * 4}vh`\n\n\t\tthis.talents = config.talents.map(talent => new TalentPicker(main, talent, this));\n\t\tthis.talents.forEach(talent => {\n\t\t\tif (talent.config.prereqLocation) {\n\t\t\t\tthis.getTalent(talent.config.prereqLocation).config.prereqOfLocation = talent.config.location;\n\t\t\t}\n\t\t});\n\n\t\tconst reset = this.rootElem.getElementsByClassName('talent-tree-reset')[0] as HTMLElement;\n\t\treset.addEventListener('click', event => {\n\t\t\tthis.talents.forEach(talent => talent.setPoints(0, false));\n\t\t\tthis.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tupdate() {\n\t\tthis.title.textContent = this.config.name + ' (' + this.numPoints + ')';\n\t\tthis.talents.forEach(talent => talent.update());\n\t}\n\n\tgetTalent(location: TalentLocation): TalentPicker<TalentsProto> {\n\t\tconst talent = this.talents.find(talent => talent.getRow() == location.rowIdx && talent.getCol() == location.colIdx);\n\t\tif (!talent)\n\t\t\tthrow new Error('No talent found with location: ' + location);\n\t\treturn talent;\n\t}\n\n\tgetTalentsString(): string {\n\t\treturn this.talents.map(talent => String(talent.getPoints())).join('').replace(/0+$/g, '');\n\t}\n\n\tsetTalentsString(str: string) {\n\t\tthis.talents.forEach((talent, idx) => talent.setPoints(Number(str.charAt(idx)), false));\n\t}\n}\n\nclass TalentPicker<TalentsProto> extends Component {\n\treadonly config: TalentConfig<TalentsProto>;\n\tprivate readonly tree: TalentTreePicker<TalentsProto>;\n\tprivate readonly pointsDisplay: HTMLElement;\n\n\tprivate longTouchTimer?: number;\n\n\tconstructor(parent: HTMLElement, config: TalentConfig<TalentsProto>, tree: TalentTreePicker<TalentsProto>) {\n\t\tsuper(parent, 'talent-picker-root', document.createElement('a'));\n\t\tthis.config = config;\n\t\tthis.tree = tree;\n\n\t\tthis.rootElem.style.gridRow = String(this.config.location.rowIdx + 1);\n\t\tthis.rootElem.style.gridColumn = String(this.config.location.colIdx + 1);\n\n\t\tthis.rootElem.dataset.maxPoints = String(this.config.maxPoints);\n\t\tthis.rootElem.dataset.wowhead = 'noimage';\n\n\t\tthis.pointsDisplay = document.createElement('span');\n\t\tthis.pointsDisplay.classList.add('talent-picker-points');\n\t\tthis.rootElem.appendChild(this.pointsDisplay);\n\n\t\tthis.rootElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootElem.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootElem.addEventListener('touchstart', event => {\n\t\t\tevent.preventDefault();\n\t\t\tthis.longTouchTimer = window.setTimeout(() => {\n\t\t\t\tthis.setPoints(0, true);\n\t\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t\t\tthis.longTouchTimer = undefined;\n\t\t\t}, 750);\n\t\t});\n\t\tthis.rootElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.longTouchTimer != undefined) {\n\t\t\t\tclearTimeout(this.longTouchTimer);\n\t\t\t\tthis.longTouchTimer = undefined;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newPoints = this.getPoints() + 1;\n\t\t\tif (this.config.maxPoints < newPoints) {\n\t\t\t\tnewPoints = 0;\n\t\t\t}\n\t\t\tthis.setPoints(newPoints, true);\n\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t\tthis.rootElem.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\t\t\tif (rightClick) {\n\t\t\t\tthis.setPoints(this.getPoints() - 1, true);\n\t\t\t} else {\n\t\t\t\tthis.setPoints(this.getPoints() + 1, true);\n\t\t\t}\n\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetRow(): number {\n\t\treturn this.config.location.rowIdx;\n\t}\n\n\tgetCol(): number {\n\t\treturn this.config.location.colIdx;\n\t}\n\n\tgetPoints(): number {\n\t\tconst pts = Number(this.rootElem.dataset.points);\n\t\treturn isNaN(pts) ? 0 : pts;\n\t}\n\n\tisFull(): boolean {\n\t\treturn this.getPoints() >= this.config.maxPoints;\n\t}\n\n\t// Returns whether setting the points to newPoints would be a valid talent tree.\n\tcanSetPoints(newPoints: number): boolean {\n\t\tconst oldPoints = this.getPoints();\n\n\t\tif (newPoints > oldPoints) {\n\t\t\tconst additionalPoints = newPoints - oldPoints;\n\n\t\t\tif (this.tree.picker.numPoints + additionalPoints > this.tree.picker.maxPoints) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.tree.numPoints < this.getRow() * this.tree.picker.pointsPerRow) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.config.prereqLocation) {\n\t\t\t\tif (!this.tree.getTalent(this.config.prereqLocation).isFull())\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst removedPoints = oldPoints - newPoints;\n\n\t\t\t// Figure out whether any lower talents would have the row requirement\n\t\t\t// broken by subtracting points.\n\t\t\tconst pointTotalsByRow = [...Array(this.tree.picker.numRows).keys()]\n\t\t\t\t.map(rowIdx => this.tree.talents.filter(talent => talent.getRow() == rowIdx))\n\t\t\t\t.map(talentsInRow => sum(talentsInRow.map(talent => talent.getPoints())));\n\t\t\tpointTotalsByRow[this.getRow()] -= removedPoints;\n\n\t\t\tconst cumulativeTotalsByRow = pointTotalsByRow.map((_, rowIdx) => sum(pointTotalsByRow.slice(0, rowIdx + 1)));\n\n\t\t\tif (!this.tree.talents.every(talent =>\n\t\t\t\ttalent.getPoints() == 0\n\t\t\t\t|| talent.getRow() == 0\n\t\t\t\t|| cumulativeTotalsByRow[talent.getRow() - 1] >= talent.getRow() * this.tree.picker.pointsPerRow)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.config.prereqOfLocation) {\n\t\t\t\tif (this.tree.getTalent(this.config.prereqOfLocation).getPoints() > 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetPoints(newPoints: number, checkValidity: boolean) {\n\t\tconst oldPoints = this.getPoints();\n\t\tnewPoints = Math.max(0, newPoints);\n\t\tnewPoints = Math.min(this.config.maxPoints, newPoints);\n\n\t\tif (checkValidity && !this.canSetPoints(newPoints))\n\t\t\treturn;\n\n\t\tthis.tree.numPoints += newPoints - oldPoints;\n\t\tthis.rootElem.dataset.points = String(newPoints);\n\n\t\tthis.pointsDisplay.textContent = newPoints + '/' + this.config.maxPoints;\n\n\t\tif (this.isFull()) {\n\t\t\tthis.rootElem.classList.add('talent-full');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talent-full');\n\t\t}\n\n\t\tconst spellId = this.getSpellIdForPoints(newPoints);\n\t\tActionId.fromSpellId(spellId).fill().then(actionId => {\n\t\t\tactionId.setWowheadHref(this.rootElem as HTMLAnchorElement);\n\t\t\tthis.rootElem.style.backgroundImage = `url('${actionId.iconUrl}')`;\n\t\t});\n\t}\n\n\tgetSpellIdForPoints(numPoints: number): number {\n\t\t// 0-indexed rank of talent\n\t\tconst rank = Math.max(0, numPoints - 1);\n\n\t\tif (this.config.spellIds[rank]) {\n\t\t\treturn this.config.spellIds[rank];\n\t\t} else {\n\t\t\tthrow new Error('No rank ' + numPoints + ' for talent ' + this.config.fieldName);\n\t\t}\n\t}\n\n\tupdate() {\n\t\tif (this.canSetPoints(this.getPoints() + 1)) {\n\t\t\tthis.rootElem.classList.add('talent-picker-can-add');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talent-picker-can-add');\n\t\t}\n\t}\n}\n\nexport type TalentsConfig<TalentsProto> = Array<TalentTreeConfig<TalentsProto>>;\n\nexport type TalentTreeConfig<TalentsProto> = {\n\tname: string;\n\tbackgroundUrl: string;\n\ttalents: Array<TalentConfig<TalentsProto>>;\n};\n\nexport type TalentLocation = {\n\t// 0-indexed row in the tree\n\trowIdx: number;\n\t// 0-indexed column in the tree\n\tcolIdx: number;\n};\n\nexport type TalentConfig<TalentsProto> = {\n\tfieldName?: keyof TalentsProto | string;\n\n\tlocation: TalentLocation;\n\n\t// Location of a prerequisite talent, if any\n\tprereqLocation?: TalentLocation;\n\n\t// Reverse of prereqLocation. This is populated automatically.\n\tprereqOfLocation?: TalentLocation;\n\n\t// Spell ID for each rank of this talent.\n\t// Omitted ranks will be inferred by incrementing from the last provided rank.\n\tspellIds: Array<number>;\n\n\tmaxPoints: number;\n};\n\nexport function newTalentsConfig<TalentsProto>(talents: TalentsConfig<TalentsProto>): TalentsConfig<TalentsProto> {\n\ttalents.forEach(tree => {\n\t\ttree.talents.forEach((talent, i) => {\n\t\t\t// Validate that talents are given in the correct order (left-to-right top-to-bottom).\n\t\t\tif (i != 0) {\n\t\t\t\tconst prevTalent = tree.talents[i - 1];\n\t\t\t\tif (talent.location.rowIdx < prevTalent.location.rowIdx || (talent.location.rowIdx == prevTalent.location.rowIdx && talent.location.colIdx <= prevTalent.location.colIdx)) {\n\t\t\t\t\tthrow new Error('Out-of-order talent: ' + talent.fieldName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Infer omitted spell IDs.\n\t\t\tif (talent.spellIds.length < talent.maxPoints) {\n\t\t\t\tlet curSpellId = talent.spellIds[talent.spellIds.length - 1];\n\t\t\t\tfor (let pointIdx = talent.spellIds.length; pointIdx < talent.maxPoints; pointIdx++) {\n\t\t\t\t\tcurSpellId++;\n\t\t\t\t\ttalent.spellIds.push(curSpellId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\treturn talents;\n}\n","import { DruidTalents, DruidMajorGlyph, DruidMinorGlyph } from '../proto/druid.js';\n\nimport { GlyphsConfig, } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport DruidTalentsJson from './trees/druid.json';\n\nexport const druidTalentsConfig: TalentsConfig<DruidTalents> = newTalentsConfig(DruidTalentsJson);\n\nexport const druidGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[DruidMajorGlyph.GlyphOfBarkskin]: {\n\t\t\tname: 'Glyph of Barkskin',\n\t\t\tdescription: 'Reduces the chance you\\'ll be critically hit by 25% while Barkskin is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_stoneclawtotem.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfBerserk]: {\n\t\t\tname: 'Glyph of Berserk',\n\t\t\tdescription: 'Increases the duration of Berserk by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_berserk.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfClaw]: {\n\t\t\tname: 'Glyph of Claw',\n\t\t\tdescription: 'Reduces the energy cost of your Claw ability by 5.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_rake.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfEntanglingRoots]: {\n\t\t\tname: 'Glyph of Entangling Roots',\n\t\t\tdescription: 'Increases the damage your Entangling Roots victims can take before the Entangling Roots automatically breaks by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_stranglevines.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfFocus]: {\n\t\t\tname: 'Glyph of Focus',\n\t\t\tdescription: 'Increases the damage done by Starfall by 10%, but decreases its radius by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_starfall.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfFrenziedRegeneration]: {\n\t\t\tname: 'Glyph of Frenzied Regeneration',\n\t\t\tdescription: 'While Frenzied Regeneration is active, healing effects on you are 20% more powerful.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_bullrush.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfGrowling]: {\n\t\t\tname: 'Glyph of Growling',\n\t\t\tdescription: 'Increases the chance for your Growl ability to work successfully by 8%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_physical_taunt.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfHealingTouch]: {\n\t\t\tname: 'Glyph of Healing Touch',\n\t\t\tdescription: 'Decreases the cast time of Healing Touch by 1.5 sec, the mana cost by 25%, and the amount healed by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingtouch.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfHurricane]: {\n\t\t\tname: 'Glyph of Hurricane',\n\t\t\tdescription: 'Your Hurricane ability now also slows the movement speed of its victims by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_cyclone.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfInnervate]: {\n\t\t\tname: 'Glyph of Innervate',\n\t\t\tdescription: 'Innervate now grants the caster 45% of <dfn title=\"her\">his</dfn> base mana pool over 10 sec in addition to the normal effects of Innervate.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfInsectSwarm]: {\n\t\t\tname: 'Glyph of Insect Swarm',\n\t\t\tdescription: 'Increases the damage of your Insect Swarm ability by 30%, but it no longer affects your victim\\'s chance to hit.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_insectswarm.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfLifebloom]: {\n\t\t\tname: 'Glyph of Lifebloom',\n\t\t\tdescription: 'Increases the duration of Lifebloom by 1 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_herb_felblossom.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfMangle]: {\n\t\t\tname: 'Glyph of Mangle',\n\t\t\tdescription: 'Increases the damage done by Mangle by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_mangle2.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfMaul]: {\n\t\t\tname: 'Glyph of Maul',\n\t\t\tdescription: 'Your Maul ability now hits 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_maul.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfMonsoon]: {\n\t\t\tname: 'Glyph of Monsoon',\n\t\t\tdescription: 'Reduces the cooldown of your Typhoon spell by 3 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_typhoon.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfMoonfire]: {\n\t\t\tname: 'Glyph of Moonfire',\n\t\t\tdescription: 'Increases the periodic damage of your Moonfire ability by 75%, but initial damage is decreased by 90%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_starfall.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfOmenOfClarity]: {\n\t\t\tname: 'Glyph of Omen of Clarity',\n\t\t\tdescription: 'Your Omen of Clarity talent has a 100% chance to be triggered by successfully casting Faerie Fire (Feral). Does not trigger on players or player-controlled pets.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_faeriefire.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfNourish]: {\n\t\t\tname: 'Glyph of Nourish',\n\t\t\tdescription: 'Your Nourish heals an additional 6% for each of your heal over time effects present on the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_nourish.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRake]: {\n\t\t\tname: 'Glyph of Rake',\n\t\t\tdescription: 'Your Rake ability prevents targets from fleeing.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_disembowel.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRapidRejuvenation]: {\n\t\t\tname: 'Glyph of Rapid Rejuvenation',\n\t\t\tdescription: 'Your haste now reduces the time between the periodic healing ticks of your Rejuvenation spell.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_rejuvenation.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRebirth]: {\n\t\t\tname: 'Glyph of Rebirth',\n\t\t\tdescription: 'Players resurrected by Rebirth are returned to life with 100% health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRegrowth]: {\n\t\t\tname: 'Glyph of Regrowth',\n\t\t\tdescription: 'Increases the healing of your Regrowth spell by 20% if your Regrowth effect is still active on the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_resistnature.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRejuvenation]: {\n\t\t\tname: 'Glyph of Rejuvenation',\n\t\t\tdescription: 'While your Rejuvenation targets are below 50% health, you will heal them for an additional 50% health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_rejuvenation.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfRip]: {\n\t\t\tname: 'Glyph of Rip',\n\t\t\tdescription: 'Increases the duration of your Rip ability by 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_ghoulfrenzy.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfSavageRoar]: {\n\t\t\tname: 'Glyph of Savage Roar',\n\t\t\tdescription: 'Your Savage Roar ability grants an additional 3% bonus damage done.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_skinteeth.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfShred]: {\n\t\t\tname: 'Glyph of Shred',\n\t\t\tdescription: 'Each time you Shred, the duration of your Rip on the target is extended 2 sec, up to a maximum of 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_vampiricaura.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfStarfall]: {\n\t\t\tname: 'Glyph of Starfall',\n\t\t\tdescription: 'Reduces the cooldown of Starfall by 30 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_starfall.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfStarfire]: {\n\t\t\tname: 'Glyph of Starfire',\n\t\t\tdescription: 'Your Starfire ability increases the duration of your Moonfire effect on the target by 3 sec, up to a maximum of 9 additional seconds.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_arcane_starfire.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfSurvivalInstincts]: {\n\t\t\tname: 'Glyph of Survival Instincts',\n\t\t\tdescription: 'Your Survival Instincts ability grants an additional 15% of your maximum health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_tigersroar.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfSwiftmend]: {\n\t\t\tname: 'Glyph of Swiftmend',\n\t\t\tdescription: 'Your Swiftmend ability no longer consumes a Rejuvenation or Regrowth effect from the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_relics_idolofrejuvenation.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfWildGrowth]: {\n\t\t\tname: 'Glyph of Wild Growth',\n\t\t\tdescription: 'Wild Growth can affect 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_flourish.jpg',\n\t\t},\n\t\t[DruidMajorGlyph.GlyphOfWrath]: {\n\t\t\tname: 'Glyph of Wrath',\n\t\t\tdescription: 'Reduces the pushback suffered from damaging attacks while casting your Wrath spell by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_abolishmagic.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[DruidMinorGlyph.GlyphOfAquaticForm]: {\n\t\t\tname: 'Glyph of Aquatic Form',\n\t\t\tdescription: 'Increases your swim speed by 50% while in Aquatic Form.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_aquaticform.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfChallengingRoar]: {\n\t\t\tname: 'Glyph of Challenging Roar',\n\t\t\tdescription: 'Reduces the cooldown of your Challenging Roar ability by 30 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_challangingroar.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfDash]: {\n\t\t\tname: 'Glyph of Dash',\n\t\t\tdescription: 'Reduces the cooldown of your Dash ability by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_dash.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfTheWild]: {\n\t\t\tname: 'Glyph of the Wild',\n\t\t\tdescription: 'Mana cost of your Mark of the Wild and Gift of the Wild spells reduced by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_regeneration.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfThorns]: {\n\t\t\tname: 'Glyph of Thorns',\n\t\t\tdescription: 'Increases the duration of your Thorns ability by 50 min when cast on yourself.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_thorns.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfTyphoon]: {\n\t\t\tname: 'Glyph of Typhoon',\n\t\t\tdescription: 'Reduces the cost of your Typhoon spell by 8% and increases its radius by 10 yards, but it no longer knocks enemies back.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_typhoon.jpg',\n\t\t},\n\t\t[DruidMinorGlyph.GlyphOfUnburdenedRebirth]: {\n\t\t\tname: 'Glyph of Unburdened Rebirth',\n\t\t\tdescription: 'Your Rebirth spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg',\n\t\t},\n\t},\n};\n","import { HunterTalents, HunterMajorGlyph, HunterMinorGlyph, HunterPetTalents } from '../proto/hunter.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport HunterTalentJson from './trees/hunter.json';\n\nexport const hunterTalentsConfig: TalentsConfig<HunterTalents> = newTalentsConfig(HunterTalentJson);\n\nexport const hunterGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[HunterMajorGlyph.GlyphOfAimedShot]: {\n\t\t\tname: 'Glyph of Aimed Shot',\n\t\t\tdescription: 'Reduces the cooldown of your Aimed Shot ability by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_spear_07.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfArcaneShot]: {\n\t\t\tname: 'Glyph of Arcane Shot',\n\t\t\tdescription: 'Your Arcane Shot refunds 20% of its mana cost if the target has one of your Stings active on it.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_impalingbolt.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfAspectOfTheViper]: {\n\t\t\tname: 'Glyph of Aspect of the Viper',\n\t\t\tdescription: 'Increases the amount of mana gained from attacks while Aspect of the Viper is active by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_aspectoftheviper.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfBestialWrath]: {\n\t\t\tname: 'Glyph of Bestial Wrath',\n\t\t\tdescription: 'Decreases the cooldown of Bestial Wrath by 20 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_ferociousbite.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfChimeraShot]: {\n\t\t\tname: 'Glyph of Chimera Shot',\n\t\t\tdescription: 'Reduces the cooldown of Chimera Shot by 1 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_chimerashot2.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfDeterrence]: {\n\t\t\tname: 'Glyph of Deterrence',\n\t\t\tdescription: 'Decreases the cooldown of Deterrence by 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_whirlwind.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfDisengage]: {\n\t\t\tname: 'Glyph of Disengage',\n\t\t\tdescription: 'Decreases the cooldown of Disengage by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feint.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfExplosiveShot]: {\n\t\t\tname: 'Glyph of Explosive Shot',\n\t\t\tdescription: 'Increases the critical strike chance of Explosive Shot by 4%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_explosiveshot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfExplosiveTrap]: {\n\t\t\tname: 'Glyph of Explosive Trap',\n\t\t\tdescription: 'The periodic damage from your Explosive Trap can now be critical strikes.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_selfdestruct.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfFreezingTrap]: {\n\t\t\tname: 'Glyph of Freezing Trap',\n\t\t\tdescription: 'When your Freezing Trap breaks, the victim\\'s movement speed is reduced by 30% for 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_chainsofice.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfFrostTrap]: {\n\t\t\tname: 'Glyph of Frost Trap',\n\t\t\tdescription: 'Increases the radius of the effect from your Frost Trap by 2 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_freezingbreath.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfHuntersMark]: {\n\t\t\tname: 'Glyph of Hunter\\'s Mark',\n\t\t\tdescription: 'Increases the attack power bonus of your Hunter\\'s Mark by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_snipershot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfImmolationTrap]: {\n\t\t\tname: 'Glyph of Immolation Trap',\n\t\t\tdescription: 'Decreases the duration of the effect from your Immolation Trap by 6 sec., but damage while active is increased by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_flameshock.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfKillShot]: {\n\t\t\tname: 'Glyph of Kill Shot',\n\t\t\tdescription: 'Reduces the cooldown of Kill Shot by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_assassinate2.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfMending]: {\n\t\t\tname: 'Glyph of Mending',\n\t\t\tdescription: 'Increases the healing done by your Mend Pet ability by 40%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_mendpet.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfMultiShot]: {\n\t\t\tname: 'Glyph of Multi-Shot',\n\t\t\tdescription: 'Decreases the cooldown of Multi-Shot by 1 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_upgrademoonglaive.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfRapidFire]: {\n\t\t\tname: 'Glyph of Rapid Fire',\n\t\t\tdescription: 'Increases the haste from Rapid Fire by an additional 8%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_runningshot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfRaptorStrike]: {\n\t\t\tname: 'Glyph of Raptor Strike',\n\t\t\tdescription: 'Reduces damage taken by 20% for 3 sec after using Raptor Strike.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_meleedamage.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfScatterShot]: {\n\t\t\tname: 'Glyph of Scatter Shot',\n\t\t\tdescription: 'Increases the range of Scatter Shot by 3 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_golemstormbolt.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfSerpentSting]: {\n\t\t\tname: 'Glyph of Serpent Sting',\n\t\t\tdescription: 'Increases the duration of your Serpent Sting by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_quickshot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfSnakeTrap]: {\n\t\t\tname: 'Glyph of Snake Trap',\n\t\t\tdescription: 'Snakes from your Snake Trap take 90% reduced damage from area of effect spells.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_snaketrap.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfSteadyShot]: {\n\t\t\tname: 'Glyph of Steady Shot',\n\t\t\tdescription: 'Increases the damage dealt by Steady Shot by 10% when your target is afflicted with Serpent Sting.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_steadyshot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfTheBeast]: {\n\t\t\tname: 'Glyph of the Beast',\n\t\t\tdescription: 'Increases the attack power bonus of Aspect of the Beast for you and your pet by an additional 2%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mount_pinktiger.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfTheHawk]: {\n\t\t\tname: 'Glyph of the Hawk',\n\t\t\tdescription: 'Increases the haste bonus of the Improved Aspect of the Hawk effect by an additional 6%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_ravenform.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfTrueshotAura]: {\n\t\t\tname: 'Glyph of Trueshot Aura',\n\t\t\tdescription: 'While your Trueshot Aura is active, you have 10% increased critical strike chance on your Aimed Shot.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_trueshot.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfVolley]: {\n\t\t\tname: 'Glyph of Volley',\n\t\t\tdescription: 'Decreases the mana cost of Volley by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_marksmanship.jpg',\n\t\t},\n\t\t[HunterMajorGlyph.GlyphOfWyvernSting]: {\n\t\t\tname: 'Glyph of Wyvern Sting',\n\t\t\tdescription: 'Decreases the cooldown of your Wyvern Sting by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_spear_02.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[HunterMinorGlyph.GlyphOfFeignDeath]: {\n\t\t\tname: 'Glyph of Feign Death',\n\t\t\tdescription: 'Reduces the cooldown of your Feign Death spell by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feigndeath.jpg',\n\t\t},\n\t\t[HunterMinorGlyph.GlyphOfMendPet]: {\n\t\t\tname: 'Glyph of Mend Pet',\n\t\t\tdescription: 'Your Mend Pet spell increases your pet\\'s happiness slightly.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_mendpet.jpg',\n\t\t},\n\t\t[HunterMinorGlyph.GlyphOfPossessedStrength]: {\n\t\t\tname: 'Glyph of Possessed Strength',\n\t\t\tdescription: 'Increases the damage your pet inflicts while using Eyes of the Beast by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_eyeoftheowl.jpg',\n\t\t},\n\t\t[HunterMinorGlyph.GlyphOfRevivePet]: {\n\t\t\tname: 'Glyph of Revive Pet',\n\t\t\tdescription: 'Reduces the pushback suffered from damaging attacks while casting Revive Pet by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_hunter_beastsoothe.jpg',\n\t\t},\n\t\t[HunterMinorGlyph.GlyphOfScareBeast]: {\n\t\t\tname: 'Glyph of Scare Beast',\n\t\t\tdescription: 'Reduces the pushback suffered from damaging attacks while casting Scare Beast by 75%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_druid_cower.jpg',\n\t\t},\n\t\t[HunterMinorGlyph.GlyphOfThePack]: {\n\t\t\tname: 'Glyph of the Pack',\n\t\t\tdescription: 'Increases the range of your Aspect of the Pack ability by 15 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mount_jungletiger.jpg',\n\t\t},\n\t},\n};\n","import { MageTalents, MageMajorGlyph, MageMinorGlyph } from '../proto/mage.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport MageTalentJson from './trees/mage.json';\n\nexport const mageTalentsConfig: TalentsConfig<MageTalents> = newTalentsConfig(MageTalentJson);\n\nexport const mageGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[MageMajorGlyph.GlyphOfArcaneBarrage]: {\n\t\t\tname: 'Glyph of Arcane Barrage',\n\t\t\tdescription: 'Reduces the mana cost of Arcane Barrage by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_arcanebarrage.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfArcaneBlast]: {\n\t\t\tname: 'Glyph of Arcane Blast',\n\t\t\tdescription: 'Increases the damage from your Arcane Blast buff by 3%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_arcane_blast.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfArcaneExplosion]: {\n\t\t\tname: 'Glyph of Arcane Explosion',\n\t\t\tdescription: 'Reduces mana cost of Arcane Explosion by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_wispsplode.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfArcaneMissiles]: {\n\t\t\tname: 'Glyph of Arcane Missiles',\n\t\t\tdescription: 'Increases the critical strike damage bonus of Arcane Missiles by 25%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_starfall.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfArcanePower]: {\n\t\t\tname: 'Glyph of Arcane Power',\n\t\t\tdescription: 'Increases the duration of Arcane Power by 3 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfBlink]: {\n\t\t\tname: 'Glyph of Blink',\n\t\t\tdescription: 'Increases the distance you travel with the Blink spell by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_arcane_blink.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfDeepFreeze]: {\n\t\t\tname: 'Glyph of Deep Freeze',\n\t\t\tdescription: 'Increases the range of Deep Freeze by 10 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_deepfreeze.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfEternalWater]: {\n\t\t\tname: 'Glyph of Eternal Water',\n\t\t\tdescription: 'Your Summon Water Elemental now lasts indefinitely, but your Water Elemental can no longer cast Freeze.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_summonwaterelemental_2.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfEvocation]: {\n\t\t\tname: 'Glyph of Evocation',\n\t\t\tdescription: 'Your Evocation ability also causes you to regain 60% of your health over its duration.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_purge.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfFireBlast]: {\n\t\t\tname: 'Glyph of Fire Blast',\n\t\t\tdescription: 'Increases the critical strike chance of Fire Blast by 50% when the target is stunned or incapacitated.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_fireball.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfFireball]: {\n\t\t\tname: 'Glyph of Fireball',\n\t\t\tdescription: 'Reduces the casting time of your Fireball spell by 0.15 sec, but removes the damage over time effect.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_flamebolt.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfFrostNova]: {\n\t\t\tname: 'Glyph of Frost Nova',\n\t\t\tdescription: 'Your Frost Nova targets can take an additional 20% damage before the Frost Nova effect automatically breaks.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostnova.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfFrostbolt]: {\n\t\t\tname: 'Glyph of Frostbolt',\n\t\t\tdescription: 'Increases the damage dealt by Frostbolt by 5%, but removes the slowing effect.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostbolt02.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfFrostfire]: {\n\t\t\tname: 'Glyph of Frostfire',\n\t\t\tdescription: 'Increases the initial damage dealt by Frostfire Bolt by 2% and its critical strike chance by 2%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_frostfirebolt.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfIceArmor]: {\n\t\t\tname: 'Glyph of Ice Armor',\n\t\t\tdescription: 'Your Ice Armor and Frost Armor spells grant an additional 50% armor and resistance.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostarmor02.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfIceBarrier]: {\n\t\t\tname: 'Glyph of Ice Barrier',\n\t\t\tdescription: 'Increases the amount of damage absorbed by your Ice Barrier by 30%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_ice_lament.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfIceBlock]: {\n\t\t\tname: 'Glyph of Ice Block',\n\t\t\tdescription: 'Your Frost Nova cooldown is now reset every time you use Ice Block.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frost.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfIceLance]: {\n\t\t\tname: 'Glyph of Ice Lance',\n\t\t\tdescription: 'Your Ice Lance now causes 4 times damage against frozen targets higher level than you instead of triple damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostblast.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfIcyVeins]: {\n\t\t\tname: 'Glyph of Icy Veins',\n\t\t\tdescription: 'Your Icy Veins ability also removes all movement slowing and cast time slowing effects.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_coldhearted.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfInvisibility]: {\n\t\t\tname: 'Glyph of Invisibility',\n\t\t\tdescription: 'Increases the duration of the Invisibility effect by 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_invisibility.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfLivingBomb]: {\n\t\t\tname: 'Glyph of Living Bomb',\n\t\t\tdescription: 'The periodic damage from your Living Bomb can now be critical strikes.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_livingbomb.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfMageArmor]: {\n\t\t\tname: 'Glyph of Mage Armor',\n\t\t\tdescription: 'Your Mage Armor spell grants an additional 20% mana regeneration while casting.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magearmor.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfManaGem]: {\n\t\t\tname: 'Glyph of Mana Gem',\n\t\t\tdescription: 'Increases the mana received from using a mana gem by 40%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_gem_stone_01.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfMirrorImage]: {\n\t\t\tname: 'Glyph of Mirror Image',\n\t\t\tdescription: 'Your Mirror Image spell now creates a 4th copy.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfMoltenArmor]: {\n\t\t\tname: 'Glyph of Molten Armor',\n\t\t\tdescription: 'Your Molten Armor grants an additional 20% of your spirit as critical strike rating.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_mage_moltenarmor.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfPolymorph]: {\n\t\t\tname: 'Glyph of Polymorph',\n\t\t\tdescription: 'Your Polymorph spell also removes all damage over time effects from the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_polymorph.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfRemoveCurse]: {\n\t\t\tname: 'Glyph of Remove Curse',\n\t\t\tdescription: 'Your Remove Curse spell also makes the target immune to all curses for 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_removecurse.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfScorch]: {\n\t\t\tname: 'Glyph of Scorch',\n\t\t\tdescription: 'Increases the damage of your Scorch spell by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_soulburn.jpg',\n\t\t},\n\t\t[MageMajorGlyph.GlyphOfWaterElemental]: {\n\t\t\tname: 'Glyph of Water Elemental',\n\t\t\tdescription: 'Reduces the cooldown of your Summon Water Elemental spell by 30 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_summonwaterelemental_2.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[MageMinorGlyph.GlyphOfArcaneIntellect]: {\n\t\t\tname: 'Glyph of Arcane Intellect',\n\t\t\tdescription: 'Reduces the mana cost of your Arcane Intellect and Arcane Brilliance spells by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_magicalsentry.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfBlastWave]: {\n\t\t\tname: 'Glyph of Blast Wave',\n\t\t\tdescription: 'The mana cost of your Blast Wave spell is reduced by 15%, but it no longer knocks enemies back.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism_02.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfFireWard]: {\n\t\t\tname: 'Glyph of Fire Ward',\n\t\t\tdescription: 'You have an additional 5% chance to reflect Fire spells while your Fire Ward is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_firearmor.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfFrostArmor]: {\n\t\t\tname: 'Glyph of Frost Armor',\n\t\t\tdescription: 'Increases the duration of your Frost Armor and Ice Armor spells by 30 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostarmor02.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfFrostWard]: {\n\t\t\tname: 'Glyph of Frost Ward',\n\t\t\tdescription: 'You have an additional 5% chance to reflect Frost spells while your Frost Ward is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostward.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfSlowFall]: {\n\t\t\tname: 'Glyph of Slow Fall',\n\t\t\tdescription: 'Your Slow Fall spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magic_featherfall.jpg',\n\t\t},\n\t\t[MageMinorGlyph.GlyphOfThePenguin]: {\n\t\t\tname: 'Glyph of the Penguin',\n\t\t\tdescription: 'Your Polymorph: Sheep spell polymorphs the target into a penguin instead.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_penguinpet.jpg',\n\t\t},\n\t},\n};\n","import { PaladinTalents, PaladinMajorGlyph, PaladinMinorGlyph } from '../proto/paladin.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport PaladinTalentJson from './trees/paladin.json';\n\nexport const paladinTalentsConfig: TalentsConfig<PaladinTalents> = newTalentsConfig(PaladinTalentJson);\n\nexport const paladinGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[PaladinMajorGlyph.GlyphOfAvengerSShield]: {\n\t\t\tname: 'Glyph of Avenger\\'s Shield',\n\t\t\tdescription: 'Your Avenger\\'s Shield hits 2 fewer targets, but for 100% more damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_avengersshield.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfAvengingWrath]: {\n\t\t\tname: 'Glyph of Avenging Wrath',\n\t\t\tdescription: 'Reduces the cooldown of your Hammer of Wrath spell by 50% while Avenging Wrath is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_avenginewrath.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfBeaconOfLight]: {\n\t\t\tname: 'Glyph of Beacon of Light',\n\t\t\tdescription: 'Increases the duration of Beacon of Light by 30 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_paladin_beaconoflight.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfCleansing]: {\n\t\t\tname: 'Glyph of Cleansing',\n\t\t\tdescription: 'Reduces the mana cost of your Cleanse and Purify spells by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_purify.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfConsecration]: {\n\t\t\tname: 'Glyph of Consecration',\n\t\t\tdescription: 'Increases the duration and cooldown of Consecration by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_innerfire.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfCrusaderStrike]: {\n\t\t\tname: 'Glyph of Crusader Strike',\n\t\t\tdescription: 'Reduces the mana cost of your Crusader Strike ability by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_crusaderstrike.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfDivinePlea]: {\n\t\t\tname: 'Glyph of Divine Plea',\n\t\t\tdescription: 'While Divine Plea is active, you take 3% reduced damage from all sources.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_aspiration.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfDivineStorm]: {\n\t\t\tname: 'Glyph of Divine Storm',\n\t\t\tdescription: 'Your Divine Storm now heals for an additional 15% of the damage it causes.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_paladin_divinestorm.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfDivinity]: {\n\t\t\tname: 'Glyph of Divinity',\n\t\t\tdescription: 'Your Lay on Hands grants twice as much mana as normal and also grants you as much mana as it grants your target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfExorcism]: {\n\t\t\tname: 'Glyph of Exorcism',\n\t\t\tdescription: 'Increases damage done by Exorcism by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism_02.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfFlashOfLight]: {\n\t\t\tname: 'Glyph of Flash of Light',\n\t\t\tdescription: 'Your Flash of Light has an additional 5% critical strike chance.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_flashheal.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHammerOfJustice]: {\n\t\t\tname: 'Glyph of Hammer of Justice',\n\t\t\tdescription: 'Increases your Hammer of Justice range by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofmight.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHammerOfTheRighteous]: {\n\t\t\tname: 'Glyph of Hammer of the Righteous',\n\t\t\tdescription: 'Your Hammer of the Righteous hits 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_paladin_hammeroftherighteous.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHammerOfWrath]: {\n\t\t\tname: 'Glyph of Hammer of Wrath',\n\t\t\tdescription: 'Reduces the mana cost of Hammer of Wrath by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_thunderclap.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHolyLight]: {\n\t\t\tname: 'Glyph of Holy Light',\n\t\t\tdescription: 'Your Holy Light grants 10% of its heal amount to up to 5 friendly targets within 8 yards of the initial target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_holybolt.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHolyShock]: {\n\t\t\tname: 'Glyph of Holy Shock',\n\t\t\tdescription: 'Reduces the cooldown of Holy Shock by 1 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_searinglight.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfHolyWrath]: {\n\t\t\tname: 'Glyph of Holy Wrath',\n\t\t\tdescription: 'Reduces the cooldown of your Holy Wrath spell by 15 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfJudgement]: {\n\t\t\tname: 'Glyph of Judgement',\n\t\t\tdescription: 'Your Judgements deal 10% more damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_paladin_judgementred.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfRighteousDefense]: {\n\t\t\tname: 'Glyph of Righteous Defense',\n\t\t\tdescription: 'Increases the chance for your Righteous Defense and Hand of Reckoning abilities to work successfully by 8% on each target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_shoulder_37.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSalvation]: {\n\t\t\tname: 'Glyph of Salvation',\n\t\t\tdescription: 'When you cast Hand of Salvation on yourself, it also reduces damage taken by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofsalvation.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSealOfCommand]: {\n\t\t\tname: 'Glyph of Seal of Command',\n\t\t\tdescription: 'You gain 8% of your base mana each time you use a Judgement with Seal of Command active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_innerrage.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSealOfLight]: {\n\t\t\tname: 'Glyph of Seal of Light',\n\t\t\tdescription: 'While Seal of Light is active, the effect of your healing spells is increased by 5%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_healingaura.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSealOfRighteousness]: {\n\t\t\tname: 'Glyph of Seal of Righteousness',\n\t\t\tdescription: 'Increases the damage done by Seal of Righteousness by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_thunderbolt.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSealOfVengeance]: {\n\t\t\tname: 'Glyph of Seal of Vengeance',\n\t\t\tdescription: 'Your Seal of Vengeance or Seal of Corruption also grants 10 expertise while active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofvengeance.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSealOfWisdom]: {\n\t\t\tname: 'Glyph of Seal of Wisdom',\n\t\t\tdescription: 'While Seal of Wisdom is active, the cost of your healing spells is reduced by 5%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_righteousnessaura.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfShieldOfRighteousness]: {\n\t\t\tname: 'Glyph of Shield of Righteousness',\n\t\t\tdescription: 'Reduces the mana cost of Shield of Righteousness by 80%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_paladin_shieldofvengeance.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfSpiritualAttunement]: {\n\t\t\tname: 'Glyph of Spiritual Attunement',\n\t\t\tdescription: 'Increases the amount of mana gained from your Spiritual Attunement spell by an additional 2%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_revivechampion.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfTurnEvil]: {\n\t\t\tname: 'Glyph of Turn Evil',\n\t\t\tdescription: 'Reduces the casting time of your Turn Evil spell by 100%, but increases the cooldown by 8 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_turnundead.jpg',\n\t\t},\n\t\t[PaladinMajorGlyph.GlyphOfReckoning]: {\n\t\t\tname: 'Glyph of Reckoning',\n\t\t\tdescription: 'Your Hand of Reckoning spell no longer taunts the target and can deal damage to untauntable targets.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_unyieldingfaith.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[PaladinMinorGlyph.GlyphOfBlessingOfKings]: {\n\t\t\tname: 'Glyph of Blessing of Kings',\n\t\t\tdescription: 'Reduces the mana cost of your Blessing of Kings and Greater Blessing of Kings spells by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magic_magearmor.jpg',\n\t\t},\n\t\t[PaladinMinorGlyph.GlyphOfBlessingOfMight]: {\n\t\t\tname: 'Glyph of Blessing of Might',\n\t\t\tdescription: 'Increases the duration of your Blessing of Might spell by 20 min when cast on yourself.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_fistofjustice.jpg',\n\t\t},\n\t\t[PaladinMinorGlyph.GlyphOfBlessingOfWisdom]: {\n\t\t\tname: 'Glyph of Blessing of Wisdom',\n\t\t\tdescription: 'Increases the duration of your Blessing of Wisdom spell by 20 min when cast on yourself.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_sealofwisdom.jpg',\n\t\t},\n\t\t[PaladinMinorGlyph.GlyphOfLayOnHands]: {\n\t\t\tname: 'Glyph of Lay on Hands',\n\t\t\tdescription: 'Reduces the cooldown of your Lay on Hands spell by 5 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg',\n\t\t},\n\t\t[PaladinMinorGlyph.GlyphOfSenseUndead]: {\n\t\t\tname: 'Glyph of Sense Undead',\n\t\t\tdescription: 'Damage against Undead increased by 1% while your Sense Undead ability is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_senseundead.jpg',\n\t\t},\n\t\t[PaladinMinorGlyph.GlyphOfTheWise]: {\n\t\t\tname: 'Glyph of the Wise',\n\t\t\tdescription: 'Reduces the mana cost of your Seal of Wisdom spell by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_righteousnessaura.jpg',\n\t\t},\n\t},\n};\n","import { PriestTalents, PriestMajorGlyph, PriestMinorGlyph } from '../proto/priest.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport PriestTalentJson from './trees/priest.json';\n\nexport const priestTalentsConfig: TalentsConfig<PriestTalents> = newTalentsConfig(PriestTalentJson);\n\nexport const priestGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[PriestMajorGlyph.GlyphOfCircleOfHealing]: {\n\t\t\tname: 'Glyph of Circle of Healing',\n\t\t\tdescription: 'Your Circle of Healing spell heals 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_circleofrenewal.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfDispelMagic]: {\n\t\t\tname: 'Glyph of Dispel Magic',\n\t\t\tdescription: 'Your Dispel Magic spell also heals your target for 3% of maximum health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_dispelmagic.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfDispersion]: {\n\t\t\tname: 'Glyph of Dispersion',\n\t\t\tdescription: 'Reduces the cooldown on Dispersion by 45 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_dispersion.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfFade]: {\n\t\t\tname: 'Glyph of Fade',\n\t\t\tdescription: 'Reduces the cooldown of your Fade spell by 9 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfFearWard]: {\n\t\t\tname: 'Glyph of Fear Ward',\n\t\t\tdescription: 'Reduces cooldown and duration of Fear Ward by 60 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_excorcism.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfFlashHeal]: {\n\t\t\tname: 'Glyph of Flash Heal',\n\t\t\tdescription: 'Reduces the mana cost of your Flash Heal by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_flashheal.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfGuardianSpirit]: {\n\t\t\tname: 'Glyph of Guardian Spirit',\n\t\t\tdescription: 'If your Guardian Spirit lasts its entire duration without being triggered, the cooldown is reset to 1 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_guardianspirit.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfHolyNova]: {\n\t\t\tname: 'Glyph of Holy Nova',\n\t\t\tdescription: 'Increases the damage and healing of your Holy Nova spell by an additional 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_holynova.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfHymnOfHope]: {\n\t\t\tname: 'Glyph of Hymn of Hope',\n\t\t\tdescription: 'Your Hymn of Hope lasts an additional 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_symbolofhope.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfInnerFire]: {\n\t\t\tname: 'Glyph of Inner Fire',\n\t\t\tdescription: 'Increases the armor from your Inner Fire spell by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_innerfire.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfLightwell]: {\n\t\t\tname: 'Glyph of Lightwell',\n\t\t\tdescription: 'Increases the amount healed by your Lightwell by 20%',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_summonlightwell.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfMassDispel]: {\n\t\t\tname: 'Glyph of Mass Dispel',\n\t\t\tdescription: 'Reduces the mana cost of Mass Dispel by 35%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_arcane_massdispel.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfMindControl]: {\n\t\t\tname: 'Glyph of Mind Control',\n\t\t\tdescription: 'Reduces the chance targets will resist or break your Mind Control spell by an additional 17%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowworddominate.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfMindFlay]: {\n\t\t\tname: 'Glyph of Mind Flay',\n\t\t\tdescription: 'Increases the damage done by your Mind Flay spell by 10% when your target is afflicted with Shadow Word: Pain.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_siphonmana.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfMindSear]: {\n\t\t\tname: 'Glyph of Mind Sear',\n\t\t\tdescription: 'Increases the radius of effect on Mind Sear by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_mindshear.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfPainSuppression]: {\n\t\t\tname: 'Glyph of Pain Suppression',\n\t\t\tdescription: 'Allows Pain Suppression to be cast while stunned.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_painsupression.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfPenance]: {\n\t\t\tname: 'Glyph of Penance',\n\t\t\tdescription: 'Reduces the cooldown of Penance by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_penance.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfPowerWordShield]: {\n\t\t\tname: 'Glyph of Power Word: Shield',\n\t\t\tdescription: 'Your Power Word: Shield also heals the target for 20% of the absorption amount.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_powerwordshield.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfPrayerOfHealing]: {\n\t\t\tname: 'Glyph of Prayer of Healing',\n\t\t\tdescription: 'Your Prayer of Healing spell also heals an additional 20% of its initial heal over 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_prayerofhealing02.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfPsychicScream]: {\n\t\t\tname: 'Glyph of Psychic Scream',\n\t\t\tdescription: 'Increases the duration of your Psychic Scream by 2 sec. and increases its cooldown by 8 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_psychicscream.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfRenew]: {\n\t\t\tname: 'Glyph of Renew',\n\t\t\tdescription: 'Reduces the duration of your Renew by 3 sec. but increases the amount healed each tick by 25%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_renew.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfScourgeImprisonment]: {\n\t\t\tname: 'Glyph of Scourge Imprisonment',\n\t\t\tdescription: 'Reduces the cast time of your Shackle Undead by 1.0 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_slow.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfShadow]: {\n\t\t\tname: 'Glyph of Shadow',\n\t\t\tdescription: 'While in Shadowform, your non-periodic spell critical strikes increase your spell power by 30% of your Spirit for 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_mindsooth.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfShadowWordDeath]: {\n\t\t\tname: 'Glyph of Shadow Word: Death',\n\t\t\tdescription: 'Targets below 35% health take an additional 10% damage from your Shadow Word: Death spell.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonicfortitude.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfShadowWordPain]: {\n\t\t\tname: 'Glyph of Shadow Word: Pain',\n\t\t\tdescription: 'The periodic damage ticks of your Shadow Word: Pain spell restore 1% of your base mana.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowwordpain.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfSmite]: {\n\t\t\tname: 'Glyph of Smite',\n\t\t\tdescription: 'Your Smite spell inflicts an additional 20% damage against targets afflicted by Holy Fire.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_holysmite.jpg',\n\t\t},\n\t\t[PriestMajorGlyph.GlyphOfSpiritOfRedemption]: {\n\t\t\tname: 'Glyph of Spirit of Redemption',\n\t\t\tdescription: 'Increases the duration of Spirit of Redemption by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_enchant_essenceeternallarge.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[PriestMinorGlyph.GlyphOfFading]: {\n\t\t\tname: 'Glyph of Fading',\n\t\t\tdescription: 'Reduces the mana cost of your Fade spell by 30%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_magic_lesserinvisibilty.jpg',\n\t\t},\n\t\t[PriestMinorGlyph.GlyphOfFortitude]: {\n\t\t\tname: 'Glyph of Fortitude',\n\t\t\tdescription: 'Reduces the mana cost of your Power Word: Fortitude and Prayer of Fortitude spells by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_wordfortitude.jpg',\n\t\t},\n\t\t[PriestMinorGlyph.GlyphOfLevitate]: {\n\t\t\tname: 'Glyph of Levitate',\n\t\t\tdescription: 'Your Levitate spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_layonhands.jpg',\n\t\t},\n\t\t[PriestMinorGlyph.GlyphOfShackleUndead]: {\n\t\t\tname: 'Glyph of Shackle Undead',\n\t\t\tdescription: 'Increases the range of your Shackle Undead spell by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_slow.jpg',\n\t\t},\n\t\t[PriestMinorGlyph.GlyphOfShadowProtection]: {\n\t\t\tname: 'Glyph of Shadow Protection',\n\t\t\tdescription: 'Increases the duration of your Shadow Protection and Prayer of Shadow Protection spells by 10 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antishadow.jpg',\n\t\t},\n\t\t[PriestMinorGlyph.GlyphOfShadowfiend]: {\n\t\t\tname: 'Glyph of Shadowfiend',\n\t\t\tdescription: 'Receive 5% of your maximum mana if your Shadowfiend dies from damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowfiend.jpg',\n\t\t},\n\t},\n};\n","import { RogueTalents, RogueMajorGlyph, RogueMinorGlyph } from '../proto/rogue.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport RogueTalentJson from './trees/rogue.json';\n\nexport const rogueTalentsConfig: TalentsConfig<RogueTalents> = newTalentsConfig(RogueTalentJson);\n\nexport const rogueGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[RogueMajorGlyph.GlyphOfAdrenalineRush]: {\n\t\t\tname: 'Glyph of Adrenaline Rush',\n\t\t\tdescription: 'Increases the duration of Adrenaline Rush by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowworddominate.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfAmbush]: {\n\t\t\tname: 'Glyph of Ambush',\n\t\t\tdescription: 'Increases the range on Ambush by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_ambush.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfBackstab]: {\n\t\t\tname: 'Glyph of Backstab',\n\t\t\tdescription: 'Your Backstab increases the duration of your Rupture effect on the target by 2 sec, up to a maximum of 6 additional sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_backstab.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfBladeFlurry]: {\n\t\t\tname: 'Glyph of Blade Flurry',\n\t\t\tdescription: 'Reduces the energy cost of Blade Flurry by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfCloakOfShadows]: {\n\t\t\tname: 'Glyph of Cloak of Shadows',\n\t\t\tdescription: 'While Cloak of Shadows is active, you take 40% less physical damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_nethercloak.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfCripplingPoison]: {\n\t\t\tname: 'Glyph of Crippling Poison',\n\t\t\tdescription: 'Increases the chance to inflict your target with Crippling Poison by an additional 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_poisonsting.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfDeadlyThrow]: {\n\t\t\tname: 'Glyph of Deadly Throw',\n\t\t\tdescription: 'Increases the slowing effect on Deadly Throw by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_throwingknife_06.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfEvasion]: {\n\t\t\tname: 'Glyph of Evasion',\n\t\t\tdescription: 'Increases the duration of Evasion by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowward.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfEviscerate]: {\n\t\t\tname: 'Glyph of Eviscerate',\n\t\t\tdescription: 'Increases the critical strike chance of Eviscerate by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_eviscerate.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfExposeArmor]: {\n\t\t\tname: 'Glyph of Expose Armor',\n\t\t\tdescription: 'Increases the duration of Expose Armor by 12 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_riposte.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfFanOfKnives]: {\n\t\t\tname: 'Glyph of Fan of Knives',\n\t\t\tdescription: 'Increases the damage done by Fan of Knives by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_fanofknives.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfFeint]: {\n\t\t\tname: 'Glyph of Feint',\n\t\t\tdescription: 'Reduces the energy cost of Feint by 20.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_feint.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfGarrote]: {\n\t\t\tname: 'Glyph of Garrote',\n\t\t\tdescription: 'Reduces the duration of your Garrote ability by 3 sec and increases the total damage it deals by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_garrote.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfGhostlyStrike]: {\n\t\t\tname: 'Glyph of Ghostly Strike',\n\t\t\tdescription: 'Increases the damage dealt by Ghostly Strike by 40% and the duration of its effect by 4 sec, but increases its cooldown by 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_curse.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfGouge]: {\n\t\t\tname: 'Glyph of Gouge',\n\t\t\tdescription: 'Reduces the energy cost of Gouge by 15.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_gouge.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfHemorrhage]: {\n\t\t\tname: 'Glyph of Hemorrhage',\n\t\t\tdescription: 'Increases the damage bonus against targets afflicted by Hemorrhage by 40%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfHungerForBlood]: {\n\t\t\tname: 'Glyph of Hunger For Blood',\n\t\t\tdescription: 'Increases the bonus damage from Hunger For Blood by 3%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_hungerforblood.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfKillingSpree]: {\n\t\t\tname: 'Glyph of Killing Spree',\n\t\t\tdescription: 'Reduces the cooldown on Killing Spree by 45 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_murderspree.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfMutilate]: {\n\t\t\tname: 'Glyph of Mutilate',\n\t\t\tdescription: 'Reduces the cost of Mutilate by 5 energy.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_shadowstrikes.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfPreparation]: {\n\t\t\tname: 'Glyph of Preparation',\n\t\t\tdescription: 'Your Preparation ability also instantly resets the cooldown of Blade Flurry, Dismantle, and Kick.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antishadow.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfRupture]: {\n\t\t\tname: 'Glyph of Rupture',\n\t\t\tdescription: 'Increases the duration of Rupture by 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_rupture.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfSap]: {\n\t\t\tname: 'Glyph of Sap',\n\t\t\tdescription: 'Increases the duration of Sap by 20 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_sap.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfShadowDance]: {\n\t\t\tname: 'Glyph of Shadow Dance',\n\t\t\tdescription: 'Increases the duration of Shadow Dance by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_shadowdance.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfSinisterStrike]: {\n\t\t\tname: 'Glyph of Sinister Strike',\n\t\t\tdescription: 'Your Sinister Strike critical strikes have a 50% chance to add an additional combo point.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_ritualofsacrifice.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfSliceAndDice]: {\n\t\t\tname: 'Glyph of Slice and Dice',\n\t\t\tdescription: 'Increases the duration of Slice and Dice by 3 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_slicedice.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfSprint]: {\n\t\t\tname: 'Glyph of Sprint',\n\t\t\tdescription: 'Increases the movement speed of your Sprint ability by an additional 30%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_sprint.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfTricksOfTheTrade]: {\n\t\t\tname: 'Glyph of Tricks of the Trade',\n\t\t\tdescription: 'The bonus damage and threat redirection granted by your Tricks of the Trade ability lasts an additional 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_tricksofthetrade.jpg',\n\t\t},\n\t\t[RogueMajorGlyph.GlyphOfVigor]: {\n\t\t\tname: 'Glyph of Vigor',\n\t\t\tdescription: 'Vigor grants an additional 10 maximum energy.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_earthbindtotem.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[RogueMinorGlyph.GlyphOfBlurredSpeed]: {\n\t\t\tname: 'Glyph of Blurred Speed',\n\t\t\tdescription: 'Enables you to walk on water while your Sprint ability is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_sprint.jpg',\n\t\t},\n\t\t[RogueMinorGlyph.GlyphOfDistract]: {\n\t\t\tname: 'Glyph of Distract',\n\t\t\tdescription: 'Increases the range of your Distract ability by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_distract.jpg',\n\t\t},\n\t\t[RogueMinorGlyph.GlyphOfPickLock]: {\n\t\t\tname: 'Glyph of Pick Lock',\n\t\t\tdescription: 'Reduces the cast time of your Pick Lock ability by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_moonkey.jpg',\n\t\t},\n\t\t[RogueMinorGlyph.GlyphOfPickPocket]: {\n\t\t\tname: 'Glyph of Pick Pocket',\n\t\t\tdescription: 'Increases the range of your Pick Pocket ability by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_bag_11.jpg',\n\t\t},\n\t\t[RogueMinorGlyph.GlyphOfSafeFall]: {\n\t\t\tname: 'Glyph of Safe Fall',\n\t\t\tdescription: 'Increases the distance your Safe Fall ability allows you to fall without taking damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_feather_01.jpg',\n\t\t},\n\t\t[RogueMinorGlyph.GlyphOfVanish]: {\n\t\t\tname: 'Glyph of Vanish',\n\t\t\tdescription: 'Increases your movement speed by 30% while the Vanish effect is active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_vanish.jpg',\n\t\t},\n\t},\n};\n","import { ShamanTalents, ShamanMajorGlyph, ShamanMinorGlyph } from '../proto/shaman.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport ShamanTalentJson from './trees/shaman.json';\n\nexport const shamanTalentsConfig: TalentsConfig<ShamanTalents> = newTalentsConfig(ShamanTalentJson);\n\nexport const shamanGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[ShamanMajorGlyph.GlyphOfChainHeal]: {\n\t\t\tname: 'Glyph of Chain Heal',\n\t\t\tdescription: 'Your Chain Heal heals 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavegreater.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfChainLightning]: {\n\t\t\tname: 'Glyph of Chain Lightning',\n\t\t\tdescription: 'Your Chain Lightning strikes 1 additional target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_chainlightning.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfEarthShield]: {\n\t\t\tname: 'Glyph of Earth Shield',\n\t\t\tdescription: 'Increases the amount healed by your Earth Shield by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_skinofearth.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfEarthlivingWeapon]: {\n\t\t\tname: 'Glyph of Earthliving Weapon',\n\t\t\tdescription: 'Increases the chance for your Earthliving weapon to trigger by 5%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_earthlivingweapon.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfElementalMastery]: {\n\t\t\tname: 'Glyph of Elemental Mastery',\n\t\t\tdescription: 'Reduces the cooldown of your Elemental Mastery ability by 30 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_wispheal.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFeralSpirit]: {\n\t\t\tname: 'Glyph of Feral Spirit',\n\t\t\tdescription: 'Your spirit wolves gain an additional 30% of your attack power.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_feralspirit.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFireElementalTotem]: {\n\t\t\tname: 'Glyph of Fire Elemental Totem',\n\t\t\tdescription: 'Reduces the cooldown of your Fire Elemental Totem by 5 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_elemental_totem.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFireNova]: {\n\t\t\tname: 'Glyph of Fire Nova',\n\t\t\tdescription: 'Reduces the cooldown of your Fire Nova spell by 3 seconds.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_sealoffire.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFlameShock]: {\n\t\t\tname: 'Glyph of Flame Shock',\n\t\t\tdescription: 'Increases the critical strike damage bonus of your Flame Shock damage by 60%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_flameshock.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFlametongueWeapon]: {\n\t\t\tname: 'Glyph of Flametongue Weapon',\n\t\t\tdescription: 'Increases your spell critical strike chance by 2% on each of your weapons with Flametongue Weapon active.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_flametounge.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfFrostShock]: {\n\t\t\tname: 'Glyph of Frost Shock',\n\t\t\tdescription: 'Increases the duration of your Frost Shock by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_frostshock.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfHealingStreamTotem]: {\n\t\t\tname: 'Glyph of Healing Stream Totem',\n\t\t\tdescription: 'Your Healing Stream Totem heals for an additional 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_spear_04.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfHealingWave]: {\n\t\t\tname: 'Glyph of Healing Wave',\n\t\t\tdescription: 'Your Healing Wave also heals you for 20% of the healing effect when you heal someone else.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_magicimmunity.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfHex]: {\n\t\t\tname: 'Glyph of Hex',\n\t\t\tdescription: 'Increases the damage your Hex target can take before the Hex effect is removed by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_hex.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfLava]: {\n\t\t\tname: 'Glyph of Lava',\n\t\t\tdescription: 'Your Lava Burst spell gains an additional 10% of your spellpower.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_lavaburst.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfLavaLash]: {\n\t\t\tname: 'Glyph of Lava Lash',\n\t\t\tdescription: 'Damage on your Lava Lash is increased by an additional 10% if your weapon is enchanted with Flametongue.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_shaman_lavalash.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfLesserHealingWave]: {\n\t\t\tname: 'Glyph of Lesser Healing Wave',\n\t\t\tdescription: 'Your Lesser Healing Wave heals for 20% more if the target is also affected by Earth Shield.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavelesser.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfLightningBolt]: {\n\t\t\tname: 'Glyph of Lightning Bolt',\n\t\t\tdescription: 'Increases the damage dealt by Lightning Bolt by 4%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightning.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfLightningShield]: {\n\t\t\tname: 'Glyph of Lightning Shield',\n\t\t\tdescription: 'Increases the damage from Lightning Shield by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_lightningshield.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfManaTide]: {\n\t\t\tname: 'Glyph of Mana Tide',\n\t\t\tdescription: 'Your Mana Tide Totem grants an additional 1% of each target\\'s maximum mana each time it pulses.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_healingwavegreater.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfRiptide]: {\n\t\t\tname: 'Glyph of Riptide',\n\t\t\tdescription: 'Increases the duration of Riptide by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_riptide.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfShocking]: {\n\t\t\tname: 'Glyph of Shocking',\n\t\t\tdescription: 'Reduces your global cooldown when casting your shock spells by 0.5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_earthshock.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfStoneclawTotem]: {\n\t\t\tname: 'Glyph of Stoneclaw Totem',\n\t\t\tdescription: 'Your Stoneclaw Totem also places a damage absorb shield on you, equal to 4 times the strength of the shield it places on your totems.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_stoneclawtotem.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfStormstrike]: {\n\t\t\tname: 'Glyph of Stormstrike',\n\t\t\tdescription: 'Increases the Nature damage bonus from your Stormstrike ability by an additional 8%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_shaman_stormstrike.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfThunder]: {\n\t\t\tname: 'Glyph of Thunder',\n\t\t\tdescription: 'Reduces the cooldown on Thunderstorm by 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_thunderstorm.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfTotemOfWrath]: {\n\t\t\tname: 'Glyph of Totem of Wrath',\n\t\t\tdescription: 'When you cast Totem of Wrath, you gain 30% of the totem\\'s bonus spell power for 5 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_totemofwrath.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfWaterMastery]: {\n\t\t\tname: 'Glyph of Water Mastery',\n\t\t\tdescription: 'Increases the passive mana regeneration of your Water Shield spell by 30%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_shaman_watershield.jpg',\n\t\t},\n\t\t[ShamanMajorGlyph.GlyphOfWindfuryWeapon]: {\n\t\t\tname: 'Glyph of Windfury Weapon',\n\t\t\tdescription: 'Increases the chance per swing for Windfury Weapon to trigger by 2%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_cyclone.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[ShamanMinorGlyph.GlyphOfAstralRecall]: {\n\t\t\tname: 'Glyph of Astral Recall',\n\t\t\tdescription: 'Cooldown of your Astral Recall spell reduced by 7.5 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_astralrecal.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfGhostWolf]: {\n\t\t\tname: 'Glyph of Ghost Wolf',\n\t\t\tdescription: 'Your Ghost Wolf form regenerates an additional 1% of your maximum health every 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_spiritwolf.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfRenewedLife]: {\n\t\t\tname: 'Glyph of Renewed Life',\n\t\t\tdescription: 'Your Reincarnation spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfThunderstorm]: {\n\t\t\tname: 'Glyph of Thunderstorm',\n\t\t\tdescription: 'Increases the mana you receive from your Thunderstorm spell by 2%, but it no longer knocks enemies back.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shaman_thunderstorm.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfWaterBreathing]: {\n\t\t\tname: 'Glyph of Water Breathing',\n\t\t\tdescription: 'Your Water Breathing spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonbreath.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfWaterShield]: {\n\t\t\tname: 'Glyph of Water Shield',\n\t\t\tdescription: 'Increases the number of charges on your Water Shield spell by 1.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_shaman_watershield.jpg',\n\t\t},\n\t\t[ShamanMinorGlyph.GlyphOfWaterWalking]: {\n\t\t\tname: 'Glyph of Water Walking',\n\t\t\tdescription: 'Your Water Walking spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_windwalkon.jpg',\n\t\t},\n\t},\n};\n","import { WarlockTalents, WarlockMajorGlyph, WarlockMinorGlyph } from '../proto/warlock.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport WarlockTalentJson from './trees/warlock.json';\n\nexport const warlockTalentsConfig: TalentsConfig<WarlockTalents> = newTalentsConfig(WarlockTalentJson);\n\nexport const warlockGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[WarlockMajorGlyph.GlyphOfChaosBolt]: {\n\t\t\tname: 'Glyph of Chaos Bolt',\n\t\t\tdescription: 'Reduces the cooldown on Chaos Bolt by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warlock_chaosbolt.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfConflagrate]: {\n\t\t\tname: 'Glyph of Conflagrate',\n\t\t\tdescription: 'Your Conflagrate spell no longer consumes your Immolate or Shadowflame spell from the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_fireball.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfCorruption]: {\n\t\t\tname: 'Glyph of Corruption',\n\t\t\tdescription: 'Your Corruption spell has a 4% chance to cause you to enter a Shadow Trance state after damaging the opponent. The Shadow Trance state reduces the casting time of your next Shadow Bolt spell by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_abominationexplosion.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfCurseOfAgony]: {\n\t\t\tname: 'Glyph of Curse of Agony',\n\t\t\tdescription: 'Increases the duration of your Curse of Agony by 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_curseofsargeras.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfDeathCoil]: {\n\t\t\tname: 'Glyph of Death Coil',\n\t\t\tdescription: 'Increases the duration of your Death Coil by 0.5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfDemonicCircle]: {\n\t\t\tname: 'Glyph of Demonic Circle',\n\t\t\tdescription: 'Reduces the cooldown on Demonic Circle by 4 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demoniccirclesummon.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfFear]: {\n\t\t\tname: 'Glyph of Fear',\n\t\t\tdescription: 'Increases the damage your Fear target can take before the Fear effect is removed by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_possession.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfFelguard]: {\n\t\t\tname: 'Glyph of Felguard',\n\t\t\tdescription: 'Increases the Felguard\\'s total attack power by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelguard.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfFelhunter]: {\n\t\t\tname: 'Glyph of Felhunter',\n\t\t\tdescription: 'When your Felhunter uses Devour Magic, you will also be healed for that amount.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonfelhunter.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfHaunt]: {\n\t\t\tname: 'Glyph of Haunt',\n\t\t\tdescription: 'The bonus damage granted by your Haunt spell is increased by an additional 3%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warlock_haunt.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfHealthFunnel]: {\n\t\t\tname: 'Glyph of Health Funnel',\n\t\t\tdescription: 'Reduces the pushback suffered from damaging attacks while channeling your Health Funnel spell by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfHealthstone]: {\n\t\t\tname: 'Glyph of Healthstone',\n\t\t\tdescription: 'You receive 30% more healing from using a healthstone.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_stone_04.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfHowlOfTerror]: {\n\t\t\tname: 'Glyph of Howl of Terror',\n\t\t\tdescription: 'Reduces the cooldown on your Howl of Terror spell by 8 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathscream.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfImmolate]: {\n\t\t\tname: 'Glyph of Immolate',\n\t\t\tdescription: 'Increases the periodic damage of your Immolate by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_immolation.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfImp]: {\n\t\t\tname: 'Glyph of Imp',\n\t\t\tdescription: 'Increases the damage done by your Imp\\'s Firebolt spell by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonimp.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfIncinerate]: {\n\t\t\tname: 'Glyph of Incinerate',\n\t\t\tdescription: 'Increases the damage done by Incinerate by 5%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_burnout.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfLifeTap]: {\n\t\t\tname: 'Glyph of Life Tap',\n\t\t\tdescription: 'When you use Life Tap or Dark Pact, you gain 20% of your Spirit as spell power for 40 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_burningspirit.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfMetamorphosis]: {\n\t\t\tname: 'Glyph of Metamorphosis',\n\t\t\tdescription: 'Increases the duration of your Metamorphosis by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonform.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfQuickDecay]: {\n\t\t\tname: 'Glyph of Quick Decay',\n\t\t\tdescription: 'Your haste now reduces the time between periodic damage ticks of your Corruption spell.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_abominationexplosion.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfSearingPain]: {\n\t\t\tname: 'Glyph of Searing Pain',\n\t\t\tdescription: 'Increases the critical strike bonus of your Searing Pain by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_fire_soulburn.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfShadowBolt]: {\n\t\t\tname: 'Glyph of Shadow Bolt',\n\t\t\tdescription: 'Reduces the mana cost of your Shadow Bolt by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadowbolt.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfShadowburn]: {\n\t\t\tname: 'Glyph of Shadowburn',\n\t\t\tdescription: 'Increases the critical strike chance of Shadowburn by 20% when the target is below 35% health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_scourgebuild.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfShadowflame]: {\n\t\t\tname: 'Glyph of Shadowflame',\n\t\t\tdescription: 'Your Shadowflame also applies a 70% movement speed slow on its victims.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warlock_shadowflame.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfSiphonLife]: {\n\t\t\tname: 'Glyph of Siphon Life',\n\t\t\tdescription: 'Increases the healing you receive from your Siphon Life talent by 25%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_requiem.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfSoulLink]: {\n\t\t\tname: 'Glyph of Soul Link',\n\t\t\tdescription: 'Increases the percentage of damage shared via your Soul Link by an additional 5%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_gathershadows.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfSoulstone]: {\n\t\t\tname: 'Glyph of Soulstone',\n\t\t\tdescription: 'Increases the amount of health you gain from resurrecting via a Soulstone by 300%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_soulgem.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfSuccubus]: {\n\t\t\tname: 'Glyph of Succubus',\n\t\t\tdescription: 'Your Succubus\\'s Seduction ability also removes all damage over time effects from the target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonsuccubus.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfUnstableAffliction]: {\n\t\t\tname: 'Glyph of Unstable Affliction',\n\t\t\tdescription: 'Decreases the casting time of your Unstable Affliction by 0.2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_unstableaffliction_3.jpg',\n\t\t},\n\t\t[WarlockMajorGlyph.GlyphOfVoidwalker]: {\n\t\t\tname: 'Glyph of Voidwalker',\n\t\t\tdescription: 'Increases your Voidwalker\\'s total Stamina by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_summonvoidwalker.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[WarlockMinorGlyph.GlyphOfCurseOfExhausion]: {\n\t\t\tname: 'Glyph of Curse of Exhausion',\n\t\t\tdescription: 'Increases the range of your Curse of Exhaustion spell by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_grimward.jpg',\n\t\t},\n\t\t[WarlockMinorGlyph.GlyphOfDrainSoul]: {\n\t\t\tname: 'Glyph of Drain Soul',\n\t\t\tdescription: 'Your Drain Soul ability occasionally creates an additional soul shard.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_haunting.jpg',\n\t\t},\n\t\t[WarlockMinorGlyph.GlyphOfSubjugateDemon]: {\n\t\t\tname: 'Glyph of Subjugate Demon',\n\t\t\tdescription: 'Reduces the cast time of your Subjugate Demon spell by 50%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_enslavedemon.jpg',\n\t\t},\n\t\t[WarlockMinorGlyph.GlyphOfKilrogg]: {\n\t\t\tname: 'Glyph of Kilrogg',\n\t\t\tdescription: 'Increases the movement speed of your Eye of Kilrogg by 50% and allows it to fly in areas where flying mounts are enabled.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_evileye.jpg',\n\t\t},\n\t\t[WarlockMinorGlyph.GlyphOfSouls]: {\n\t\t\tname: 'Glyph of Souls',\n\t\t\tdescription: 'Reduces the mana cost of your Ritual of Souls spell by 70%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_shadesofdarkness.jpg',\n\t\t},\n\t\t[WarlockMinorGlyph.GlyphOfUnendingBreath]: {\n\t\t\tname: 'Glyph of Unending Breath',\n\t\t\tdescription: 'Increases the swim speed of targets affected by your Unending Breath spell by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_demonbreath.jpg',\n\t\t},\n\t},\n};\n","import { WarriorTalents, WarriorMajorGlyph, WarriorMinorGlyph } from '../proto/warrior.js';\n\nimport { GlyphsConfig } from './glyphs_picker.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport WarriorTalentJson from './trees/warrior.json';\n\nexport const warriorTalentsConfig: TalentsConfig<WarriorTalents> = newTalentsConfig(WarriorTalentJson);\n\nexport const warriorGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[WarriorMajorGlyph.GlyphOfBarbaricInsults]: {\n\t\t\tname: 'Glyph of Barbaric Insults',\n\t\t\tdescription: 'Your Mocking Blow ability generates 100% additional threat.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfBladestorm]: {\n\t\t\tname: 'Glyph of Bladestorm',\n\t\t\tdescription: 'Reduces the cooldown on Bladestorm by 15 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_bladestorm.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfBlocking]: {\n\t\t\tname: 'Glyph of Blocking',\n\t\t\tdescription: 'Increases your block value by 10% for 10 sec after using your Shield Slam ability.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_shield_05.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfBloodthirst]: {\n\t\t\tname: 'Glyph of Bloodthirst',\n\t\t\tdescription: 'Increases the healing you receive from your Bloodthirst ability by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_bloodlust.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfCleaving]: {\n\t\t\tname: 'Glyph of Cleaving',\n\t\t\tdescription: 'Increases the number of targets your Cleave hits by 1.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_cleave.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfDevastate]: {\n\t\t\tname: 'Glyph of Devastate',\n\t\t\tdescription: 'Your Devastate ability now applies two stacks of Sunder Armor.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_sword_11.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfEnragedRegeneration]: {\n\t\t\tname: 'Glyph of Enraged Regeneration',\n\t\t\tdescription: 'Your Enraged Regeneration ability heals for an additional 10% of your health over its duration.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_focusedrage.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfExecution]: {\n\t\t\tname: 'Glyph of Execution',\n\t\t\tdescription: 'Your Execute ability deals damage as if you had 10 additional rage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_sword_48.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfHamstring]: {\n\t\t\tname: 'Glyph of Hamstring',\n\t\t\tdescription: 'Gives your Hamstring ability a 10% chance to immobilize the target for 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_shockwave.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfHeroicStrike]: {\n\t\t\tname: 'Glyph of Heroic Strike',\n\t\t\tdescription: 'You gain 10 rage when you critically strike with your Heroic Strike ability.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_ambush.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfIntervene]: {\n\t\t\tname: 'Glyph of Intervene',\n\t\t\tdescription: 'Increases the number attacks you intercept for your Intervene target by 1.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_victoryrush.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfLastStand]: {\n\t\t\tname: 'Glyph of Last Stand',\n\t\t\tdescription: 'Reduces the cooldown of your Last Stand ability by 1 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_holy_ashestoashes.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfMortalStrike]: {\n\t\t\tname: 'Glyph of Mortal Strike',\n\t\t\tdescription: 'Increases the damage of your Mortal Strike ability by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_savageblow.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfOverpower]: {\n\t\t\tname: 'Glyph of Overpower',\n\t\t\tdescription: 'Adds a 100% chance to enable your Overpower when your attacks are parried.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_meleedamage.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfRapidCharge]: {\n\t\t\tname: 'Glyph of Rapid Charge',\n\t\t\tdescription: 'Reduces the cooldown of your Charge ability by 7%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_charge.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfRending]: {\n\t\t\tname: 'Glyph of Rending',\n\t\t\tdescription: 'Increases the duration of your Rend ability by 6 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_gouge.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfResonatingPower]: {\n\t\t\tname: 'Glyph of Resonating Power',\n\t\t\tdescription: 'Reduces the rage cost of your Thunder Clap ability by 5.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_thunderclap.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfRevenge]: {\n\t\t\tname: 'Glyph of Revenge',\n\t\t\tdescription: 'After using Revenge, your next Heroic Strike costs no rage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_revenge.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfShieldWall]: {\n\t\t\tname: 'Glyph of Shield Wall',\n\t\t\tdescription: 'Reduces the cooldown on Shield Wall by 2 min, but Shield Wall now only reduces damage taken by 40%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shieldwall.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfShockwave]: {\n\t\t\tname: 'Glyph of Shockwave',\n\t\t\tdescription: 'Reduces the cooldown on Shockwave by 3 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shockwave.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfSpellReflection]: {\n\t\t\tname: 'Glyph of Spell Reflection',\n\t\t\tdescription: 'Reduces the cooldown on Spell Reflection by 1 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shieldreflection.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfSunderArmor]: {\n\t\t\tname: 'Glyph of Sunder Armor',\n\t\t\tdescription: 'Your Sunder Armor ability affects a second nearby target.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_sunder.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfSweepingStrikes]: {\n\t\t\tname: 'Glyph of Sweeping Strikes',\n\t\t\tdescription: 'Reduces the rage cost of your Sweeping Strikes ability by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_rogue_slicedice.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfTaunt]: {\n\t\t\tname: 'Glyph of Taunt',\n\t\t\tdescription: 'Increases the chance for your Taunt ability to succeed by 8%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_reincarnation.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfVictoryRush]: {\n\t\t\tname: 'Glyph of Victory Rush',\n\t\t\tdescription: 'Your Victory Rush ability has a 30% increased critical strike chance.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_devastate.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfVigilance]: {\n\t\t\tname: 'Glyph of Vigilance',\n\t\t\tdescription: 'Your Vigilance ability transfers an additional 5% of your target\\'s threat to you.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_vigilance.jpg',\n\t\t},\n\t\t[WarriorMajorGlyph.GlyphOfWhirlwind]: {\n\t\t\tname: 'Glyph of Whirlwind',\n\t\t\tdescription: 'Reduces the cooldown of your Whirlwind by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_whirlwind.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[WarriorMinorGlyph.GlyphOfBattle]: {\n\t\t\tname: 'Glyph of Battle',\n\t\t\tdescription: 'Increases the duration of your Battle Shout ability by 2 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_battleshout.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfBloodrage]: {\n\t\t\tname: 'Glyph of Bloodrage',\n\t\t\tdescription: 'Reduces the health cost of your Bloodrage ability by 100%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_racial_bloodrage.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfCharge]: {\n\t\t\tname: 'Glyph of Charge',\n\t\t\tdescription: 'Increases the range of your Charge ability by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_charge.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfCommand]: {\n\t\t\tname: 'Glyph of Command',\n\t\t\tdescription: 'Increases the duration of your Commanding Shout ability by 2 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_rallyingcry.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfEnduringVictory]: {\n\t\t\tname: 'Glyph of Enduring Victory',\n\t\t\tdescription: 'Increases the window of opportunity in which you can use Victory Rush by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_devastate.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfMockingBlow]: {\n\t\t\tname: 'Glyph of Mocking Blow',\n\t\t\tdescription: 'Increases the damage of your Mocking Blow ability by 25%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_punishingblow.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfThunderClap]: {\n\t\t\tname: 'Glyph of Thunder Clap',\n\t\t\tdescription: 'Increases the radius of your Thunder Clap ability by 2 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_thunderclap.jpg',\n\t\t},\n\t\t[WarriorMinorGlyph.GlyphOfShatteringThrow]: {\n\t\t\tname: 'Glyph of Shattering Throw',\n\t\t\tdescription: 'Your Shattering Throw is now instant and can be used in any stance, but it no longer removes invulnerabilities and cannot be used on players or player-controlled targets.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_warrior_shatteringthrow.jpg',\n\t\t},\n\t},\n};\n","import { Spec } from '../proto/common.js';\nimport { DeathknightTalents, DeathknightMajorGlyph, DeathknightMinorGlyph } from '../proto/deathknight.js';\nimport { Player } from '../player.js';\n\nimport { GlyphsConfig, GlyphsPicker } from './glyphs_picker.js';\nimport { TalentsConfig, TalentsPicker, newTalentsConfig } from './talents_picker.js';\n\nimport DkTalentsJson from './trees/deathknight.json';\n\nexport const deathknightTalentsConfig: TalentsConfig<DeathknightTalents> = newTalentsConfig(DkTalentsJson);\n\nexport const deathknightGlyphsConfig: GlyphsConfig = {\n\tmajorGlyphs: {\n\t\t[DeathknightMajorGlyph.GlyphOfAntiMagicShell]: {\n\t\t\tname: 'Glyph of Anti-Magic Shell',\n\t\t\tdescription: 'Increases the duration of your Anti-Magic Shell by 2 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_antimagicshell.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfBloodStrike]: {\n\t\t\tname: 'Glyph of Blood Strike',\n\t\t\tdescription: 'Your Blood Strike causes an additional 20% damage to snared targets.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_deathstrike.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfBoneShield]: {\n\t\t\tname: 'Glyph of Bone Shield',\n\t\t\tdescription: 'Adds 1 additional charge to your Bone Shield.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_chest_leather_13.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfChainsOfIce]: {\n\t\t\tname: 'Glyph of Chains of Ice',\n\t\t\tdescription: 'Your Chains of Ice also causes 144 to 156 Frost damage, increased by your attack power.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_chainsofice.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDancingRuneWeapon]: {\n\t\t\tname: 'Glyph of Dancing Rune Weapon',\n\t\t\tdescription: 'Increases the duration of Dancing Rune Weapon by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_sword_07.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDarkCommand]: {\n\t\t\tname: 'Glyph of Dark Command',\n\t\t\tdescription: 'Increases the chance for your Dark Command ability to work successfully by 8%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_nature_shamanrage.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDarkDeath]: {\n\t\t\tname: 'Glyph of Dark Death',\n\t\t\tdescription: 'Increases the damage or healing done by Death Coil by 15%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDeathAndDecay]: {\n\t\t\tname: 'Glyph of Death and Decay',\n\t\t\tdescription: 'Damage of your Death and Decay spell increased by 20%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathanddecay.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDeathGrip]: {\n\t\t\tname: 'Glyph of Death Grip',\n\t\t\tdescription: 'When you deal a killing blow that grants honor or experience, the cooldown of your Death Grip is refreshed.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_strangulate.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDeathStrike]: {\n\t\t\tname: 'Glyph of Death Strike',\n\t\t\tdescription: 'Increases your Death Strike\\'s damage by 1% for every 1 runic power you currently have (up to a maximum of 25%). The runic power is not consumed by this effect.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_butcher2.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfDisease]: {\n\t\t\tname: 'Glyph of Disease',\n\t\t\tdescription: 'Your Pestilence ability now refreshes disease durations and secondary effects of diseases on your primary target back to their maximum duration.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_plaguecloud.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfFrostStrike]: {\n\t\t\tname: 'Glyph of Frost Strike',\n\t\t\tdescription: 'Reduces the cost of your Frost Strike by 8 Runic Power.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_empowerruneblade2.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfHeartStrike]: {\n\t\t\tname: 'Glyph of Heart Strike',\n\t\t\tdescription: 'Your Heart Strike also reduces the movement speed of your target by 50% for 10 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_weapon_shortblade_40.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfHowlingBlast]: {\n\t\t\tname: 'Glyph of Howling Blast',\n\t\t\tdescription: 'Your Howling Blast ability now infects your targets with Frost Fever.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_frost_arcticwinds.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfHungeringCold]: {\n\t\t\tname: 'Glyph of Hungering Cold',\n\t\t\tdescription: 'Reduces the cost of Hungering Cold by 40 runic power.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_staff_15.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfIceboundFortitude]: {\n\t\t\tname: 'Glyph of Icebound Fortitude',\n\t\t\tdescription: 'Your Icebound Fortitude now always grants at least 40% damage reduction, regardless of your defense skill.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_iceboundfortitude.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfIcyTouch]: {\n\t\t\tname: 'Glyph of Icy Touch',\n\t\t\tdescription: 'Your Frost Fever disease deals 20% additional damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_icetouch.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfObliterate]: {\n\t\t\tname: 'Glyph of Obliterate',\n\t\t\tdescription: 'Increases the damage of your Obliterate ability by 25%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_classicon.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfPlagueStrike]: {\n\t\t\tname: 'Glyph of Plague Strike',\n\t\t\tdescription: 'Your Plague Strike does 20% additional damage.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_empowerruneblade.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfRuneStrike]: {\n\t\t\tname: 'Glyph of Rune Strike',\n\t\t\tdescription: 'Increases the critical strike chance of your Rune Strike by 10%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_darkconviction.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfRuneTap]: {\n\t\t\tname: 'Glyph of Rune Tap',\n\t\t\tdescription: 'Your Rune Tap now heals you for an additional 1% of your maximum health, and also heals your party for 10% of their maximum health.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_runetap.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfScourgeStrike]: {\n\t\t\tname: 'Glyph of Scourge Strike',\n\t\t\tdescription: 'Your Scourge Strike increases the duration of your diseases on the target by 3 sec, up to a maximum of 9 additional seconds.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_scourgestrike.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfStrangulate]: {\n\t\t\tname: 'Glyph of Strangulate',\n\t\t\tdescription: 'Reduces the cooldown of your Strangulate by 20 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_soulleech_3.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfTheGhoul]: {\n\t\t\tname: 'Glyph of the Ghoul',\n\t\t\tdescription: 'Your Ghoul receives an additional 40% of your Strength and 40% of your Stamina.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_animatedead.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfUnbreakableArmor]: {\n\t\t\tname: 'Glyph of Unbreakable Armor',\n\t\t\tdescription: 'Increases the total armor granted by Unbreakable Armor to 30%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_armor_helm_plate_naxxramas_raidwarrior_c_01.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfUnholyBlight]: {\n\t\t\tname: 'Glyph of Unholy Blight',\n\t\t\tdescription: 'Increases the damage done by Unholy Blight by 40%.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_contagion.jpg',\n\t\t},\n\t\t[DeathknightMajorGlyph.GlyphOfVampiricBlood]: {\n\t\t\tname: 'Glyph of Vampiric Blood',\n\t\t\tdescription: 'Increases the duration of your Vampiric Blood by 5 sec.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_lifedrain.jpg',\n\t\t},\n\t},\n\tminorGlyphs: {\n\t\t[DeathknightMinorGlyph.GlyphOfBloodTap]: {\n\t\t\tname: 'Glyph of Blood Tap',\n\t\t\tdescription: 'Your Blood Tap no longer causes damage to you.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_deathknight_bloodtap.jpg',\n\t\t},\n\t\t[DeathknightMinorGlyph.GlyphOfCorpseExplosion]: {\n\t\t\tname: 'Glyph of Corpse Explosion',\n\t\t\tdescription: 'Increases the radius of effect on Corpse Explosion by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/ability_creature_disease_02.jpg',\n\t\t},\n\t\t[DeathknightMinorGlyph.GlyphOfDeathSEmbrace]: {\n\t\t\tname: 'Glyph of Death\\'s Embrace',\n\t\t\tdescription: 'Your Death Coil refunds 20 runic power when used to heal.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_deathcoil.jpg',\n\t\t},\n\t\t[DeathknightMinorGlyph.GlyphOfHornOfWinter]: {\n\t\t\tname: 'Glyph of Horn of Winter',\n\t\t\tdescription: 'Increases the duration of your Horn of Winter ability by 1 min.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_horn_02.jpg',\n\t\t},\n\t\t[DeathknightMinorGlyph.GlyphOfPestilence]: {\n\t\t\tname: 'Glyph of Pestilence',\n\t\t\tdescription: 'Increases the radius of your Pestilence effect by 5 yards.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_plaguecloud.jpg',\n\t\t},\n\t\t[DeathknightMinorGlyph.GlyphOfRaiseDead]: {\n\t\t\tname: 'Glyph of Raise Dead',\n\t\t\tdescription: 'Your Raise Dead spell no longer requires a reagent.',\n\t\t\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/large/spell_shadow_animatedead.jpg',\n\t\t},\n\t},\n};\n","import { ItemQuality } from './proto/common.js';\n\nconst itemQualityCssClasses: Record<ItemQuality, string> = {\n\t[ItemQuality.ItemQualityJunk]: 'item-quality-junk',\n\t[ItemQuality.ItemQualityCommon]: 'item-quality-common',\n\t[ItemQuality.ItemQualityUncommon]: 'item-quality-uncommon',\n\t[ItemQuality.ItemQualityRare]: 'item-quality-rare',\n\t[ItemQuality.ItemQualityEpic]: 'item-quality-epic',\n\t[ItemQuality.ItemQualityLegendary]: 'item-quality-legendary',\n};\nexport function setItemQualityCssClass(elem: HTMLElement, quality: ItemQuality | null) {\n\tObject.values(itemQualityCssClasses).forEach(cssClass => elem.classList.remove(cssClass));\n\n\tif (quality) {\n\t\telem.classList.add(itemQualityCssClasses[quality]);\n\t}\n}\n","import { Component } from './component.js';\n\nexport type CloseButtonConfig = {\n\tfixed?: boolean,\n}\n\nconst DEFAULT_CONFIG = {\n\tfixed: false,\n}\n\nexport class CloseButton extends Component {\n\tprivate readonly config: CloseButtonConfig;\n\n\tconstructor(parent: HTMLElement, onClick: () => void, config: CloseButtonConfig = {}) {\n\t\tsuper(parent, 'close-button', document.createElement('a'));\n\t\tthis.config = {...DEFAULT_CONFIG, ...config};\n\n\t\tif (this.config.fixed)\n\t\t\tthis.rootElem.classList.add('position-fixed');\n\n\t\tthis.rootElem.setAttribute('href', 'javascript:void(0)');\n\t\tthis.rootElem.setAttribute('role', 'button');\n\t\tthis.rootElem.addEventListener('click', () => onClick());\n\n\t\tthis.rootElem.insertAdjacentHTML('beforeend', '<i class=\"fas fa-times fa-2xl ms-1\"></i>');\n\t}\n}\n","import { CloseButton, CloseButtonConfig } from './close_button';\nimport { Component } from './component';\n\nimport { Modal } from 'bootstrap';\n\ntype ModalSize = 'sm' | 'md' | 'lg' | 'xl';\n\ntype BaseModalConfig = {\n\tcloseButton?: CloseButtonConfig,\n\t// Whether or not to add a modal-footer element\n\tfooter?: boolean,\n\t// Whether or not to add a modal-header element\n\theader?: boolean,\n\t// Whether or not to allow modal contents to extend past the screen height.\n\t// When true, the modal is fixed to the screen height and body contents will scroll.\n\tscrollContents?: boolean,\n\t// Specify the size of the modal\n\tsize?: ModalSize,\n\t// A title for the modal\n\ttitle?: string | null,\n};\n\nconst DEFAULT_CONFIG = {\n\tcloseButton: {},\n\tfooter: false,\n\theader: true,\n\tscrollContents: false,\n\tsize: 'lg' as ModalSize,\n\ttitle: null,\n}\n\nexport class BaseModal extends Component {\n\treadonly modalConfig: BaseModalConfig;\n\n\treadonly modal: Modal;\n\treadonly dialog: HTMLElement;\n\treadonly header: HTMLElement | undefined;\n\treadonly body: HTMLElement;\n\treadonly footer: HTMLElement | undefined;\n\n\tconstructor(parent: HTMLElement, cssClass: string, config: BaseModalConfig = {}) {\n\t\tsuper(parent, 'modal');\n\t\tthis.modalConfig = {...DEFAULT_CONFIG, ...config};\n\n\t\tconst modalSizeKlass = this.modalConfig.size && this.modalConfig.size != 'md' ? `modal-${this.modalConfig.size}` : '';\n\n\t\tthis.rootElem.classList.add('fade');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"modal-dialog ${cssClass} ${modalSizeKlass}\">\n\t\t\t\t<div class=\"modal-content\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.dialog = this.rootElem.querySelector('.modal-dialog') as HTMLElement;\n\n\t\tif (this.modalConfig.scrollContents) {\n\t\t\tthis.dialog.classList.add('modal-overflow-scroll');\n\t\t}\n\n\t\tconst container = this.rootElem.querySelector('.modal-content') as HTMLElement;\n\n\t\tif (this.modalConfig.header) {\n\t\t\tthis.header = document.createElement('div');\n\t\t\tthis.header.classList.add('modal-header');\n\t\t\tcontainer.appendChild(this.header);\n\n\t\t\tif (this.modalConfig.title) {\n\t\t\t\tthis.header.insertAdjacentHTML('afterbegin', `<h5 class=\"modal-title\">${this.modalConfig.title}</h5>`);\n\t\t\t}\n\t\t}\n\n\t\tthis.body = document.createElement('div');\n\t\tthis.body.classList.add('modal-body');\n\t\tcontainer.appendChild(this.body);\n\n\t\tthis.addCloseButton();\n\n\t\tif (this.modalConfig.footer) {\n\t\t\tthis.footer = document.createElement('div');\n\t\t\tthis.footer.classList.add('modal-footer');\n\t\t\tcontainer.appendChild(this.footer);\n\t\t}\n\n\t\tthis.modal = new Modal(this.rootElem);\n\t\tthis.open();\n\t\t\n\t\tthis.rootElem.addEventListener('hidden.bs.modal', (event) => {\n\t\t\tthis.rootElem.remove();\n\t\t})\n\t}\n\n\tprivate addCloseButton() {\n\t\tnew CloseButton(this.header ? this.header : this.body, () => this.close(), this.modalConfig.closeButton);\n\t}\n\n\topen() {\n\t\t// Hacks for better looking multi modals\n\t\tthis.rootElem.addEventListener('show.bs.modal', async event => {\n\t\t\t// Prevent the event from bubbling up to parent modals\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Wait for the backdrop to be injected into the DOM\n\t\t\tconst backdrop = await new Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (this.modal._backdrop._element)\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tresolve(this.modal._backdrop._element)\n\t\t\t\t}, 100);\n\t\t\t}) as HTMLElement;\n\t\t\t// Then move it from <body> to the parent element\n\t\t\tthis.rootElem.insertAdjacentElement('afterend', backdrop);\n\t\t});\n\n\t\tthis.rootElem.addEventListener('hide.bs.modal', (event) => {\n\t\t\t// Prevent the event from bubbling up to parent modals\n\t\t\tevent.stopImmediatePropagation();\n\t\t});\n\n\t\tthis.rootElem.addEventListener('hidden.bs.modal', (event) => {\n\t\t\t// Prevent the event from bubbling up to parent modals\n\t\t\t// Do not use stopImmediatePropagation here. It prevents Bootstrap from removing the modal,\n\t\t\t// leading to other issues\n\t\t\tevent.stopPropagation();\n\t\t})\n\n\t\tthis.modal.show();\n\t}\n\n\tclose() {\n\t\tthis.modal.hide();\n\t}\n}\n","import { Glyphs } from '../proto/common.js';\nimport { ItemQuality } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { setItemQualityCssClass } from '../css_utils.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { stringComparator } from '../utils.js';\n\nimport { Component } from '../components/component.js';\nimport { Input } from '../components/input.js';\nimport { BaseModal } from '../components/base_modal.js';\n\nexport type GlyphConfig = {\n\tname: string,\n\tdescription: string,\n\ticonUrl: string,\n};\n\nexport type GlyphsConfig = {\n\tmajorGlyphs: Record<number, GlyphConfig>,\n\tminorGlyphs: Record<number, GlyphConfig>,\n};\n\ninterface GlyphData {\n\tid: number,\n\tname: string,\n\tdescription: string,\n\ticonUrl: string,\n\tquality: ItemQuality | null,\n}\n\nconst emptyGlyphData: GlyphData = {\n\tid: 0,\n\tname: 'Empty',\n\tdescription: '',\n\ticonUrl: 'https://wow.zamimg.com/images/wow/icons/medium/inventoryslot_empty.jpg',\n\tquality: null,\n};\n\nexport class GlyphsPicker extends Component {\n\tprivate readonly glyphsConfig: GlyphsConfig;\n\n\tmajorGlyphPickers: Array<GlyphPicker> = [];\n\tminorGlyphPickers: Array<GlyphPicker> = [];\n\n\tconstructor(parent: HTMLElement, player: Player<any>, glyphsConfig: GlyphsConfig) {\n\t\tsuper(parent, 'glyphs-picker-root');\n\t\tthis.glyphsConfig = glyphsConfig;\n\n\t\tconst majorGlyphs = Object.keys(glyphsConfig.majorGlyphs).map(idStr => Number(idStr));\n\t\tconst minorGlyphs = Object.keys(glyphsConfig.minorGlyphs).map(idStr => Number(idStr));\n\n\t\tconst majorGlyphsData = majorGlyphs.map(glyph => this.getGlyphData(glyph));\n\t\tconst minorGlyphsData = minorGlyphs.map(glyph => this.getGlyphData(glyph));\n\n\t\tmajorGlyphsData.sort((a, b) => stringComparator(a.name, b.name));\n\t\tminorGlyphsData.sort((a, b) => stringComparator(a.name, b.name));\n\n\t\tthis.majorGlyphPickers = (['major1', 'major2', 'major3'] as Array<keyof Glyphs>).map(glyphField => new GlyphPicker(this.rootElem, player, majorGlyphsData, glyphField, true));\n\t\tthis.minorGlyphPickers = (['minor1', 'minor2', 'minor3'] as Array<keyof Glyphs>).map(glyphField => new GlyphPicker(this.rootElem, player, minorGlyphsData, glyphField, false));\n\t}\n\n\t// In case we ever want to parse description from tooltip HTML.\n\t//static descriptionRegex = /<a href=\\\\\"\\/wotlk.*>(.*)<\\/a>/g;\n\tgetGlyphData(glyph: number): GlyphData {\n\t\tconst glyphConfig = this.glyphsConfig.majorGlyphs[glyph] || this.glyphsConfig.minorGlyphs[glyph];\n\n\t\treturn {\n\t\t\tid: glyph,\n\t\t\tname: glyphConfig.name,\n\t\t\tdescription: glyphConfig.description,\n\t\t\ticonUrl: glyphConfig.iconUrl,\n\t\t\tquality: ItemQuality.ItemQualityCommon,\n\t\t};\n\t}\n}\n\nclass GlyphPicker extends Input<Player<any>, number> {\n\treadonly player: Player<any>;\n\tprivate readonly iconElem: HTMLAnchorElement;\n\n\tprivate readonly glyphOptions: Array<GlyphData>;\n\tselectedGlyph: GlyphData;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, glyphOptions: Array<GlyphData>, glyphField: keyof Glyphs, isMajor: boolean) {\n\t\tsuper(parent, 'glyph-picker-root', player, {\n\t\t\tchangedEvent: (player: Player<any>) => player.glyphsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getGlyphs()[glyphField] as number,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst glyphs = player.getGlyphs();\n\t\t\t\t(glyphs[glyphField] as number) = newValue;\n\t\t\t\tplayer.setGlyphs(eventID, glyphs);\n\t\t\t},\n\t\t});\n\t\tif (!isMajor) {\n\t\t\tthis.rootElem.classList.add('minor');\n\t\t}\n\t\tthis.player = player;\n\t\tthis.glyphOptions = glyphOptions;\n\t\tthis.selectedGlyph = emptyGlyphData;\n\n\t\tthis.rootElem.innerHTML = `<a class=\"glyph-picker-icon\"></a>`;\n\n\t\tthis.iconElem = this.rootElem.getElementsByClassName('glyph-picker-icon')[0] as HTMLAnchorElement;\n\t\tthis.iconElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst selectorModal = new GlyphSelectorModal(this.rootElem.closest('.individual-sim-ui')!, this, this.glyphOptions);\n\t\t});\n\t\tthis.iconElem.addEventListener('touchstart', event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst selectorModal = new GlyphSelectorModal(this.rootElem.closest('.individual-sim-ui')!, this, this.glyphOptions);\n\t\t});\n\t\tthis.iconElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.iconElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn this.selectedGlyph.id;\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.selectedGlyph = this.glyphOptions.find(glyphData => glyphData.id == newValue) || emptyGlyphData;\n\n\t\tthis.iconElem.style.backgroundImage = `url('${this.selectedGlyph.iconUrl}')`;\n\t\tthis.iconElem.href = this.selectedGlyph.id == 0 ? '' : ActionId.makeItemUrl(this.selectedGlyph.id);\n\t}\n}\n\nclass GlyphSelectorModal extends BaseModal {\n\tconstructor(parent: HTMLElement, glyphPicker: GlyphPicker, glyphOptions: Array<GlyphData>) {\n\t\tsuper(parent, 'glyph-modal', {title: 'Glyphs'});\n\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"input-root\">\n\t\t\t\t<input class=\"selector-modal-search form-control\" type=\"text\" placeholder=\"Search...\">\n\t\t\t</div>\n\t\t\t<ul class=\"selector-modal-list\"></ul>\n\t\t`;\n\n\t\tconst listElem = this.rootElem.getElementsByClassName('selector-modal-list')[0] as HTMLElement;\n\n\t\tglyphOptions = [emptyGlyphData].concat(glyphOptions);\n\t\tconst listItemElems = glyphOptions.map((glyphData, glyphIdx) => {\n\t\t\tconst listItemElem = document.createElement('li');\n\t\t\tlistItemElem.classList.add('selector-modal-list-item');\n\t\t\tlistElem.appendChild(listItemElem);\n\n\t\t\tlistItemElem.dataset.idx = String(glyphIdx);\n\n\t\t\tlistItemElem.innerHTML = `\n        <a class=\"selector-modal-list-item-icon\"></a>\n        <a class=\"selector-modal-list-item-name\">${glyphData.name}</a>\n\t\t\t\t<span class=\"selector-modal-list-item-description\">${glyphData.description}</span>\n      `;\n\n\t\t\t(listItemElem.children[0] as HTMLAnchorElement).href = glyphData.id == 0 ? '' : ActionId.makeItemUrl(glyphData.id);\n\t\t\t(listItemElem.children[1] as HTMLAnchorElement).href = glyphData.id == 0 ? '' : ActionId.makeItemUrl(glyphData.id);\n\t\t\tconst iconElem = listItemElem.getElementsByClassName('selector-modal-list-item-icon')[0] as HTMLImageElement;\n\t\t\ticonElem.style.backgroundImage = `url('${glyphData.iconUrl}')`;\n\n\t\t\tconst nameElem = listItemElem.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLImageElement;\n\t\t\tsetItemQualityCssClass(nameElem, glyphData.quality);\n\n\t\t\tconst onclick = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tglyphPicker.setValue(TypedEvent.nextEventID(), glyphData.id);\n\t\t\t};\n\t\t\tnameElem.addEventListener('click', onclick);\n\t\t\ticonElem.addEventListener('click', onclick);\n\n\t\t\treturn listItemElem;\n\t\t});\n\n\t\tconst updateSelected = () => {\n\t\t\tconst selectedGlyphId = glyphPicker.selectedGlyph.id;\n\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = glyphOptions[listItemIdx];\n\n\t\t\t\telem.classList.remove('active');\n\t\t\t\tif (listItemData.id == selectedGlyphId) {\n\t\t\t\t\telem.classList.add('active');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tupdateSelected();\n\n\t\tconst applyFilters = () => {\n\t\t\tlet validItemElems = listItemElems;\n\t\t\tconst selectedGlyph = glyphPicker.selectedGlyph;\n\n\t\t\tvalidItemElems = validItemElems.filter(elem => {\n\t\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\t\tconst listItemData = glyphOptions[listItemIdx];\n\n\t\t\t\tif (searchInput.value.length > 0) {\n\t\t\t\t\tconst searchQuery = searchInput.value.toLowerCase().split(\" \");\n\t\t\t\t\tconst name = listItemData.name.toLowerCase();\n\n\t\t\t\t\tvar include = true;\n\t\t\t\t\tsearchQuery.forEach(v => {\n\t\t\t\t\t\tif (!name.includes(v))\n\t\t\t\t\t\t\tinclude = false;\n\t\t\t\t\t});\n\t\t\t\t\tif (!include) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tlet numShown = 0;\n\t\t\tlistItemElems.forEach(elem => {\n\t\t\t\tif (validItemElems.includes(elem)) {\n\t\t\t\t\telem.classList.remove('hidden');\n\t\t\t\t\tnumShown++;\n\t\t\t\t\tif (numShown % 2 == 0) {\n\t\t\t\t\t\telem.classList.remove('odd');\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.classList.add('odd');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telem.classList.add('hidden');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst searchInput = this.rootElem.getElementsByClassName('selector-modal-search')[0] as HTMLInputElement;\n\t\tsearchInput.addEventListener('input', applyFilters);\n\t\tsearchInput.addEventListener(\"keyup\", ev => {\n\t\t\tif (ev.key == \"Enter\") {\n\t\t\t\tlistItemElems.find(ele => {\n\t\t\t\t\tif (ele.classList.contains(\"hidden\")) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst nameElem = ele.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLElement;\n\t\t\t\t\tnameElem.click();\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tglyphPicker.player.glyphsChangeEmitter.on(() => {\n\t\t\tapplyFilters();\n\t\t\tupdateSelected();\n\t\t});\n\t}\n}\n","import { Player } from '../player.js';\nimport { Class } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport {\n\tSpecTalents,\n\tspecToClass,\n\tspecTypeFunctions,\n} from '../proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { druidTalentsConfig, druidGlyphsConfig } from './druid.js';\nimport { hunterTalentsConfig, hunterGlyphsConfig } from './hunter.js';\nimport { mageTalentsConfig, mageGlyphsConfig } from './mage.js';\nimport { paladinTalentsConfig, paladinGlyphsConfig } from './paladin.js';\nimport { priestTalentsConfig, priestGlyphsConfig } from './priest.js';\nimport { rogueTalentsConfig, rogueGlyphsConfig } from './rogue.js';\nimport { shamanTalentsConfig, shamanGlyphsConfig } from './shaman.js';\nimport { warlockTalentsConfig, warlockGlyphsConfig } from './warlock.js';\nimport { warriorTalentsConfig, warriorGlyphsConfig } from './warrior.js';\nimport { deathknightTalentsConfig, deathknightGlyphsConfig } from './deathknight.js';\nimport { TalentsConfig, TalentsPicker } from './talents_picker.js';\nimport { GlyphsConfig, GlyphsPicker } from './glyphs_picker.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\n\nexport function newTalentsPicker(parent: HTMLElement, player: Player<any>): TalentsPicker<Player<any>, any> {\n\treturn new TalentsPicker(parent, player, {\n\t\ttrees: classTalentsConfig[player.getClass()],\n\t\tchangedEvent: (player: Player<any>) => player.talentsChangeEmitter,\n\t\tgetValue: (player: Player<any>) => player.getTalentsString(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: string) => {\n\t\t\tplayer.setTalentsString(eventID, newValue);\n\t\t},\n\t\tpointsPerRow: 5,\n\t\tmaxPoints: Mechanics.MAX_TALENT_POINTS,\n\t});\n}\n\nexport function newGlyphsPicker(parent: HTMLElement, player: Player<any>): GlyphsPicker {\n\treturn new GlyphsPicker(parent, player, classGlyphsConfig[player.getClass()]);\n}\n\nexport const classTalentsConfig: Record<Class, TalentsConfig<any>> = {\n\t[Class.ClassUnknown]: [],\n\t[Class.ClassDeathknight]: deathknightTalentsConfig,\n\t[Class.ClassDruid]: druidTalentsConfig,\n\t[Class.ClassShaman]: shamanTalentsConfig,\n\t[Class.ClassHunter]: hunterTalentsConfig,\n\t[Class.ClassMage]: mageTalentsConfig,\n\t[Class.ClassRogue]: rogueTalentsConfig,\n\t[Class.ClassPaladin]: paladinTalentsConfig,\n\t[Class.ClassPriest]: priestTalentsConfig,\n\t[Class.ClassWarlock]: warlockTalentsConfig,\n\t[Class.ClassWarrior]: warriorTalentsConfig,\n};\n\nexport const classGlyphsConfig: Record<Class, GlyphsConfig> = {\n\t[Class.ClassUnknown]: { majorGlyphs: [], minorGlyphs: [] },\n\t[Class.ClassDeathknight]: deathknightGlyphsConfig,\n\t[Class.ClassDruid]: druidGlyphsConfig,\n\t[Class.ClassShaman]: shamanGlyphsConfig,\n\t[Class.ClassHunter]: hunterGlyphsConfig,\n\t[Class.ClassMage]: mageGlyphsConfig,\n\t[Class.ClassRogue]: rogueGlyphsConfig,\n\t[Class.ClassPaladin]: paladinGlyphsConfig,\n\t[Class.ClassPriest]: priestGlyphsConfig,\n\t[Class.ClassWarlock]: warlockGlyphsConfig,\n\t[Class.ClassWarrior]: warriorGlyphsConfig,\n};\n\nexport function talentSpellIdsToTalentString(playerClass: Class, talentIds: Array<number>): string {\n\tconst talentsConfig = classTalentsConfig[playerClass];\n\n\tconst talentsStr = talentsConfig.map(treeConfig => {\n\t\tconst treeStr = treeConfig.talents.map(talentConfig => {\n\t\t\tconst spellIdIndex = talentConfig.spellIds.findIndex(spellId => talentIds.includes(spellId));\n\t\t\tif (spellIdIndex == -1) {\n\t\t\t\treturn '0';\n\t\t\t} else {\n\t\t\t\treturn String(spellIdIndex + 1);\n\t\t\t}\n\t\t}).join('').replace(/0+$/g, '');\n\n\t\treturn treeStr;\n\t}).join('-').replace(/-+$/g, '');\n\n\treturn talentsStr\n}\n\nexport function playerTalentStringToProto<SpecType extends Spec>(spec: Spec, talentString: string): SpecTalents<SpecType> {\n\tconst specFunctions = specTypeFunctions[spec];\n\tconst proto = specFunctions.talentsCreate() as SpecTalents<SpecType>;\n\tconst talentsConfig = classTalentsConfig[specToClass[spec]] as TalentsConfig<SpecTalents<SpecType>>;\n\n\treturn talentStringToProto(proto, talentString, talentsConfig);\n}\n\nexport function talentStringToProto<TalentsProto>(proto: TalentsProto, talentString: string, talentsConfig: TalentsConfig<TalentsProto>): TalentsProto {\n\ttalentString.split('-').forEach((treeString, treeIdx) => {\n\t\tconst treeConfig = talentsConfig[treeIdx];\n\t\t[...treeString].forEach((talentString, i) => {\n\t\t\tconst talentConfig = treeConfig.talents[i];\n\t\t\tconst points = parseInt(talentString);\n\t\t\tif (talentConfig.fieldName) {\n\t\t\t\tif (talentConfig.maxPoints == 1) {\n\t\t\t\t\t(proto[talentConfig.fieldName as keyof TalentsProto] as unknown as boolean) = points == 1;\n\t\t\t\t} else {\n\t\t\t\t\t(proto[talentConfig.fieldName as keyof TalentsProto] as unknown as number) = points;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\treturn proto;\n}\n\n// Note that this function will fail if any of the talent names are not defined. TODO: Remove that condition\n// once all talents are migrated to wrath and use all fields.\nexport function protoToTalentString<TalentsProto>(proto: TalentsProto, talentsConfig: TalentsConfig<TalentsProto>): string {\n\treturn talentsConfig.map(treeConfig => {\n\t\treturn treeConfig.talents\n\t\t\t.map(talentConfig => String(Number(proto[(talentConfig.fieldName as keyof TalentsProto)!])))\n\t\t\t.join('').replace(/0+$/g, '');\n\t}).join('-').replace(/-+$/g, '');\n}\n","import {\n\tClass,\n\tConsumes,\n\tCooldowns,\n\tFaction,\n\tGemColor,\n\tGlyphs,\n\tHandType,\n\tHealingModel,\n\tIndividualBuffs,\n\tItemSlot,\n\tItemSwap,\n\tProfession,\n\tPseudoStat,\n\tRace,\n\tRaidTarget,\n\tRangedWeaponType,\n\tSimDatabase,\n\tSimEnchant,\n\tSimGem,\n\tSimItem,\n\tSpec,\n\tStat,\n\tUnitStats,\n\tWeaponType,\n} from './proto/common.js';\nimport {\n\tAPLRotation,\n} from './proto/apl.js';\nimport {\n\tDungeonDifficulty,\n\tExpansion,\n\tRaidFilterOption,\n\tSourceFilterOption,\n\tUIEnchant as Enchant,\n\tUIGem as Gem,\n\tUIItem as Item,\n\tUIItem_FactionRestriction,\n} from './proto/ui.js';\n\nimport { PlayerStats } from './proto/api.js';\nimport { Player as PlayerProto } from './proto/api.js';\nimport { StatWeightsResult } from './proto/api.js';\nimport { EquippedItem, getWeaponDPS } from './proto_utils/equipped_item.js';\n\nimport { playerTalentStringToProto } from './talents/factory.js';\nimport { Gear, ItemSwapGear } from './proto_utils/gear.js';\nimport {\n\tisUnrestrictedGem,\n\tgemEligibleForSocket,\n\tgemMatchesSocket,\n} from './proto_utils/gems.js';\nimport { Stats } from './proto_utils/stats.js';\n\nimport {\n\tAL_CATEGORY_HARD_MODE,\n\tClassSpecs,\n\tSpecRotation,\n\tSpecTalents,\n\tSpecTypeFunctions,\n\tSpecOptions,\n\tcanEquipEnchant,\n\tcanEquipItem,\n\tclassColors,\n\temptyRaidTarget,\n\tenchantAppliesToItem,\n\tgetEligibleEnchantSlots,\n\tgetEligibleItemSlots,\n\tgetTalentTree,\n\tgetTalentTreeIcon,\n\tgetMetaGemEffectEP,\n\tisTankSpec,\n\tnewRaidTarget,\n\tplayerToSpec,\n\traceToFaction,\n\tspecToClass,\n\tspecToEligibleRaces,\n\tspecTypeFunctions,\n\twithSpecProto,\n} from './proto_utils/utils.js';\n\nimport { getLanguageCode } from './constants/lang.js';\nimport { Listener } from './typed_event.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Party, MAX_PARTY_SIZE } from './party.js';\nimport { Raid } from './raid.js';\nimport { Sim } from './sim.js';\nimport { sum } from './utils.js';\n\n// Manages all the gear / consumes / other settings for a single Player.\nexport class Player<SpecType extends Spec> {\n\treadonly sim: Sim;\n\tprivate party: Party | null;\n\tprivate raid: Raid | null;\n\n\treadonly spec: Spec;\n\tprivate name: string = '';\n\tprivate buffs: IndividualBuffs = IndividualBuffs.create();\n\tprivate consumes: Consumes = Consumes.create();\n\tprivate bonusStats: Stats = new Stats();\n\tprivate gear: Gear = new Gear({});\n\t//private bulkEquipmentSpec: BulkEquipmentSpec = BulkEquipmentSpec.create();\n\tprivate itemSwapGear: ItemSwapGear = new ItemSwapGear();\n\tprivate race: Race;\n\tprivate profession1: Profession = 0;\n\tprivate profession2: Profession = 0;\n\tprivate rotation: SpecRotation<SpecType>;\n\taplRotation: APLRotation = APLRotation.create();\n\tprivate talentsString: string = '';\n\tprivate glyphs: Glyphs = Glyphs.create();\n\tprivate specOptions: SpecOptions<SpecType>;\n\tprivate cooldowns: Cooldowns = Cooldowns.create();\n\tprivate inFrontOfTarget: boolean = false;\n\tprivate distanceFromTarget: number = 0;\n\tprivate healingModel: HealingModel = HealingModel.create();\n\tprivate healingEnabled: boolean = false;\n\n\tprivate itemEPCache: Map<number, number> = new Map<number, number>();\n\tprivate gemEPCache: Map<number, number> = new Map<number, number>();\n\tprivate enchantEPCache: Map<number, number> = new Map<number, number>();\n\tprivate talents: SpecTalents<SpecType> | null = null;\n\n\treadonly specTypeFunctions: SpecTypeFunctions<SpecType>;\n\n\tprivate static readonly numEpRatios = 6;\n\tprivate epRatios: Array<number> = new Array<number>(Player.numEpRatios).fill(0);\n\tprivate epWeights: Stats = new Stats();\n\tprivate currentStats: PlayerStats = PlayerStats.create();\n\n\treadonly nameChangeEmitter = new TypedEvent<void>('PlayerName');\n\treadonly buffsChangeEmitter = new TypedEvent<void>('PlayerBuffs');\n\treadonly consumesChangeEmitter = new TypedEvent<void>('PlayerConsumes');\n\treadonly bonusStatsChangeEmitter = new TypedEvent<void>('PlayerBonusStats');\n\treadonly gearChangeEmitter = new TypedEvent<void>('PlayerGear');\n\treadonly professionChangeEmitter = new TypedEvent<void>('PlayerProfession');\n\treadonly raceChangeEmitter = new TypedEvent<void>('PlayerRace');\n\treadonly rotationChangeEmitter = new TypedEvent<void>('PlayerRotation');\n\treadonly talentsChangeEmitter = new TypedEvent<void>('PlayerTalents');\n\treadonly glyphsChangeEmitter = new TypedEvent<void>('PlayerGlyphs');\n\treadonly specOptionsChangeEmitter = new TypedEvent<void>('PlayerSpecOptions');\n\treadonly cooldownsChangeEmitter = new TypedEvent<void>('PlayerCooldowns');\n\treadonly inFrontOfTargetChangeEmitter = new TypedEvent<void>('PlayerInFrontOfTarget');\n\treadonly distanceFromTargetChangeEmitter = new TypedEvent<void>('PlayerDistanceFromTarget');\n\treadonly healingModelChangeEmitter = new TypedEvent<void>('PlayerHealingModel');\n\treadonly epWeightsChangeEmitter = new TypedEvent<void>('PlayerEpWeights');\n\n\treadonly currentStatsEmitter = new TypedEvent<void>('PlayerCurrentStats');\n\treadonly epRatiosChangeEmitter = new TypedEvent<void>('PlayerEpRatios');\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\tconstructor(spec: Spec, sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.party = null;\n\t\tthis.raid = null;\n\n\t\tthis.spec = spec;\n\t\tthis.race = specToEligibleRaces[this.spec][0];\n\t\tthis.specTypeFunctions = specTypeFunctions[this.spec] as SpecTypeFunctions<SpecType>;\n\t\tthis.rotation = this.specTypeFunctions.rotationCreate();\n\t\tthis.specOptions = this.specTypeFunctions.optionsCreate();\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.nameChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t\tthis.consumesChangeEmitter,\n\t\t\tthis.bonusStatsChangeEmitter,\n\t\t\tthis.gearChangeEmitter,\n\t\t\tthis.professionChangeEmitter,\n\t\t\tthis.raceChangeEmitter,\n\t\t\tthis.rotationChangeEmitter,\n\t\t\tthis.talentsChangeEmitter,\n\t\t\tthis.glyphsChangeEmitter,\n\t\t\tthis.specOptionsChangeEmitter,\n\t\t\tthis.cooldownsChangeEmitter,\n\t\t\tthis.inFrontOfTargetChangeEmitter,\n\t\t\tthis.distanceFromTargetChangeEmitter,\n\t\t\tthis.healingModelChangeEmitter,\n\t\t\tthis.epWeightsChangeEmitter,\n\t\t\tthis.epRatiosChangeEmitter,\n\t\t], 'PlayerChange');\n\t}\n\n\tgetSpecIcon(): string {\n\t\treturn getTalentTreeIcon(this.spec, this.getTalentsString());\n\t}\n\n\tgetClass(): Class {\n\t\treturn specToClass[this.spec];\n\t}\n\n\tgetClassColor(): string {\n\t\treturn classColors[this.getClass()];\n\t}\n\n\tisSpec<T extends Spec>(spec: T): this is Player<T> {\n\t\treturn this.spec == spec;\n\t}\n\tisClass<T extends Class>(clazz: T): this is Player<ClassSpecs<T>> {\n\t\treturn this.getClass() == clazz;\n\t}\n\n\tgetParty(): Party | null {\n\t\treturn this.party;\n\t}\n\n\tgetRaid(): Raid | null {\n\t\treturn this.raid;\n\t}\n\n\t// Returns this player's index within its party [0-4].\n\tgetPartyIndex(): number {\n\t\tif (this.party == null) {\n\t\t\tthrow new Error('Can\\'t get party index for player without a party!');\n\t\t}\n\n\t\treturn this.party.getPlayers().indexOf(this);\n\t}\n\n\t// Returns this player's index within its raid [0-24].\n\tgetRaidIndex(): number {\n\t\tif (this.party == null) {\n\t\t\tthrow new Error('Can\\'t get raid index for player without a party!');\n\t\t}\n\n\t\treturn this.party.getIndex() * MAX_PARTY_SIZE + this.getPartyIndex();\n\t}\n\n\t// This should only ever be called from party.\n\tsetParty(newParty: Party | null) {\n\t\tif (newParty == null) {\n\t\t\tthis.party = null;\n\t\t\tthis.raid = null;\n\t\t} else {\n\t\t\tthis.party = newParty;\n\t\t\tthis.raid = newParty.raid;\n\t\t}\n\t}\n\n\tgetOtherPartyMembers(): Array<Player<any>> {\n\t\tif (this.party == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.party.getPlayers().filter(player => player != null && player != this) as Array<Player<any>>;\n\t}\n\n\t// Returns all items that this player can wear in the given slot.\n\tgetItems(slot: ItemSlot): Array<Item> {\n\t\treturn this.sim.db.getItems(slot).filter(item => canEquipItem(item, this.spec, slot));\n\t}\n\n\t// Returns all enchants that this player can wear in the given slot.\n\tgetEnchants(slot: ItemSlot): Array<Enchant> {\n\t\treturn this.sim.db.getEnchants(slot).filter(enchant => canEquipEnchant(enchant, this.spec));\n\t}\n\n\t// Returns all gems that this player can wear of the given color.\n\tgetGems(socketColor?: GemColor): Array<Gem> {\n\t\treturn this.sim.db.getGems(socketColor);\n\t}\n\n\tgetEpWeights(): Stats {\n\t\treturn this.epWeights;\n\t}\n\n\tsetEpWeights(eventID: EventID, newEpWeights: Stats) {\n\t\tthis.epWeights = newEpWeights;\n\t\tthis.epWeightsChangeEmitter.emit(eventID);\n\n\t\tthis.gemEPCache = new Map();\n\t\tthis.itemEPCache = new Map();\n\t\tthis.enchantEPCache = new Map();\n\t}\n\n\tgetDefaultEpRatios(isTankSpec: boolean, isHealingSpec: boolean): Array<number> {\n\t\tconst defaultRatios = new Array(Player.numEpRatios).fill(0);\n\t\tif (isHealingSpec) {\n\t\t\t// By default only value HPS EP for healing spec\n\t\t\tdefaultRatios[1] = 1;\n\t\t} else if (isTankSpec) {\n\t\t\t// By default value TPS and DTPS EP equally for tanking spec\n\t\t\tdefaultRatios[2] = 1;\n\t\t\tdefaultRatios[3] = 1;\n\t\t} else {\n\t\t\t// By default only value DPS EP\n\t\t\tdefaultRatios[0] = 1;\n\t\t}\n\t\treturn defaultRatios;\n\t}\n\n\tgetEpRatios() {\n\t\treturn this.epRatios.slice();\n\t}\n\n\tsetEpRatios(eventID: EventID, newRatios: Array<number>) {\n\t\tthis.epRatios = newRatios;\n\t\tthis.epRatiosChangeEmitter.emit(eventID);\n\t}\n\n\tasync computeStatWeights(eventID: EventID, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat>, epReferenceStat: Stat, onProgress: Function): Promise<StatWeightsResult> {\n\t\tconst result = await this.sim.statWeights(this, epStats, epPseudoStats, epReferenceStat, onProgress);\n\t\treturn result;\n\t}\n\n\tgetCurrentStats(): PlayerStats {\n\t\treturn PlayerStats.clone(this.currentStats);\n\t}\n\n\tsetCurrentStats(eventID: EventID, newStats: PlayerStats) {\n\t\tthis.currentStats = newStats;\n\t\tthis.currentStatsEmitter.emit(eventID);\n\n\t\t//// Remove item cooldowns if there is no cooldown available for the item.\n\t\t//const availableCooldowns = this.currentStats.cooldowns;\n\t\t//const newCooldowns = this.getCooldowns();\n\t\t//newCooldowns.cooldowns = newCooldowns.cooldowns.filter(cd => {\n\t\t//\tif (cd.id && 'itemId' in cd.id.rawId) {\n\t\t//\t\treturn availableCooldowns.find(acd => ActionIdProto.equals(acd, cd.id)) != null;\n\t\t//\t} else {\n\t\t//\t\treturn true;\n\t\t//\t}\n\t\t//});\n\t\t//// TODO: Reference the parent event ID\n\t\t//this.setCooldowns(TypedEvent.nextEventID(), newCooldowns);\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\tsetName(eventID: EventID, newName: string) {\n\t\tif (newName != this.name) {\n\t\t\tthis.name = newName;\n\t\t\tthis.nameChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetLabel(): string {\n\t\tif (this.party) {\n\t\t\treturn `${this.name} (#${this.getRaidIndex() + 1})`;\n\t\t} else {\n\t\t\treturn this.name;\n\t\t}\n\t}\n\n\tgetRace(): Race {\n\t\treturn this.race;\n\t}\n\tsetRace(eventID: EventID, newRace: Race) {\n\t\tif (newRace != this.race) {\n\t\t\tthis.race = newRace;\n\t\t\tthis.raceChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetProfession1(): Profession {\n\t\treturn this.profession1;\n\t}\n\tsetProfession1(eventID: EventID, newProfession: Profession) {\n\t\tif (newProfession != this.profession1) {\n\t\t\tthis.profession1 = newProfession;\n\t\t\tthis.professionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetProfession2(): Profession {\n\t\treturn this.profession2;\n\t}\n\tsetProfession2(eventID: EventID, newProfession: Profession) {\n\t\tif (newProfession != this.profession2) {\n\t\t\tthis.profession2 = newProfession;\n\t\t\tthis.professionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetProfessions(): Array<Profession> {\n\t\treturn [this.profession1, this.profession2].filter(p => p != Profession.ProfessionUnknown);\n\t}\n\tsetProfessions(eventID: EventID, newProfessions: Array<Profession>) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setProfession1(eventID, newProfessions[0] || Profession.ProfessionUnknown);\n\t\t\tthis.setProfession2(eventID, newProfessions[1] || Profession.ProfessionUnknown);\n\t\t});\n\t}\n\thasProfession(prof: Profession): boolean {\n\t\treturn this.getProfessions().includes(prof);\n\t}\n\tisBlacksmithing(): boolean {\n\t\treturn this.hasProfession(Profession.Blacksmithing);\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn raceToFaction[this.getRace()];\n\t}\n\n\tgetBuffs(): IndividualBuffs {\n\t\t// Make a defensive copy\n\t\treturn IndividualBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: IndividualBuffs) {\n\t\tif (IndividualBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = IndividualBuffs.clone(newBuffs);\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetConsumes(): Consumes {\n\t\t// Make a defensive copy\n\t\treturn Consumes.clone(this.consumes);\n\t}\n\n\tsetConsumes(eventID: EventID, newConsumes: Consumes) {\n\t\tif (Consumes.equals(this.consumes, newConsumes))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.consumes = Consumes.clone(newConsumes);\n\t\tthis.consumesChangeEmitter.emit(eventID);\n\t}\n\n\tgetCooldowns(): Cooldowns {\n\t\t// Make a defensive copy\n\t\treturn Cooldowns.clone(this.cooldowns);\n\t}\n\n\tsetCooldowns(eventID: EventID, newCooldowns: Cooldowns) {\n\t\tif (Cooldowns.equals(this.cooldowns, newCooldowns))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.cooldowns = Cooldowns.clone(newCooldowns);\n\t\tthis.cooldownsChangeEmitter.emit(eventID);\n\t}\n\n\tcanDualWield2H(): boolean {\n\t\treturn this.getClass() == Class.ClassWarrior && (this.getTalents() as SpecTalents<Spec.SpecWarrior>).titansGrip;\n\t}\n\n\tequipItem(eventID: EventID, slot: ItemSlot, newItem: EquippedItem | null) {\n\t\tthis.setGear(eventID, this.gear.withEquippedItem(slot, newItem, this.canDualWield2H()));\n\t}\n\n\tgetEquippedItem(slot: ItemSlot): EquippedItem | null {\n\t\treturn this.gear.getEquippedItem(slot);\n\t}\n\n\tgetGear(): Gear {\n\t\treturn this.gear;\n\t}\n\n\tgetItemSwapGear(): ItemSwapGear {\n\t\treturn this.itemSwapGear;\n\t}\n\n\tsetGear(eventID: EventID, newGear: Gear) {\n\t\tif (newGear.equals(this.gear))\n\t\t\treturn;\n\n\t\t// Commented for now because the UI for this is weird.\n\t\t//// If trinkets have changed and there were cooldowns assigned for those trinkets,\n\t\t//// try to match them up and switch to the new trinkets.\n\t\t//const newCooldowns = this.getCooldowns();\n\t\t//const oldTrinketIds = this.gear.getTrinkets().map(trinket => trinket?.asActionIdProto() || ActionIdProto.create());\n\t\t//const newTrinketIds = newGear.getTrinkets().map(trinket => trinket?.asActionIdProto() || ActionIdProto.create());\n\n\t\t//for (let i = 0; i < 2; i++) {\n\t\t//\tconst oldTrinketId = oldTrinketIds[i];\n\t\t//\tconst newTrinketId = newTrinketIds[i];\n\t\t//\tif (ActionIdProto.equals(oldTrinketId, ActionIdProto.create())) {\n\t\t//\t\tcontinue;\n\t\t//\t}\n\t\t//\tif (ActionIdProto.equals(newTrinketId, ActionIdProto.create())) {\n\t\t//\t\tcontinue;\n\t\t//\t}\n\t\t//\tif (ActionIdProto.equals(oldTrinketId, newTrinketId)) {\n\t\t//\t\tcontinue;\n\t\t//\t}\n\t\t//\tnewCooldowns.cooldowns.forEach(cd => {\n\t\t//\t\tif (ActionIdProto.equals(cd.id, oldTrinketId)) {\n\t\t//\t\t\tcd.id = newTrinketId;\n\t\t//\t\t}\n\t\t//\t});\n\t\t//}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.gear = newGear;\n\t\t\tthis.gearChangeEmitter.emit(eventID);\n\t\t\t//this.setCooldowns(eventID, newCooldowns);\n\t\t});\n\t}\n\n\t/*\n\tsetBulkEquipmentSpec(eventID: EventID, newBulkEquipmentSpec: BulkEquipmentSpec) {\n\t\tif (BulkEquipmentSpec.equals(this.bulkEquipmentSpec, newBulkEquipmentSpec))\n\t\t\treturn;\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.bulkEquipmentSpec = newBulkEquipmentSpec;\n\t\t\tthis.bulkGearChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tgetBulkEquipmentSpec(): BulkEquipmentSpec {\n\t\treturn BulkEquipmentSpec.clone(this.bulkEquipmentSpec);\n\t}\n\t*/\n\n\tgetBonusStats(): Stats {\n\t\treturn this.bonusStats;\n\t}\n\n\tsetBonusStats(eventID: EventID, newBonusStats: Stats) {\n\t\tif (newBonusStats.equals(this.bonusStats))\n\t\t\treturn;\n\n\t\tthis.bonusStats = newBonusStats;\n\t\tthis.bonusStatsChangeEmitter.emit(eventID);\n\t}\n\n\tgetRotation(): SpecRotation<SpecType> {\n\t\treturn this.specTypeFunctions.rotationCopy(this.rotation);\n\t}\n\n\tsetRotation(eventID: EventID, newRotation: SpecRotation<SpecType>) {\n\t\tif (this.specTypeFunctions.rotationEquals(newRotation, this.rotation))\n\t\t\treturn;\n\n\t\tthis.rotation = this.specTypeFunctions.rotationCopy(newRotation);\n\t\tthis.rotationChangeEmitter.emit(eventID);\n\t}\n\n\tsetAplRotation(eventID: EventID, newRotation: APLRotation) {\n\t\tif (APLRotation.equals(newRotation, this.aplRotation))\n\t\t\treturn;\n\n\t\tthis.aplRotation = newRotation;\n\t\tthis.rotationChangeEmitter.emit(eventID);\n\t}\n\n\tgetTalents(): SpecTalents<SpecType> {\n\t\tif (this.talents == null) {\n\t\t\tthis.talents = playerTalentStringToProto(this.spec, this.talentsString) as SpecTalents<SpecType>;\n\t\t}\n\t\treturn this.talents!;\n\t}\n\n\tgetTalentsString(): string {\n\t\treturn this.talentsString;\n\t}\n\n\tsetTalentsString(eventID: EventID, newTalentsString: string) {\n\t\tif (newTalentsString == this.talentsString)\n\t\t\treturn;\n\n\t\tthis.talentsString = newTalentsString;\n\t\tthis.talents = null;\n\t\tthis.talentsChangeEmitter.emit(eventID);\n\t}\n\n\tgetTalentTree(): number {\n\t\treturn getTalentTree(this.getTalentsString());\n\t}\n\n\tgetTalentTreeIcon(): string {\n\t\treturn getTalentTreeIcon(this.spec, this.getTalentsString());\n\t}\n\n\tgetGlyphs(): Glyphs {\n\t\t// Make a defensive copy\n\t\treturn Glyphs.clone(this.glyphs);\n\t}\n\n\tsetGlyphs(eventID: EventID, newGlyphs: Glyphs) {\n\t\tif (Glyphs.equals(this.glyphs, newGlyphs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.glyphs = Glyphs.clone(newGlyphs);\n\t\tthis.glyphsChangeEmitter.emit(eventID);\n\t}\n\n\tgetMajorGlyphs(): Array<number> {\n\t\treturn [\n\t\t\tthis.glyphs.major1,\n\t\t\tthis.glyphs.major2,\n\t\t\tthis.glyphs.major3,\n\t\t].filter(glyph => glyph != 0);\n\t}\n\n\tgetMinorGlyphs(): Array<number> {\n\t\treturn [\n\t\t\tthis.glyphs.minor1,\n\t\t\tthis.glyphs.minor2,\n\t\t\tthis.glyphs.minor3,\n\t\t].filter(glyph => glyph != 0);\n\t}\n\n\tgetAllGlyphs(): Array<number> {\n\t\treturn this.getMajorGlyphs().concat(this.getMinorGlyphs());\n\t}\n\n\tgetSpecOptions(): SpecOptions<SpecType> {\n\t\treturn this.specTypeFunctions.optionsCopy(this.specOptions);\n\t}\n\n\tsetSpecOptions(eventID: EventID, newSpecOptions: SpecOptions<SpecType>) {\n\t\tif (this.specTypeFunctions.optionsEquals(newSpecOptions, this.specOptions))\n\t\t\treturn;\n\n\t\tthis.specOptions = this.specTypeFunctions.optionsCopy(newSpecOptions);\n\t\tthis.specOptionsChangeEmitter.emit(eventID);\n\t}\n\n\tgetInFrontOfTarget(): boolean {\n\t\treturn this.inFrontOfTarget;\n\t}\n\n\tsetInFrontOfTarget(eventID: EventID, newInFrontOfTarget: boolean) {\n\t\tif (newInFrontOfTarget == this.inFrontOfTarget)\n\t\t\treturn;\n\n\t\tthis.inFrontOfTarget = newInFrontOfTarget;\n\t\tthis.inFrontOfTargetChangeEmitter.emit(eventID);\n\t}\n\n\tgetDistanceFromTarget(): number {\n\t\treturn this.distanceFromTarget;\n\t}\n\n\tsetDistanceFromTarget(eventID: EventID, newDistanceFromTarget: number) {\n\t\tif (newDistanceFromTarget == this.distanceFromTarget)\n\t\t\treturn;\n\n\t\tthis.distanceFromTarget = newDistanceFromTarget;\n\t\tthis.distanceFromTargetChangeEmitter.emit(eventID);\n\t}\n\tsetDefaultHealingParams(hm: HealingModel) {\n\t\tvar boss = this.sim.encounter.primaryTarget;\n\t\tvar dualWield = boss.dualWield;\n\t\tif (hm.cadenceSeconds == 0) {\n\t\t\thm.cadenceSeconds = 1.5 * boss.swingSpeed;\n\t\t\tif (dualWield) {\n\t\t\t\thm.cadenceSeconds /= 2;\n\t\t\t}\n\t\t}\n\t\tif (hm.hps == 0) {\n\t\t\thm.hps = 0.175 * boss.minBaseDamage / boss.swingSpeed;\n\t\t\tif (dualWield) {\n\t\t\t\thm.hps *= 1.5;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tenableHealing() {\n\t\tthis.healingEnabled = true;\n\t\tvar hm = this.getHealingModel();\n\t\tif (hm.cadenceSeconds == 0 || hm.hps == 0) {\n\t\t\tthis.setDefaultHealingParams(hm)\n\t\t\tthis.setHealingModel(0, hm)\n\t\t}\n\t}\n\n\tgetHealingModel(): HealingModel {\n\t\t// Make a defensive copy\n\t\treturn HealingModel.clone(this.healingModel);\n\t}\n\n\tsetHealingModel(eventID: EventID, newHealingModel: HealingModel) {\n\t\tif (HealingModel.equals(this.healingModel, newHealingModel))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.healingModel = HealingModel.clone(newHealingModel);\n\t\t// If we have enabled healing model and try to set 0s cadence or 0 incoming HPS, then set intelligent defaults instead based on boss parameters.\n\t\tif (this.healingEnabled) {\n\t\t\tthis.setDefaultHealingParams(this.healingModel)\n\t\t}\n\t\tthis.healingModelChangeEmitter.emit(eventID);\n\t}\n\n\tcomputeStatsEP(stats?: Stats): number {\n\t\tif (stats == undefined) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn stats.computeEP(this.epWeights);\n\t}\n\n\tcomputeGemEP(gem: Gem): number {\n\t\tif (this.gemEPCache.has(gem.id)) {\n\t\t\treturn this.gemEPCache.get(gem.id)!;\n\t\t}\n\n\t\tconst epFromStats = this.computeStatsEP(new Stats(gem.stats));\n\t\tconst epFromEffect = getMetaGemEffectEP(this.spec, gem, Stats.fromProto(this.currentStats.finalStats));\n\t\tlet bonusEP = 0;\n\t\t// unique items are slightly worse than non-unique because you can have only one.\n\t\tif (gem.unique) {\n\t\t\tbonusEP -= 0.01;\n\t\t}\n\n\t\tlet ep = epFromStats + epFromEffect + bonusEP;\n\t\tthis.gemEPCache.set(gem.id, ep);\n\t\treturn ep;\n\t}\n\n\tcomputeEnchantEP(enchant: Enchant): number {\n\t\tif (this.enchantEPCache.has(enchant.effectId)) {\n\t\t\treturn this.enchantEPCache.get(enchant.effectId)!;\n\t\t}\n\n\t\tlet ep = this.computeStatsEP(new Stats(enchant.stats));\n\t\tthis.enchantEPCache.set(enchant.effectId, ep);\n\t\treturn ep\n\t}\n\n\tcomputeItemEP(item: Item, slot: ItemSlot): number {\n\t\tif (item == null)\n\t\t\treturn 0;\n\n\t\tif (this.itemEPCache.has(item.id)) {\n\t\t\treturn this.itemEPCache.get(item.id)!;\n\t\t}\n\n\t\tlet itemStats = new Stats(item.stats);\n\t\tif (item.weaponSpeed > 0) {\n\t\t\tconst weaponDps = getWeaponDPS(item);\n\t\t\tif (slot == ItemSlot.ItemSlotMainHand) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatMainHandDps, weaponDps);\n\t\t\t} else if (slot == ItemSlot.ItemSlotOffHand) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatOffHandDps, weaponDps);\n\t\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatRangedDps, weaponDps);\n\t\t\t}\n\t\t}\n\n\t\tlet ep = itemStats.computeEP(this.epWeights);\n\n\t\t// unique items are slightly worse than non-unique because you can have only one.\n\t\tif (item.unique) {\n\t\t\tep -= 0.01;\n\t\t}\n\n\t\t// Compare whether its better to match sockets + get socket bonus, or just use best gems.\n\t\tconst bestGemEPNotMatchingSockets = sum(item.gemSockets.map(socketColor => {\n\t\t\tconst gems = this.sim.db.getGems(socketColor).filter(gem => isUnrestrictedGem(gem, this.sim.getPhase()));\n\t\t\tif (gems.length > 0) {\n\t\t\t\treturn Math.max(...gems.map(gem => this.computeGemEP(gem)));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}));\n\n\t\tconst bestGemEPMatchingSockets = sum(item.gemSockets.map(socketColor => {\n\t\t\tconst gems = this.sim.db.getGems(socketColor).filter(gem => isUnrestrictedGem(gem, this.sim.getPhase()) && gemMatchesSocket(gem, socketColor));\n\t\t\tif (gems.length > 0) {\n\t\t\t\treturn Math.max(...gems.map(gem => this.computeGemEP(gem)));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t})) + this.computeStatsEP(new Stats(item.socketBonus));\n\n\t\tep += Math.max(bestGemEPMatchingSockets, bestGemEPNotMatchingSockets);\n\n\t\tthis.itemEPCache.set(item.id, ep);\n\t\treturn ep;\n\t}\n\n\tsetWowheadData(equippedItem: EquippedItem, elem: HTMLElement) {\n\t\tconst parts = [];\n\n\t\tconst lang = getLanguageCode();\n\t\tconst langPrefix = lang ? lang + '.' : '';\n\t\tparts.push(`domain=${langPrefix}wotlk`);\n\n\t\tconst isBlacksmithing = this.hasProfession(Profession.Blacksmithing);\n\t\tif (equippedItem.gems.length > 0) {\n\t\t\tparts.push('gems=' + equippedItem.curGems(isBlacksmithing).map(gem => gem ? gem.id : 0).join(':'));\n\t\t}\n\t\tif (equippedItem.enchant != null) {\n\t\t\tparts.push('ench=' + equippedItem.enchant.effectId);\n\t\t}\n\t\tparts.push('pcs=' + this.gear.asArray().filter(ei => ei != null).map(ei => ei!.item.id).join(':'));\n\n\t\tif (equippedItem.hasExtraSocket(isBlacksmithing)) {\n\t\t\tparts.push('sock');\n\t\t}\n\n\t\telem.setAttribute('data-wowhead', parts.join('&'));\n\t}\n\n\tstatic ARMOR_SLOTS: Array<ItemSlot> = [\n\t\tItemSlot.ItemSlotHead,\n\t\tItemSlot.ItemSlotShoulder,\n\t\tItemSlot.ItemSlotChest,\n\t\tItemSlot.ItemSlotWrist,\n\t\tItemSlot.ItemSlotHands,\n\t\tItemSlot.ItemSlotLegs,\n\t\tItemSlot.ItemSlotWaist,\n\t\tItemSlot.ItemSlotFeet,\n\t];\n\n\tstatic WEAPON_SLOTS: Array<ItemSlot> = [\n\t\tItemSlot.ItemSlotMainHand,\n\t\tItemSlot.ItemSlotOffHand,\n\t];\n\n\tstatic readonly DIFFICULTY_SRCS: Partial<Record<SourceFilterOption, DungeonDifficulty>> = {\n\t\t[SourceFilterOption.SourceDungeon ]: DungeonDifficulty.DifficultyNormal,\n\t\t[SourceFilterOption.SourceDungeonH]: DungeonDifficulty.DifficultyHeroic,\n\t\t[SourceFilterOption.SourceRaid10  ]: DungeonDifficulty.DifficultyRaid10,\n\t\t[SourceFilterOption.SourceRaid10H ]: DungeonDifficulty.DifficultyRaid10H,\n\t\t[SourceFilterOption.SourceRaid25  ]: DungeonDifficulty.DifficultyRaid25,\n\t\t[SourceFilterOption.SourceRaid25H ]: DungeonDifficulty.DifficultyRaid25H,\n\t};\n\n\tstatic readonly HEROIC_TO_NORMAL: Partial<Record<DungeonDifficulty, DungeonDifficulty>> = {\n\t\t[DungeonDifficulty.DifficultyHeroic]: DungeonDifficulty.DifficultyNormal,\n\t\t[DungeonDifficulty.DifficultyRaid10H]: DungeonDifficulty.DifficultyRaid10,\n\t\t[DungeonDifficulty.DifficultyRaid25H]: DungeonDifficulty.DifficultyRaid25,\n\t};\n\n\tstatic readonly RAID_IDS: Partial<Record<RaidFilterOption, number>> = {\n\t\t[RaidFilterOption.RaidNaxxramas]: 3456,\n\t\t[RaidFilterOption.RaidEyeOfEternity]: 4500,\n\t\t[RaidFilterOption.RaidObsidianSanctum]: 4493,\n\t\t[RaidFilterOption.RaidVaultOfArchavon]: 4603,\n\t\t[RaidFilterOption.RaidUlduar]: 4273,\n\t\t[RaidFilterOption.RaidTrialOfTheCrusader]: 4722,\n\t\t[RaidFilterOption.RaidOnyxiasLair]: 2159,\n\t\t[RaidFilterOption.RaidIcecrownCitadel]: 4812,\n\t\t[RaidFilterOption.RaidRubySanctum]: 4987,\n\t};\n\n\tfilterItemData<T>(itemData: Array<T>, getItemFunc: (val: T) => Item, slot: ItemSlot): Array<T> {\n\t\tconst filters = this.sim.getFilters();\n\n\t\tconst filterItems = (itemData: Array<T>, filterFunc: (item: Item) => boolean) => {\n\t\t\treturn itemData.filter(itemElem => filterFunc(getItemFunc(itemElem)));\n\t\t};\n\n\t\tif (filters.factionRestriction != UIItem_FactionRestriction.UNSPECIFIED) {\n\t\t\titemData = filterItems(itemData, item => item.factionRestriction == filters.factionRestriction || item.factionRestriction == UIItem_FactionRestriction.UNSPECIFIED);\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceCrafting)) {\n\t\t\titemData = filterItems(itemData, item => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'crafted'));\n\t\t}\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceQuest)) {\n\t\t\titemData = filterItems(itemData, item => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'quest'));\n\t\t}\n\n\t\tfor (const [srcOptionStr, difficulty] of Object.entries(Player.DIFFICULTY_SRCS)) {\n\t\t\tconst srcOption = parseInt(srcOptionStr) as SourceFilterOption;\n\t\t\tif (!filters.sources.includes(srcOption)) {\n\t\t\t\titemData = filterItems(itemData, item =>\n\t\t\t\t\t\t!item.sources.some(itemSrc =>\n\t\t\t\t\t\t\t\titemSrc.source.oneofKind == 'drop' && itemSrc.source.drop.difficulty == difficulty));\n\n\t\t\t\tif (difficulty == DungeonDifficulty.DifficultyRaid10H || difficulty == DungeonDifficulty.DifficultyRaid25H) {\n\t\t\t\t\tconst normalDifficulty = Player.HEROIC_TO_NORMAL[difficulty];\n\t\t\t\t\titemData = filterItems(itemData, item =>\n\t\t\t\t\t\t\t!item.sources.some(itemSrc =>\n\t\t\t\t\t\t\t\t\titemSrc.source.oneofKind == 'drop' && itemSrc.source.drop.difficulty == normalDifficulty && itemSrc.source.drop.category == AL_CATEGORY_HARD_MODE));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!filters.raids.includes(RaidFilterOption.RaidVanilla)) {\n\t\t\titemData = filterItems(itemData, item => item.expansion != Expansion.ExpansionVanilla);\n\t\t}\n\t\tif (!filters.raids.includes(RaidFilterOption.RaidTbc)) {\n\t\t\titemData = filterItems(itemData, item => item.expansion != Expansion.ExpansionTbc);\n\t\t}\n\t\tfor (const [raidOptionStr, zoneId] of Object.entries(Player.RAID_IDS)) {\n\t\t\tconst raidOption = parseInt(raidOptionStr) as RaidFilterOption;\n\t\t\tif (!filters.raids.includes(raidOption)) {\n\t\t\t\titemData = filterItems(itemData, item =>\n\t\t\t\t\t\t!item.sources.some(itemSrc =>\n\t\t\t\t\t\t\t\titemSrc.source.oneofKind == 'drop' && itemSrc.source.drop.zoneId == zoneId));\n\t\t\t}\n\t\t}\n\n\t\tif (Player.ARMOR_SLOTS.includes(slot)) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.armorTypes.includes(item.armorType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (Player.WEAPON_SLOTS.includes(slot)) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.weaponTypes.includes(item.weaponType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!filters.oneHandedWeapons && item.handType != HandType.HandTypeTwoHand) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!filters.twoHandedWeapons && item.handType == HandType.HandTypeTwoHand) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst minSpeed = slot == ItemSlot.ItemSlotMainHand ? filters.minMhWeaponSpeed : filters.minOhWeaponSpeed;\n\t\t\t\tconst maxSpeed = slot == ItemSlot.ItemSlotMainHand ? filters.maxMhWeaponSpeed : filters.maxOhWeaponSpeed;\n\t\t\t\tif (minSpeed > 0 && item.weaponSpeed < minSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (maxSpeed > 0 && item.weaponSpeed > maxSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.rangedWeaponTypes.includes(item.rangedWeaponType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst minSpeed = filters.minRangedWeaponSpeed;\n\t\t\t\tconst maxSpeed = filters.maxRangedWeaponSpeed;\n\t\t\t\tif (minSpeed > 0 && item.weaponSpeed < minSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (maxSpeed > 0 && item.weaponSpeed > maxSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t\treturn itemData;\n\t}\n\n\tfilterEnchantData<T>(enchantData: Array<T>, getEnchantFunc: (val: T) => Enchant, slot: ItemSlot, currentEquippedItem: EquippedItem|null): Array<T> {\n\t\tif (!currentEquippedItem) {\n\t\t\treturn enchantData;\n\t\t}\n\n\t\tconst filters = this.sim.getFilters();\n\n\t\treturn enchantData.filter(enchantElem => {\n\t\t\tconst enchant = getEnchantFunc(enchantElem);\n\n\t\t\tif (!enchantAppliesToItem(enchant, currentEquippedItem.item)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tfilterGemData<T>(gemData: Array<T>, getGemFunc: (val: T) => Gem, slot: ItemSlot, socketColor: GemColor): Array<T> {\n\t\tconst filters = this.sim.getFilters();\n\n\t\treturn gemData.filter(gemElem => {\n\t\t\tconst gem = getGemFunc(gemElem);\n\n\t\t\tif (filters.matchingGemsOnly && !gemMatchesSocket(gem, socketColor)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tmakeRaidTarget(): RaidTarget {\n\t\tif (this.party == null) {\n\t\t\treturn emptyRaidTarget();\n\t\t} else {\n\t\t\treturn newRaidTarget(this.getRaidIndex());\n\t\t}\n\t}\n\n\tprivate toDatabase(): SimDatabase {\n\t\tconst dbGear = this.getGear().toDatabase()\n\t\tconst dbItemSwapGear = this.getItemSwapGear().toDatabase();\n\t\treturn SimDatabase.create({\n\t\t\titems: dbGear.items.concat(dbItemSwapGear.items),\n\t\t\tenchants: dbGear.enchants.concat(dbItemSwapGear.enchants),\n\t\t\tgems: dbGear.gems.concat(dbItemSwapGear.gems),\n\t\t})\n\t}\n\n\ttoProto(forExport?: boolean): PlayerProto {\n\t\tconst gear = this.getGear();\n\t\treturn withSpecProto(\n\t\t\tthis.spec,\n\t\t\tPlayerProto.create({\n\t\t\t\tname: this.getName(),\n\t\t\t\trace: this.getRace(),\n\t\t\t\tclass: this.getClass(),\n\t\t\t\tequipment: gear.asSpec(),\n\t\t\t\tconsumes: this.getConsumes(),\n\t\t\t\tbonusStats: this.getBonusStats().toProto(),\n\t\t\t\tbuffs: this.getBuffs(),\n\t\t\t\tcooldowns: this.getCooldowns(),\n\t\t\t\ttalentsString: this.getTalentsString(),\n\t\t\t\tglyphs: this.getGlyphs(),\n\t\t\t\trotation: this.aplRotation,\n\t\t\t\tprofession1: this.getProfession1(),\n\t\t\t\tprofession2: this.getProfession2(),\n\t\t\t\tinFrontOfTarget: this.getInFrontOfTarget(),\n\t\t\t\tdistanceFromTarget: this.getDistanceFromTarget(),\n\t\t\t\thealingModel: this.getHealingModel(),\n\t\t\t\tdatabase: forExport ? SimDatabase.create() : this.toDatabase(),\n\t\t\t}),\n\t\t\tthis.getRotation(),\n\t\t\tthis.getSpecOptions());\n\t}\n\n\tfromProto(eventID: EventID, proto: PlayerProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setName(eventID, proto.name);\n\t\t\tthis.setRace(eventID, proto.race);\n\t\t\tthis.setGear(eventID, proto.equipment ? this.sim.db.lookupEquipmentSpec(proto.equipment) : new Gear({}));\n\t\t\t//this.setBulkEquipmentSpec(eventID, BulkEquipmentSpec.create()); // Do not persist the bulk equipment settings.\n\t\t\tthis.setConsumes(eventID, proto.consumes || Consumes.create());\n\t\t\tthis.setBonusStats(eventID, Stats.fromProto(proto.bonusStats || UnitStats.create()));\n\t\t\tthis.setBuffs(eventID, proto.buffs || IndividualBuffs.create());\n\t\t\tthis.setCooldowns(eventID, proto.cooldowns || Cooldowns.create());\n\t\t\tthis.setTalentsString(eventID, proto.talentsString);\n\t\t\tthis.setGlyphs(eventID, proto.glyphs || Glyphs.create());\n\t\t\tthis.setProfession1(eventID, proto.profession1);\n\t\t\tthis.setProfession2(eventID, proto.profession2);\n\t\t\tthis.setInFrontOfTarget(eventID, proto.inFrontOfTarget);\n\t\t\tthis.setDistanceFromTarget(eventID, proto.distanceFromTarget);\n\t\t\tthis.setHealingModel(eventID, proto.healingModel || HealingModel.create());\n\t\t\tthis.setRotation(eventID, this.specTypeFunctions.rotationFromPlayer(proto));\n\t\t\tthis.setAplRotation(eventID, proto.rotation || APLRotation.create())\n\t\t\tthis.setSpecOptions(eventID, this.specTypeFunctions.optionsFromPlayer(proto));\n\n\t\t\tthis.aplRotation = proto.rotation || APLRotation.create();\n\t\t\tthis.rotationChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tclone(eventID: EventID): Player<SpecType> {\n\t\tconst newPlayer = new Player<SpecType>(this.spec, this.sim);\n\t\tnewPlayer.fromProto(eventID, this.toProto());\n\t\treturn newPlayer;\n\t}\n\n\tapplySharedDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setInFrontOfTarget(eventID, isTankSpec(this.spec));\n\t\t\tthis.setHealingModel(eventID, HealingModel.create({\n\t\t\t\tburstWindow: isTankSpec(this.spec) ? 6 : 0,\n\t\t\t}));\n\t\t\tthis.setCooldowns(eventID, Cooldowns.create({\n\t\t\t\thpPercentForDefensives: isTankSpec(this.spec) ? 0.35 : 0,\n\t\t\t}));\n\t\t\tthis.setBonusStats(eventID, new Stats());\n\t\t});\n\t}\n}\n","import { Party as PartyProto } from './proto/api.js';\nimport { PartyStats as PartyStatsProto } from './proto/api.js';\nimport { Player as PlayerProto } from './proto/api.js';\nimport { PartyBuffs } from './proto/common.js';\nimport { Class } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { playerToSpec } from './proto_utils/utils.js';\n\nimport { Raid } from './raid.js';\nimport { Player } from './player.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Sim } from './sim.js';\n\nexport const MAX_PARTY_SIZE = 5;\n\n// Manages all the settings for a single Party.\nexport class Party {\n\treadonly sim: Sim;\n\treadonly raid: Raid;\n\n\tprivate buffs: PartyBuffs = PartyBuffs.create();\n\n\t// Emits when a party member is added/removed/moved.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\n\treadonly buffsChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when anything in the party changes.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Should always hold exactly MAX_PARTY_SIZE elements.\n\tprivate players: Array<Player<any> | null>;\n\n\tprivate readonly playerChangeListener: (eventID: EventID) => void;\n\n\tconstructor(raid: Raid, sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.raid = raid;\n\t\tthis.players = [...Array(MAX_PARTY_SIZE).keys()].map(i => null);\n\t\tthis.playerChangeListener = eventID => this.changeEmitter.emit(eventID);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t], 'PartyChange');\n\t}\n\n\tsize(): number {\n\t\treturn this.players.filter(player => player != null).length;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.size() == 0;\n\t}\n\n\tclear(eventID: EventID) {\n\t\tthis.setBuffs(eventID, PartyBuffs.create());\n\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\n\t\t\tthis.setPlayer(eventID, i, null);\n\t\t}\n\t}\n\n\t// Returns this party's index within the raid [0-4].\n\tgetIndex(): number {\n\t\treturn this.raid.getParties().indexOf(this);\n\t}\n\n\tgetPlayers(): Array<Player<any> | null> {\n\t\t// Make defensive copy.\n\t\treturn this.players.slice();\n\t}\n\n\tgetPlayer(playerIndex: number): Player<any> | null {\n\t\treturn this.players[playerIndex];\n\t}\n\n\tsetPlayer(eventID: EventID, playerIndex: number, newPlayer: Player<any> | null) {\n\t\tif (playerIndex < 0 || playerIndex >= MAX_PARTY_SIZE) {\n\t\t\tthrow new Error('Invalid player index: ' + playerIndex);\n\t\t}\n\n\t\tif (newPlayer == this.players[playerIndex]) {\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst oldPlayer = this.players[playerIndex];\n\t\t\tif (oldPlayer != null) {\n\t\t\t\toldPlayer.changeEmitter.off(this.playerChangeListener);\n\t\t\t\toldPlayer.setParty(null);\n\t\t\t}\n\t\t\tif (newPlayer != null) {\n\t\t\t\tconst newPlayerOldParty = newPlayer.getParty();\n\t\t\t\tif (newPlayerOldParty) {\n\t\t\t\t\tnewPlayerOldParty.setPlayer(eventID, newPlayer.getPartyIndex(), null);\n\t\t\t\t}\n\t\t\t\tthis.players[playerIndex] = newPlayer;\n\t\t\t\tnewPlayer.changeEmitter.on(this.playerChangeListener);\n\t\t\t\tnewPlayer.setParty(this);\n\t\t\t} else {\n\t\t\t\tthis.players[playerIndex] = null;\n\t\t\t}\n\n\t\t\tthis.compChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tgetBuffs(): PartyBuffs {\n\t\t// Make a defensive copy\n\t\treturn PartyBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: PartyBuffs) {\n\t\tif (PartyBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = PartyBuffs.clone(newBuffs);\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(forExport?: boolean): PartyProto {\n\t\treturn PartyProto.create({\n\t\t\tplayers: this.players.map(player => player == null ? PlayerProto.create() : player.toProto(forExport)),\n\t\t\tbuffs: this.buffs,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: PartyProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setBuffs(eventID, proto.buffs || PartyBuffs.create());\n\n\t\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\n\t\t\t\tif (!proto.players[i] || proto.players[i].class == Class.ClassUnknown) {\n\t\t\t\t\tthis.setPlayer(eventID, i, null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst playerProto = proto.players[i];\n\t\t\t\tconst spec = playerToSpec(playerProto);\n\t\t\t\tconst currentPlayer = this.players[i];\n\n\t\t\t\t// Reuse the current player if possible, so that event handlers are preserved.\n\t\t\t\tif (currentPlayer && spec == currentPlayer.spec) {\n\t\t\t\t\tcurrentPlayer.fromProto(eventID, playerProto);\n\t\t\t\t} else {\n\t\t\t\t\tconst newPlayer = new Player(spec, this.sim);\n\t\t\t\t\tnewPlayer.fromProto(eventID, playerProto);\n\t\t\t\t\tthis.setPlayer(eventID, i, newPlayer);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Class } from './proto/common.js';\nimport { Debuffs } from './proto/common.js';\nimport { RaidTarget } from './proto/common.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport { RaidStats as RaidStatsProto } from './proto/api.js';\nimport { RaidBuffs } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { NO_TARGET } from './proto_utils/utils.js';\n\nimport { Party, MAX_PARTY_SIZE } from './party.js';\nimport { Player } from './player.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Sim } from './sim.js';\nimport { sum } from './utils.js';\n\nexport const MAX_NUM_PARTIES = 8;\n\n// Manages all the settings for a single Raid.\nexport class Raid {\n\tprivate buffs: RaidBuffs = RaidBuffs.create();\n\tprivate debuffs: Debuffs = Debuffs.create();\n\tprivate tanks: Array<RaidTarget> = [];\n\tprivate targetDummies: number = 0;\n\tprivate numActiveParties: number = 5;\n\n\t// Emits when a raid member is added/removed/moved.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\n\treadonly buffsChangeEmitter = new TypedEvent<void>();\n\treadonly debuffsChangeEmitter = new TypedEvent<void>();\n\treadonly tanksChangeEmitter = new TypedEvent<void>();\n\treadonly targetDummiesChangeEmitter = new TypedEvent<void>();\n\treadonly numActivePartiesChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when anything in the raid changes.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Should always hold exactly MAX_NUM_PARTIES elements.\n\tprivate parties: Array<Party>;\n\n\t// Cached return value for getActivePlayers().\n\tprivate activePlayers: Array<Player<any>>;\n\n\treadonly sim: Sim;\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\n\t\tthis.parties = [...Array(MAX_NUM_PARTIES).keys()].map(i => {\n\t\t\tconst newParty = new Party(this, sim);\n\t\t\tnewParty.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\t\t\tnewParty.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\t\t\treturn newParty;\n\t\t});\n\t\tthis.activePlayers = [];\n\n\t\tthis.numActivePartiesChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t\tthis.debuffsChangeEmitter,\n\t\t\tthis.tanksChangeEmitter,\n\t\t\tthis.targetDummiesChangeEmitter,\n\t\t], 'RaidChange');\n\n\t\tthis.changeEmitter.on(() => {\n\t\t\tthis.activePlayers = [];\n\t\t});\n\t}\n\n\tsize(): number {\n\t\treturn sum(this.parties.map(party => party.size()));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.size() == 0;\n\t}\n\n\tgetParties(): Array<Party> {\n\t\t// Make defensive copy.\n\t\treturn this.parties.slice();\n\t}\n\n\tgetParty(index: number): Party {\n\t\treturn this.parties[index];\n\t}\n\n\tgetPlayers(): Array<Player<any> | null> {\n\t\treturn this.parties.map(party => party.getPlayers()).flat();\n\t}\n\n\tgetPlayer(index: number): Player<any> | null {\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\treturn party.getPlayer(index % MAX_PARTY_SIZE);\n\t}\n\n\tgetPlayerFromRaidTarget(raidTarget: RaidTarget): Player<any> | null {\n\t\tif (raidTarget.targetIndex == NO_TARGET) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn this.getPlayer(raidTarget.targetIndex);\n\t\t}\n\t}\n\n\tsetPlayer(eventID: EventID, index: number, newPlayer: Player<any> | null) {\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\tparty.setPlayer(eventID, index % MAX_PARTY_SIZE, newPlayer);\n\t}\n\n\tgetClassCount(playerClass: Class) {\n\t\treturn this.getPlayers().filter(player => player != null && player.getClass() == playerClass).length;\n\t}\n\n\tgetBuffs(): RaidBuffs {\n\t\t// Make a defensive copy\n\t\treturn RaidBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: RaidBuffs) {\n\t\tif (RaidBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = RaidBuffs.clone(newBuffs);\n\n\t\tif (newBuffs.demonicPact > 0 && newBuffs.demonicPactSp == 0) {\n\t\t\tthis.buffs.demonicPactSp = this.buffs.demonicPact;\n\t\t\tif (this.buffs.demonicPactSp > 1000) {\n\t\t\t\tthis.buffs.demonicPactSp /= 10;\n\t\t\t}\n\t\t\tthis.buffs.demonicPact = 0;\n\t\t} else if (newBuffs.demonicPactOld > 0 && newBuffs.demonicPactSp == 0) {\n\t\t\tthis.buffs.demonicPactSp = this.buffs.demonicPactOld;\n\t\t\tif (this.buffs.demonicPactSp > 1000) {\n\t\t\t\tthis.buffs.demonicPactSp /= 10;\n\t\t\t}\n\t\t\tthis.buffs.demonicPactOld = 0;\n\t\t}\n\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (this.debuffs.totemOfWrath != this.buffs.totemOfWrath) {\n\t\t\tvar newDebuff = Debuffs.clone(this.debuffs);\n\t\t\tnewDebuff.totemOfWrath = this.buffs.totemOfWrath;\n\t\t\tthis.setDebuffs(eventID, newDebuff);\n\t\t}\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetDebuffs(): Debuffs {\n\t\t// Make a defensive copy\n\t\treturn Debuffs.clone(this.debuffs);\n\t}\n\n\tsetDebuffs(eventID: EventID, newDebuffs: Debuffs) {\n\t\tif (Debuffs.equals(this.debuffs, newDebuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.debuffs = Debuffs.clone(newDebuffs);\n\n\t\t// Special handle ToW since it crosses buffs/debuffs.\n\t\tif (this.debuffs.totemOfWrath != this.buffs.totemOfWrath) {\n\t\t\tvar newBuffs = RaidBuffs.clone(this.buffs);\n\t\t\tnewBuffs.totemOfWrath = this.debuffs.totemOfWrath;\n\t\t\tthis.setBuffs(eventID, newBuffs);\n\t\t}\n\t\tthis.debuffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetTanks(): Array<RaidTarget> {\n\t\t// Make a defensive copy\n\t\treturn this.tanks.map(tank => RaidTarget.clone(tank));\n\t}\n\n\tsetTanks(eventID: EventID, newTanks: Array<RaidTarget>) {\n\t\tif (this.tanks.length == newTanks.length && this.tanks.every((tank, i) => RaidTarget.equals(tank, newTanks[i])))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.tanks = newTanks.map(tank => RaidTarget.clone(tank));\n\t\tthis.tanksChangeEmitter.emit(eventID);\n\t}\n\n\tgetTargetDummies(): number {\n\t\treturn this.targetDummies;\n\t}\n\n\tsetTargetDummies(eventID: EventID, newTargetDummies: number) {\n\t\tif (this.targetDummies == newTargetDummies)\n\t\t\treturn;\n\n\t\tthis.targetDummies = newTargetDummies;\n\t\tthis.targetDummiesChangeEmitter.emit(eventID);\n\t}\n\n\tgetNumActiveParties(): number {\n\t\treturn this.numActiveParties;\n\t}\n\tsetNumActiveParties(eventID: EventID, newNumActiveParties: number) {\n\t\tif (newNumActiveParties != this.numActiveParties && newNumActiveParties > 0) {\n\t\t\tthis.numActiveParties = newNumActiveParties;\n\t\t\tthis.numActivePartiesChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetActivePlayers(): Array<Player<any>> {\n\t\tif (this.activePlayers.length == 0) {\n\t\t\tconst activeParties = this.getParties().filter((party, i) => i < this.numActiveParties);\n\t\t\tthis.activePlayers = activeParties\n\t\t\t\t.map(party => party.getPlayers())\n\t\t\t\t.flat()\n\t\t\t\t.filter(player => player != null) as Array<Player<any>>;\n\t\t}\n\t\treturn this.activePlayers;\n\t}\n\n\ttoProto(forExport?: boolean): RaidProto {\n\t\treturn RaidProto.create({\n\t\t\tparties: this.parties.map(party => party.toProto(forExport)),\n\t\t\tbuffs: this.getBuffs(),\n\t\t\tdebuffs: this.getDebuffs(),\n\t\t\ttanks: this.getTanks(),\n\t\t\ttargetDummies: this.getTargetDummies(),\n\t\t\tnumActiveParties: this.getNumActiveParties(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: RaidProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (proto.buffs) {\n\t\t\t\tif (proto.buffs.demonicPact > 0 && proto.buffs.demonicPactSp == 0) {\n\t\t\t\t\tproto.buffs.demonicPactSp = proto.buffs.demonicPact;\n\t\t\t\t\tif (proto.buffs.demonicPactSp > 1000) {\n\t\t\t\t\t\tproto.buffs.demonicPactSp /= 10;\n\t\t\t\t\t}\n\t\t\t\t\tproto.buffs.demonicPact = 0;\n\t\t\t\t} else if (proto.buffs.demonicPactOld > 0 && proto.buffs.demonicPactSp == 0) {\n\t\t\t\t\tproto.buffs.demonicPactSp = proto.buffs.demonicPactOld;\n\t\t\t\t\tif (proto.buffs.demonicPactSp > 1000) {\n\t\t\t\t\t\tproto.buffs.demonicPactSp /= 10;\n\t\t\t\t\t}\n\t\t\t\t\tproto.buffs.demonicPactOld = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setBuffs(eventID, proto.buffs || RaidBuffs.create());\n\t\t\tthis.setDebuffs(eventID, proto.debuffs || Debuffs.create());\n\t\t\tthis.setTanks(eventID, proto.tanks);\n\t\t\tthis.setTargetDummies(eventID, proto.targetDummies);\n\t\t\tthis.setNumActiveParties(eventID, proto.numActiveParties || 5);\n\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tif (proto.parties[i]) {\n\t\t\t\t\tthis.parties[i].fromProto(eventID, proto.parties[i]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclear(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { REPO_NAME } from './constants/other.js'\nimport { GemColor } from './proto/common.js';\nimport { ItemQuality } from './proto/common.js';\nimport { ItemSlot } from './proto/common.js';\nimport { ItemSpec } from './proto/common.js';\nimport { ItemType } from './proto/common.js';\nimport { Stat } from './proto/common.js';\n\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult, ProgressMetrics } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport { BulkSimRequest, BulkSimResult } from './proto/api.js';\n\nimport { wait } from './utils.js';\n\nconst SIM_WORKER_URL = `/${REPO_NAME}/sim_worker.js`;\n\nexport class WorkerPool {\n\tprivate workers: Array<SimWorker>;\n\n\tconstructor(numWorkers: number) {\n\t\tthis.workers = [];\n\t\tfor (let i = 0; i < numWorkers; i++) {\n\t\t\tthis.workers.push(new SimWorker());\n\t\t}\n\t}\n\n\tprivate getLeastBusyWorker(): SimWorker {\n\t\treturn this.workers.reduce(\n\t\t\t(curMinWorker, nextWorker) => curMinWorker.numTasksRunning < nextWorker.numTasksRunning ?\n\t\t\t\tcurMinWorker : nextWorker);\n\t}\n\n\tasync makeApiCall(requestName: string, request: Uint8Array): Promise<Uint8Array> {\n\t\treturn await this.getLeastBusyWorker().doApiCall(requestName, request, \"\");\n\t}\n\n\tasync computeStats(request: ComputeStatsRequest): Promise<ComputeStatsResult> {\n\t\tconst result = await this.makeApiCall('computeStats', ComputeStatsRequest.toBinary(request));\n\t\treturn ComputeStatsResult.fromBinary(result);\n\t}\n\n\tasync statWeightsAsync(request: StatWeightsRequest, onProgress: Function): Promise<StatWeightsResult> {\n\t\tconsole.log('Stat weights request: ' + StatWeightsRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('statWeightsAsync', StatWeightsRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\t\tconsole.log('Stat weights result: ' + StatWeightsResult.toJsonString(result.finalWeightResult!));\n\t\treturn result.finalWeightResult!;\n\t}\n\n\tasync bulkSimAsync(request: BulkSimRequest, onProgress: Function): Promise<BulkSimResult> {\n\t\tconsole.log('bulk sim request: ' + BulkSimRequest.toJsonString(request, {enumAsInteger: true}));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('bulkSimAsync', BulkSimRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\t\tconst resultJson = BulkSimResult.toJson(result.finalBulkResult!) as any;\n\t\tconsole.log('bulk sim result: ' + JSON.stringify(resultJson));\n\t\treturn result.finalBulkResult!;\n\t}\n\n\tasync raidSimAsync(request: RaidSimRequest, onProgress: Function): Promise<RaidSimResult> {\n\t\tconsole.log('Raid sim request: ' + RaidSimRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('raidSimAsync', RaidSimRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\n\t\t// Don't print the logs because it just clogs the console.\n\t\tconst resultJson = RaidSimResult.toJson(result.finalRaidResult!) as any;\n\t\tdelete resultJson!['logs'];\n\t\tconsole.log('Raid sim result: ' + JSON.stringify(resultJson));\n\t\treturn result.finalRaidResult!;\n\t}\n\n\tnewProgressHandler(id: string, worker: SimWorker, onProgress: Function): (progressData: any) => void {\n\t\treturn (progressData: any) => {\n\t\t\tvar progress = ProgressMetrics.fromBinary(progressData);\n\t\t\tonProgress(progress);\n\t\t\t// If we are done, stop adding the handler.\n\t\t\tif (progress.finalRaidResult != null || progress.finalWeightResult != null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (err) => { });\n\t\t};\n\t}\n}\n\nclass SimWorker {\n\tnumTasksRunning: number;\n\tprivate taskIdsToPromiseFuncs: Record<string, [(result: any) => void, (error: any) => void]>;\n\tprivate worker: Worker;\n\tprivate onReady: Promise<void>;\n\n\tconstructor() {\n\t\tthis.numTasksRunning = 0;\n\t\tthis.taskIdsToPromiseFuncs = {};\n\t\tthis.worker = new window.Worker(SIM_WORKER_URL);\n\n\t\tlet resolveReady: (() => void) | null = null;\n\t\tthis.onReady = new Promise((_resolve, _reject) => {\n\t\t\tresolveReady = _resolve;\n\t\t});\n\n\t\tthis.worker.onmessage = event => {\n\t\t\tif (event.data.msg == 'ready') {\n\t\t\t\tthis.worker.postMessage({ msg: 'setID', id: '1' });\n\t\t\t\tresolveReady!();\n\t\t\t} else if (event.data.msg == 'idconfirm') {\n\t\t\t\t// Do nothing\n\t\t\t} else {\n\t\t\t\tconst id = event.data.id;\n\t\t\t\tif (!this.taskIdsToPromiseFuncs[id]) {\n\t\t\t\t\tconsole.warn('Unrecognized result id: ' + id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst promiseFuncs = this.taskIdsToPromiseFuncs[id];\n\t\t\t\tdelete this.taskIdsToPromiseFuncs[id];\n\t\t\t\tthis.numTasksRunning--;\n\n\t\t\t\tpromiseFuncs[0](event.data.outputData);\n\t\t\t}\n\t\t};\n\t}\n\n\taddPromiseFunc(id: string, callback: (result: any) => void, onError: (error: any) => void) {\n\t\tthis.taskIdsToPromiseFuncs[id] = [callback, onError];\n\t}\n\n\tmakeTaskId(): string {\n\t\tlet id = '';\n\t\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tid += characters.charAt(Math.floor(Math.random() * characters.length));\n\t\t}\n\t\treturn id;\n\t}\n\n\tasync doApiCall(requestName: string, request: Uint8Array, id: string): Promise<Uint8Array> {\n\t\tthis.numTasksRunning++;\n\t\tawait this.onReady;\n\n\t\tconst taskPromise = new Promise<Uint8Array>((resolve, reject) => {\n\t\t\tif (!id) {\n\t\t\t\tid = this.makeTaskId();\n\t\t\t}\n\t\t\tthis.taskIdsToPromiseFuncs[id] = [resolve, reject];\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\tmsg: requestName,\n\t\t\t\tid: id,\n\t\t\t\tinputData: request,\n\t\t\t});\n\t\t});\n\t\treturn await taskPromise;\n\t}\n}\n","import { ArmorType, SimDatabase } from './proto/common.js';\nimport { Faction } from './proto/common.js';\nimport { Profession } from './proto/common.js';;\nimport { RaidTarget } from './proto/common.js';\nimport { Stat, PseudoStat } from './proto/common.js';\nimport { RangedWeaponType, WeaponType } from './proto/common.js';\nimport { BulkSimRequest, BulkSimResult, BulkSettings, Raid as RaidProto } from './proto/api.js';\nimport { ComputeStatsRequest, ComputeStatsResult } from './proto/api.js';\nimport { RaidSimRequest, RaidSimResult } from './proto/api.js';\nimport { SimOptions } from './proto/api.js';\nimport { StatWeightsRequest, StatWeightsResult } from './proto/api.js';\nimport {\n\tDatabaseFilters,\n\tSimSettings as SimSettingsProto,\n\tSourceFilterOption,\n\tRaidFilterOption,\n} from './proto/ui.js';\nimport { Database } from './proto_utils/database.js';\nimport { SimResult } from './proto_utils/sim_result.js';\nimport { getBrowserLanguageCode, setLanguageCode } from './constants/lang.js';\nimport { Encounter } from './encounter.js';\nimport { Player } from './player.js';\nimport { Raid } from './raid.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { getEnumValues } from './utils.js';\nimport { WorkerPool } from './worker_pool.js';\n\nimport * as OtherConstants from './constants/other.js';\n\nexport type RaidSimData = {\n\trequest: RaidSimRequest,\n\tresult: RaidSimResult,\n};\n\nexport type StatWeightsData = {\n\trequest: StatWeightsRequest,\n\tresult: StatWeightsResult,\n};\n\n// Core Sim module which deals only with api types, no UI-related stuff.\nexport class Sim {\n\tprivate readonly workerPool: WorkerPool;\n\n\tprivate iterations: number = 3000;\n\tprivate phase: number = OtherConstants.CURRENT_PHASE;\n\tprivate faction: Faction = Faction.Alliance;\n\tprivate fixedRngSeed: number = 0;\n\tprivate filters: DatabaseFilters = Sim.defaultFilters();\n\tprivate showDamageMetrics: boolean = true;\n\tprivate showThreatMetrics: boolean = false;\n\tprivate showHealingMetrics: boolean = false;\n\tprivate showExperimental: boolean = false;\n\tprivate language: string = '';\n\n\treadonly raid: Raid;\n\treadonly encounter: Encounter;\n\n\tprivate db_: Database|null = null;\n\n\treadonly iterationsChangeEmitter = new TypedEvent<void>();\n\treadonly phaseChangeEmitter = new TypedEvent<void>();\n\treadonly factionChangeEmitter = new TypedEvent<void>();\n\treadonly fixedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly lastUsedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly filtersChangeEmitter = new TypedEvent<void>();\n\treadonly showDamageMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showThreatMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showHealingMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showExperimentalChangeEmitter = new TypedEvent<void>();\n\treadonly languageChangeEmitter = new TypedEvent<void>();\n\treadonly crashEmitter = new TypedEvent<SimError>();\n\n\t// Emits when any of the settings change (but not the raid / encounter).\n\treadonly settingsChangeEmitter: TypedEvent<void>;\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Fires when a raid sim API call completes.\n\treadonly simResultEmitter = new TypedEvent<SimResult>();\n\n\t// Fires when a bulk sim API call starts.\n\treadonly bulkSimStartEmitter = new TypedEvent<BulkSimRequest>();\n\t// Fires when a bulk sim API call completes..\n\treadonly bulkSimResultEmitter = new TypedEvent<BulkSimResult>();\n\n\tprivate readonly _initPromise: Promise<any>;\n\tprivate lastUsedRngSeed: number = 0;\n\n\t// These callbacks are needed so we can apply BuffBot modifications automatically before sending requests.\n\tprivate modifyRaidProto: ((raidProto: RaidProto) => void) = () => { };\n\n\tconstructor() {\n\t\tthis.workerPool = new WorkerPool(1);\n\t\tthis._initPromise = Database.get().then(db => {\n\t\t\tthis.db_ = db;\n\t\t});\n\n\t\tthis.raid = new Raid(this);\n\t\tthis.encounter = new Encounter(this);\n\n\t\tthis.settingsChangeEmitter = TypedEvent.onAny([\n\t\t\tthis.iterationsChangeEmitter,\n\t\t\tthis.phaseChangeEmitter,\n\t\t\tthis.fixedRngSeedChangeEmitter,\n\t\t\tthis.filtersChangeEmitter,\n\t\t\tthis.showDamageMetricsChangeEmitter,\n\t\t\tthis.showThreatMetricsChangeEmitter,\n\t\t\tthis.showHealingMetricsChangeEmitter,\n\t\t\tthis.showExperimentalChangeEmitter,\n\t\t\tthis.languageChangeEmitter,\n\t\t]);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.settingsChangeEmitter,\n\t\t\tthis.raid.changeEmitter,\n\t\t\tthis.encounter.changeEmitter,\n\t\t]);\n\n\t\tthis.raid.changeEmitter.on(eventID => this.updateCharacterStats(eventID));\n\t}\n\n\twaitForInit(): Promise<void> {\n\t\treturn this._initPromise;\n\t}\n\n\tget db(): Database {\n\t\treturn this.db_!;\n\t}\n\n\tsetModifyRaidProto(newModFn: (raidProto: RaidProto) => void) {\n\t\tthis.modifyRaidProto = newModFn;\n\t}\n\tgetModifiedRaidProto(): RaidProto {\n\t\tconst raidProto = this.raid.toProto();\n\t\tthis.modifyRaidProto(raidProto);\n\n\t\t// Remove any inactive meta gems, since the backend doesn't have its own validation.\n\t\traidProto.parties.forEach(party => {\n\t\t\tparty.players.forEach(player => {\n\t\t\t\tif (!player.equipment) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet gear = this.db.lookupEquipmentSpec(player.equipment);\n\t\t\t\tlet gearChanged = false;\n\n\t\t\t\tconst isBlacksmith = [player.profession1, player.profession2].includes(Profession.Blacksmithing);\n\n\t\t\t\t// Disable meta gem if inactive.\n\t\t\t\tif (gear.hasInactiveMetaGem(isBlacksmith)) {\n\t\t\t\t\tgear = gear.withoutMetaGem();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\t// Remove bonus sockets if not blacksmith.\n\t\t\t\tif (!isBlacksmith) {\n\t\t\t\t\tgear = gear.withoutBlacksmithSockets();\n\t\t\t\t\tgearChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (gearChanged) {\n\t\t\t\t\tplayer.equipment = gear.asSpec();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn raidProto;\n\t}\n\n\tmakeRaidSimRequest(debug: boolean): RaidSimRequest {\n\t\tconst raid = this.getModifiedRaidProto();\n\t\tconst encounter = this.encounter.toProto();\n\n\t\t// TODO: remove any replenishment from sim request here? probably makes more sense to do it inside the sim to protect against accidents\n\n\t\treturn RaidSimRequest.create({\n\t\t\traid: raid,\n\t\t\tencounter: encounter,\n\t\t\tsimOptions: SimOptions.create({\n\t\t\t\titerations: debug ? 1 : this.getIterations(),\n\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\tdebugFirstIteration: true,\n\t\t\t}),\n\t\t});\n\t}\n\n\tasync runBulkSim(bulkSettings: BulkSettings, bulkItemsDb: SimDatabase, onProgress: Function): Promise<BulkSimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = BulkSimRequest.create({\n\t\t\tbaseSettings: this.makeRaidSimRequest(false),\n\t\t\tbulkSettings: bulkSettings,\n\t\t});\n\n\t\tif (request.baseSettings != null && request.baseSettings.simOptions != null) {\n\t\t\trequest.baseSettings.simOptions.debugFirstIteration = false;\n\t\t}\n\n\t\tif (!request.baseSettings?.raid || request.baseSettings?.raid?.parties.length == 0 || request.baseSettings?.raid?.parties[0].players.length == 0) {\n\t\t\tthrow new Error('Raid must contain exactly 1 player for bulk sim.');\n\t\t}\n\n\t\t// Attach the extra database to the player.\n\t\tconst playerDatabase = request.baseSettings.raid.parties[0].players[0].database;\n\t\tplayerDatabase?.items.push(...bulkItemsDb.items);\n\t\tplayerDatabase?.enchants.push(...bulkItemsDb.enchants);\n\t\tplayerDatabase?.gems.push(...bulkItemsDb.gems);\n\n\t\tthis.bulkSimStartEmitter.emit(TypedEvent.nextEventID(), request);\n\t\t\n\t\tvar result = await this.workerPool.bulkSimAsync(request, onProgress);\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\n\t\tthis.bulkSimResultEmitter.emit(TypedEvent.nextEventID(), result);\n\t\treturn result;\n\t}\n\n\tasync runRaidSim(eventID: EventID, onProgress: Function): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(false);\n\n\t\tvar result = await this.workerPool.raidSimAsync(request, onProgress);\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\tasync runRaidSimWithLogs(eventID: EventID): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(true);\n\t\tconst result = await this.workerPool.raidSimAsync(request, () => { });\n\t\tif (result.errorResult != \"\") {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\t// This should be invoked internally whenever stats might have changed.\n\tprivate async updateCharacterStats(eventID: EventID) {\n\t\tif (eventID == 0) {\n\t\t\t// Skip the first event ID because it interferes with the loaded stats.\n\t\t\treturn;\n\t\t}\n\t\teventID = TypedEvent.nextEventID();\n\n\t\tawait this.waitForInit();\n\n\t\t// Capture the current players so we avoid issues if something changes while\n\t\t// request is in-flight.\n\t\tconst players = this.raid.getPlayers();\n\n\t\tconst req = ComputeStatsRequest.create({ raid: this.getModifiedRaidProto() });\n\t\tconst result = await this.workerPool.computeStats(req);\n\n\t\tif (result.errorResult != \"\") {\n\t\t\tthis.crashEmitter.emit(eventID, new SimError(result.errorResult));\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tresult.raidStats!.parties\n\t\t\t\t.forEach((partyStats, partyIndex) =>\n\t\t\t\t\tpartyStats.players.forEach((playerStats, playerIndex) =>\n\t\t\t\t\t\tplayers[partyIndex * 5 + playerIndex]?.setCurrentStats(eventID, playerStats)));\n\t\t});\n\t}\n\n\tasync statWeights(player: Player<any>, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat>, epReferenceStat: Stat, onProgress: Function): Promise<StatWeightsResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tif (player.getParty() == null) {\n\t\t\tconsole.warn('Trying to get stat weights without a party!');\n\t\t\treturn StatWeightsResult.create();\n\t\t} else {\n\t\t\tconst tanks = this.raid.getTanks().map(tank => tank.targetIndex).includes(player.getRaidIndex())\n\t\t\t\t? [RaidTarget.create({ targetIndex: 0 })]\n\t\t\t\t: [];\n\t\t\tconst request = StatWeightsRequest.create({\n\t\t\t\tplayer: player.toProto(),\n\t\t\t\traidBuffs: this.raid.getBuffs(),\n\t\t\t\tpartyBuffs: player.getParty()!.getBuffs(),\n\t\t\t\tdebuffs: this.raid.getDebuffs(),\n\t\t\t\tencounter: this.encounter.toProto(),\n\t\t\t\tsimOptions: SimOptions.create({\n\t\t\t\t\titerations: this.getIterations(),\n\t\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\t\tdebug: false,\n\t\t\t\t}),\n\t\t\t\ttanks: tanks,\n\n\t\t\t\tstatsToWeigh: epStats,\n\t\t\t\tpseudoStatsToWeigh: epPseudoStats,\n\t\t\t\tepReferenceStat: epReferenceStat,\n\t\t\t});\n\t\t\tvar result = await this.workerPool.statWeightsAsync(request, onProgress);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tgetPhase(): number {\n\t\treturn this.phase;\n\t}\n\tsetPhase(eventID: EventID, newPhase: number) {\n\t\tif (newPhase != this.phase && newPhase > 0) {\n\t\t\tthis.phase = newPhase;\n\t\t\tthis.phaseChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn this.faction;\n\t}\n\tsetFaction(eventID: EventID, newFaction: Faction) {\n\t\tif (newFaction != this.faction && !!newFaction) {\n\t\t\tthis.faction = newFaction;\n\t\t\tthis.factionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFixedRngSeed(): number {\n\t\treturn this.fixedRngSeed;\n\t}\n\tsetFixedRngSeed(eventID: EventID, newFixedRngSeed: number) {\n\t\tif (newFixedRngSeed != this.fixedRngSeed) {\n\t\t\tthis.fixedRngSeed = newFixedRngSeed;\n\t\t\tthis.fixedRngSeedChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic MAX_RNG_SEED = Math.pow(2, 32) - 1;\n\tprivate nextRngSeed(): number {\n\t\tlet rngSeed = 0;\n\t\tif (this.fixedRngSeed) {\n\t\t\trngSeed = this.fixedRngSeed;\n\t\t} else {\n\t\t\trngSeed = Math.floor(Math.random() * Sim.MAX_RNG_SEED);\n\t\t}\n\n\t\tthis.lastUsedRngSeed = rngSeed;\n\t\tthis.lastUsedRngSeedChangeEmitter.emit(TypedEvent.nextEventID());\n\t\treturn rngSeed;\n\t}\n\tgetLastUsedRngSeed(): number {\n\t\treturn this.lastUsedRngSeed;\n\t}\n\n\tgetFilters(): DatabaseFilters {\n\t\t// Make a defensive copy\n\t\treturn DatabaseFilters.clone(this.filters);\n\t}\n\tsetFilters(eventID: EventID, newFilters: DatabaseFilters) {\n\t\tif (DatabaseFilters.equals(newFilters, this.filters)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make a defensive copy\n\t\tthis.filters = DatabaseFilters.clone(newFilters);\n\t\tthis.filtersChangeEmitter.emit(eventID);\n\t}\n\n\tgetShowDamageMetrics(): boolean {\n\t\treturn this.showDamageMetrics;\n\t}\n\tsetShowDamageMetrics(eventID: EventID, newShowDamageMetrics: boolean) {\n\t\tif (newShowDamageMetrics != this.showDamageMetrics) {\n\t\t\tthis.showDamageMetrics = newShowDamageMetrics;\n\t\t\tthis.showDamageMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowThreatMetrics(): boolean {\n\t\treturn this.showThreatMetrics;\n\t}\n\tsetShowThreatMetrics(eventID: EventID, newShowThreatMetrics: boolean) {\n\t\tif (newShowThreatMetrics != this.showThreatMetrics) {\n\t\t\tthis.showThreatMetrics = newShowThreatMetrics;\n\t\t\tthis.showThreatMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowHealingMetrics(): boolean {\n\t\treturn this.showHealingMetrics;\n\t}\n\tsetShowHealingMetrics(eventID: EventID, newShowHealingMetrics: boolean) {\n\t\tif (newShowHealingMetrics != this.showHealingMetrics) {\n\t\t\tthis.showHealingMetrics = newShowHealingMetrics;\n\t\t\tthis.showHealingMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowExperimental(): boolean {\n\t\treturn this.showExperimental;\n\t}\n\tsetShowExperimental(eventID: EventID, newShowExperimental: boolean) {\n\t\tif (newShowExperimental != this.showExperimental) {\n\t\t\tthis.showExperimental = newShowExperimental;\n\t\t\tthis.showExperimentalChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetLanguage(): string {\n\t\treturn this.language;\n\t}\n\tsetLanguage(eventID: EventID, newLanguage: string) {\n\t\tnewLanguage = newLanguage || getBrowserLanguageCode();\n\t\tif (newLanguage != this.language) {\n\t\t\tthis.language = newLanguage;\n\t\t\tsetLanguageCode(this.language);\n\t\t\tthis.languageChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetIterations(): number {\n\t\treturn this.iterations;\n\t}\n\tsetIterations(eventID: EventID, newIterations: number) {\n\t\tif (newIterations != this.iterations) {\n\t\t\tthis.iterations = newIterations;\n\t\t\tthis.iterationsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic readonly ALL_ARMOR_TYPES = (getEnumValues(ArmorType) as Array<ArmorType>).filter(v => v != 0);\n\tstatic readonly ALL_WEAPON_TYPES = (getEnumValues(WeaponType) as Array<WeaponType>).filter(v => v != 0);\n\tstatic readonly ALL_RANGED_WEAPON_TYPES = (getEnumValues(RangedWeaponType) as Array<RangedWeaponType>).filter(v => v != 0);\n\tstatic readonly ALL_SOURCES = (getEnumValues(SourceFilterOption) as Array<SourceFilterOption>).filter(v => v != 0);\n\tstatic readonly ALL_RAIDS = (getEnumValues(RaidFilterOption) as Array<RaidFilterOption>).filter(v => v != 0);\n\n\ttoProto(): SimSettingsProto {\n\t\tconst filters = this.getFilters();\n\t\tif (filters.armorTypes.length == Sim.ALL_ARMOR_TYPES.length) {\n\t\t\tfilters.armorTypes = [];\n\t\t}\n\t\tif (filters.weaponTypes.length == Sim.ALL_WEAPON_TYPES.length) {\n\t\t\tfilters.weaponTypes = [];\n\t\t}\n\t\tif (filters.rangedWeaponTypes.length == Sim.ALL_RANGED_WEAPON_TYPES.length) {\n\t\t\tfilters.rangedWeaponTypes = [];\n\t\t}\n\t\tif (filters.sources.length == Sim.ALL_SOURCES.length) {\n\t\t\tfilters.sources = [];\n\t\t}\n\t\tif (filters.raids.length == Sim.ALL_RAIDS.length) {\n\t\t\tfilters.raids = [];\n\t\t}\n\n\t\treturn SimSettingsProto.create({\n\t\t\titerations: this.getIterations(),\n\t\t\tphase: this.getPhase(),\n\t\t\tfixedRngSeed: BigInt(this.getFixedRngSeed()),\n\t\t\tshowDamageMetrics: this.getShowDamageMetrics(),\n\t\t\tshowThreatMetrics: this.getShowThreatMetrics(),\n\t\t\tshowHealingMetrics: this.getShowHealingMetrics(),\n\t\t\tshowExperimental: this.getShowExperimental(),\n\t\t\tlanguage: this.getLanguage(),\n\t\t\tfaction: this.getFaction(),\n\t\t\tfilters: filters,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: SimSettingsProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setIterations(eventID, proto.iterations || 3000);\n\t\t\tthis.setPhase(eventID, proto.phase || OtherConstants.CURRENT_PHASE);\n\t\t\tthis.setFixedRngSeed(eventID, Number(proto.fixedRngSeed));\n\t\t\tthis.setShowDamageMetrics(eventID, proto.showDamageMetrics);\n\t\t\tthis.setShowThreatMetrics(eventID, proto.showThreatMetrics);\n\t\t\tthis.setShowHealingMetrics(eventID, proto.showHealingMetrics);\n\t\t\tthis.setShowExperimental(eventID, proto.showExperimental);\n\t\t\tthis.setLanguage(eventID, proto.language);\n\t\t\tthis.setFaction(eventID, proto.faction || Faction.Alliance)\n\n\t\t\tconst filters = proto.filters || Sim.defaultFilters();\n\t\t\tif (filters.armorTypes.length == 0) {\n\t\t\t\tfilters.armorTypes = Sim.ALL_ARMOR_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.weaponTypes.length == 0) {\n\t\t\t\tfilters.weaponTypes = Sim.ALL_WEAPON_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.rangedWeaponTypes.length == 0) {\n\t\t\t\tfilters.rangedWeaponTypes = Sim.ALL_RANGED_WEAPON_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.sources.length == 0) {\n\t\t\t\tfilters.sources = Sim.ALL_SOURCES.slice();\n\t\t\t}\n\t\t\tif (filters.raids.length == 0) {\n\t\t\t\tfilters.raids = Sim.ALL_RAIDS.slice();\n\t\t\t}\n\t\t\tthis.setFilters(eventID, filters);\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID, isTankSim: boolean, isHealingSim: boolean) {\n\t\tthis.fromProto(eventID, SimSettingsProto.create({\n\t\t\titerations: 3000,\n\t\t\tphase: OtherConstants.CURRENT_PHASE,\n\t\t\tfaction: Faction.Alliance,\n\t\t\tshowDamageMetrics: !isHealingSim,\n\t\t\tshowThreatMetrics: isTankSim,\n\t\t\tshowHealingMetrics: isHealingSim,\n\t\t\tlanguage: this.getLanguage(), // Don't change language.\n\t\t\tfilters: Sim.defaultFilters(),\n\t\t}));\n\t}\n\n\tstatic defaultFilters(): DatabaseFilters {\n\t\treturn DatabaseFilters.create({\n\t\t\toneHandedWeapons: true,\n\t\t\ttwoHandedWeapons: true,\n\t\t});\n\t}\n}\n\nexport class SimError extends Error {\n\treadonly errorStr: string;\n\n\tconstructor(errorStr: string) {\n\t\tsuper(errorStr);\n\t\tthis.errorStr = errorStr;\n\t}\n}\n","import { Class, Spec } from './proto/common';\nimport { specToClass } from './proto_utils/utils';\n\n// This file is for anything related to launching a new sim. DO NOT touch this\n// file until your sim is ready to launch!\n\nexport enum LaunchStatus {\n\tUnlaunched,\n\tAlpha,\n\tBeta,\n\tLaunched,\n}\n\nexport const raidSimStatus: LaunchStatus = LaunchStatus.Alpha;\n\n// This list controls which links are shown in the top-left dropdown menu.\nexport const simLaunchStatuses: Record<Spec, LaunchStatus> = {\n\t[Spec.SpecBalanceDruid]: LaunchStatus.Launched,\n\t[Spec.SpecFeralDruid]: LaunchStatus.Launched,\n\t[Spec.SpecFeralTankDruid]: LaunchStatus.Launched,\n\t[Spec.SpecRestorationDruid]: LaunchStatus.Unlaunched,\n\t[Spec.SpecElementalShaman]: LaunchStatus.Launched,\n\t[Spec.SpecEnhancementShaman]: LaunchStatus.Launched,\n\t[Spec.SpecRestorationShaman]: LaunchStatus.Unlaunched,\n\t[Spec.SpecHunter]: LaunchStatus.Launched,\n\t[Spec.SpecMage]: LaunchStatus.Launched,\n\t[Spec.SpecRogue]: LaunchStatus.Launched,\n\t[Spec.SpecHolyPaladin]: LaunchStatus.Unlaunched,\n\t[Spec.SpecProtectionPaladin]: LaunchStatus.Launched,\n\t[Spec.SpecRetributionPaladin]: LaunchStatus.Launched,\n\t[Spec.SpecHealingPriest]: LaunchStatus.Alpha,\n\t[Spec.SpecShadowPriest]: LaunchStatus.Launched,\n\t[Spec.SpecSmitePriest]: LaunchStatus.Launched,\n\t[Spec.SpecWarlock]: LaunchStatus.Launched,\n\t[Spec.SpecWarrior]: LaunchStatus.Launched,\n\t[Spec.SpecProtectionWarrior]: LaunchStatus.Launched,\n\t[Spec.SpecDeathknight]: LaunchStatus.Launched,\n\t[Spec.SpecTankDeathknight]: LaunchStatus.Launched,\n};\n\n// Meme specs are excluded from title drop-down menu.\nexport const memeSpecs: Array<Spec> = [\n\tSpec.SpecSmitePriest,\n];\n\nexport function getLaunchedSims(): Array<Spec> {\n\treturn Object.keys(simLaunchStatuses)\n\t\t.map(specStr => parseInt(specStr) as Spec)\n\t\t.filter(spec => simLaunchStatuses[spec] > LaunchStatus.Unlaunched);\n}\n\nexport function getLaunchedSimsForClass(klass: Class): Array<Spec> {\n\treturn Object.keys(specToClass)\n\t\t.map(specStr => parseInt(specStr) as Spec)\n\t\t.filter(spec => specToClass[spec] == klass && isSimLaunched(spec));\n}\n\nexport function isSimLaunched(specIndex: Spec): boolean {\n\treturn simLaunchStatuses[specIndex] > LaunchStatus.Unlaunched;\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number picker.\n */\nexport interface NumberPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tfloat?: boolean,\n\tpositive?: boolean,\n}\n\n// UI element for picking an arbitrary number field.\nexport class NumberPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly inputElem: HTMLInputElement;\n\tprivate float: boolean;\n\tprivate positive: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-picker-root', modObject, config);\n\t\tthis.float = config.float || false;\n\t\tthis.positive = config.positive || false;\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.classList.add('form-control', 'number-picker-input');\n\n\t\tif (this.positive) {\n\t\t\tthis.inputElem.onchange = e => {\n\t\t\t\tif (this.float) {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseFloat(this.inputElem.value)).toFixed(2);\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseInt(this.inputElem.value)).toString();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.rootElem.appendChild(this.inputElem);\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): number {\n\t\tif (this.float) {\n\t\t\treturn parseFloat(this.inputElem.value || '') || 0;\n\t\t} else {\n\t\t\treturn parseInt(this.inputElem.value || '') || 0;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tif (this.float)\n\t\t\tthis.inputElem.value = newValue.toFixed(2);\n\t\telse\n\t\t\tthis.inputElem.value = String(newValue);\n\t}\n}\n","import { Tooltip } from 'bootstrap';\nimport { Component } from '../components/component.js';\nimport { TypedEvent } from '../typed_event.js';\n\n// Config for displaying a warning to the user whenever a condition is met.\ninterface SimWarning {\n\tupdateOn: TypedEvent<any>,\n\tgetContent: () => string | Array<string>,\n}\n\ninterface WarningLinkArgs {\n\tparent: HTMLElement,\n\thref?: string,\n\ttext?: string,\n\ticon?: string,\n\ttooltip?: string,\n\tclasses?: string,\n\tonclick?: Function\n}\n\nexport class ResultsViewer extends Component {\n\treadonly pendingElem: HTMLElement;\n\treadonly contentElem: HTMLElement;\n\treadonly warningElem: HTMLElement;\n\tprivate warningsLink: HTMLElement;\n\n\tprivate warnings: Array<SimWarning> = [];\n\n\tconstructor(parentElem: HTMLElement) {\n\t\tsuper(parentElem, 'results-viewer');\n\t\tthis.rootElem.innerHTML = `\n      <div class=\"results-pending\">\n        <div class=\"loader\"></div>\n      </div>\n      <div class=\"results-content\">\n      </div>\n\t  <div class=\"warning-zone\" style=\"text-align: center\">\n\t  </div>\n\t\t`;\n\n\t\tthis.pendingElem = this.rootElem.getElementsByClassName('results-pending')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('results-content')[0] as HTMLElement;\n\t\tthis.warningElem = this.rootElem.getElementsByClassName('warning-zone')[0] as HTMLElement;\n\n\t\t\n\t\tthis.warningsLink = this.addWarningsLink();\n\t\tthis.updateWarnings();\n\n\t\tthis.hideAll();\n\t}\n\n\tprivate addWarningLink(args: WarningLinkArgs): HTMLElement {\n\t\tlet fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"sim-toolbar-item\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"${args.href ? args.href : 'javascript:void(0)'}\"\n\t\t\t\t\t${args.href ? 'target=\"_blank\"' : ''}\n\t\t\t\t\tclass=\"${args.classes}\"\n\t\t\t\t\t${args.tooltip ? 'data-bs-toggle=\"tooltip\"' : ''}\n\t\t\t\t\t${args.tooltip ? 'data-bs-placement=\"bottom\"' : ''}\n\t\t\t\t\t${args.tooltip ? `data-bs-title=\"${args.tooltip}\"` : ''}\n\t\t\t\t\t${args.tooltip ? 'data-bs-html=\"true\"' : ''}\n\t\t\t\t>\n\t\t\t\t\t${args.icon ? `<i class=\"${args.icon}\"></i>` : ''}\n\t\t\t\t\t${args.text ? args.text : ''}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t`;\n\n\t\tlet item = fragment.children[0] as HTMLElement;\n\t\tlet link = item.children[0] as HTMLElement;\n\n\t\tif (args.onclick) {\n\t\t\tlink.addEventListener('click', () => {\n\t\t\t\tif (args.onclick)\n\t\t\t\t\targs.onclick();\n\t\t\t});\n\t\t}\n\n\t\tnew Tooltip(link);\n\t\targs.parent.appendChild(item);\n\n\t\treturn item;\n\t}\n\n\tprivate addWarningsLink(): HTMLElement {\n\t\treturn this.addWarningLink({\n\t\t\tparent: this.warningElem,\n\t\t\ticon: 'fas fa-exclamation-triangle fa-3x',\n\t\t\ttooltip: \"<ul class='text-start ps-3 mb-0'></ul>\",\n\t\t\tclasses: 'warnings link-warning'\n\t\t}).children[0] as HTMLElement;\n\t}\n\n\taddWarning(warning: SimWarning) {\n\t\tthis.warnings.push(warning);\n\t\twarning.updateOn.on(() => this.updateWarnings());\n\t\tthis.updateWarnings();\n\t}\n\n\tprivate updateWarnings() {\n\t\tconst activeWarnings = this.warnings.map(warning => warning.getContent()).flat().filter(content => content != '');\n\t\tlet tooltipFragment = document.createElement('fragment');\n\t\ttooltipFragment.innerHTML = this.warningsLink.getAttribute('data-bs-title') as string;\n\t\tlet list = tooltipFragment.children[0] as HTMLElement;\n\t\tlist.innerHTML = '';\n\t\tif (activeWarnings.length == 0) {\n\t\t\tthis.warningsLink.parentElement?.classList?.add('hide');\n\t\t} else {\n\t\t\tthis.warningsLink.parentElement?.classList?.remove('hide');\n\t\t\tactiveWarnings.forEach(warning => {\n\t\t\t\tlet listItem = document.createElement('li');\n\t\t\t\tlistItem.innerHTML = warning;\n\t\t\t\tlist.appendChild(listItem);\n\t\t\t});\n\t\t}\n\t\tthis.warningsLink.setAttribute('data-bs-title', list.outerHTML);\n\t\tnew Tooltip(this.warningsLink);\n\t}\n\n\thideAll() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n\n\tsetPending() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'initial';\n\t}\n\n\tsetContent(innerHTML: string) {\n\t\tthis.contentElem.innerHTML = innerHTML;\n\t\tthis.contentElem.style.display = 'initial';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n}\n","import { Component } from './component.js';\nimport {\n  getLaunchedSimsForClass,\n  LaunchStatus,\n  raidSimStatus,\n  simLaunchStatuses\n} from '../launched_sims.js';\nimport { Class, Spec } from '../proto/common.js';\nimport {\n  classNames,\n  getSpecSiteUrl,\n\tnaturalClassOrder,\n  raidSimSiteUrl,\n  raidSimIcon,\n  raidSimLabel,\n  specNames,\n  specToClass,\n\ttextCssClassForClass,\n\ttextCssClassForSpec,\n\ttitleIcons,\n} from '../proto_utils/utils.js';\n\ninterface ClassOptions {\n  type: 'Class',\n  index: Class\n}\n\ninterface SpecOptions {\n  type: 'Spec'\n  index: Spec\n}\n\ninterface RaidOptions {\n  type: 'Raid'\n}\n\ntype SimTitleDropdownConfig = {\n  noDropdown?: boolean,\n}\n\n// Dropdown menu for selecting a player.\nexport class SimTitleDropdown extends Component {\n  private readonly dropdownMenu: HTMLElement | undefined;\n\n  private readonly specLabels: Record<Spec, string> = {\n    [Spec.SpecBalanceDruid]:       'Balance',\n    [Spec.SpecFeralDruid]:         'Feral DPS',\n    [Spec.SpecFeralTankDruid]:     'Feral Tank',\n    [Spec.SpecRestorationDruid]:   'Restoration',\n    [Spec.SpecElementalShaman]:    'Elemental',\n    [Spec.SpecEnhancementShaman]:  'Enhancement',\n    [Spec.SpecRestorationShaman]:  'Restoration',\n    [Spec.SpecHunter]:             'Hunter',\n    [Spec.SpecMage]:               'Mage',\n    [Spec.SpecRogue]:              'Rogue',\n    [Spec.SpecHolyPaladin]:        'Holy',\n    [Spec.SpecProtectionPaladin]:  'Protection',\n    [Spec.SpecRetributionPaladin]: 'Retribution',\n    [Spec.SpecHealingPriest]:      'Healing',\n    [Spec.SpecShadowPriest]:       'Shadow',\n    [Spec.SpecSmitePriest]:        'Smite',\n    [Spec.SpecWarlock]:            'Warlock',\n    [Spec.SpecWarrior]:            'DPS',\n    [Spec.SpecProtectionWarrior]:  'Protection',\n    [Spec.SpecDeathknight]:        'DPS',\n    [Spec.SpecTankDeathknight]:    'Tank',\n  }\n\n  constructor(parent: HTMLElement, currentSpecIndex: Spec | null, config: SimTitleDropdownConfig = {}) {\n    super(parent, 'sim-title-dropdown-root');\n\n    let rootLinkArgs: SpecOptions|RaidOptions = currentSpecIndex === null ? {type: 'Raid'} : {type: 'Spec', index: currentSpecIndex}\n    let rootLink = this.buildRootSimLink(rootLinkArgs);\n\n    if (config.noDropdown) {\n      this.rootElem.innerHTML = rootLink.outerHTML;\n      return\n    }\n\n    this.rootElem.innerHTML = `\n      <div class=\"dropdown sim-link-dropdown\">\n        ${rootLink.outerHTML}\n        <ul class=\"dropdown-menu\"></ul>\n      </div>\n    `;\n\n    this.dropdownMenu = this.rootElem.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n    this.buildDropdown();\n\n    // Prevent Bootstrap from closing the menu instead of opening class menus\n    this.dropdownMenu.addEventListener('click', (event) => {\n      let target = event.target as HTMLElement;\n      let link = target.closest('a:not([href=\"javascript:void(0)\"]');\n\n      if (!link) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    })\n  }\n  \n  private buildDropdown() {\n    if (raidSimStatus >= LaunchStatus.Alpha) {\n      // Add the raid sim to the top of the dropdown\n      let raidListItem = document.createElement('li');\n      raidListItem.appendChild(this.buildRaidLink());\n      this.dropdownMenu?.appendChild(raidListItem);\n    }\n\n    naturalClassOrder.forEach( classIndex => {\n      let listItem = document.createElement('li');\n      let sims = getLaunchedSimsForClass(classIndex);\n\n      if (sims.length == 1) {\n        // The class only has one listed sim so make a direct link to the sim\n        listItem.appendChild(this.buildClassLink(classIndex));\n        this.dropdownMenu?.appendChild(listItem);\n      } else if (sims.length > 1) {\n        // Add the class to the dropdown with an additional spec dropdown\n        listItem.appendChild(this.buildClassDropdown(classIndex));\n        this.dropdownMenu?.appendChild(listItem);\n      }\n    });\n  }\n\n  private buildClassDropdown(classIndex: Class) {\n    let sims = getLaunchedSimsForClass(classIndex);\n    let dropdownFragment = document.createElement('fragment');\n    let dropdownMenu = document.createElement('ul');\n    dropdownMenu.classList.add('dropdown-menu');\n\n    // Generate the class link to act as a dropdown toggle for the spec dropdown\n    let classLink = this.buildClassLink(classIndex);\n\n    // Generate links for a class's specs\n    sims.forEach( (specIndex) => {\n      let listItem = document.createElement('li');\n      let link = this.buildSpecLink(specIndex);\n\n      listItem.appendChild(link);\n      dropdownMenu.appendChild(listItem);\n    });\n\n    dropdownFragment.innerHTML = `\n      <div class=\"dropend sim-link-dropdown\">\n        ${classLink.outerHTML}\n        ${dropdownMenu.outerHTML}\n      </div>\n    `;\n\n    return dropdownFragment.children[0] as HTMLElement;\n  }\n\n  private buildRootSimLink(data: SpecOptions | RaidOptions): HTMLElement {\n    let iconPath  = this.getSimIconPath(data);;\n    let textKlass = this.getContextualKlass(data);\n    let label;\n\n    if (data.type == 'Raid')\n      label = raidSimLabel;\n    else {\n      let classIndex = specToClass[data.index];\n      if (getLaunchedSimsForClass(classIndex).length > 1)\n        // If the class has multiple sims, use the spec name\n        label = specNames[data.index];\n      else\n        // If the class has only 1 sim, use the class name\n        label = classNames[classIndex];\n    }\n\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <a href=\"javascript:void(0)\" class=\"sim-link ${textKlass}\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-label text-white\">WoWSims - WOTLK</span>\n            <span class=\"sim-link-title\">${label}</span>\n            ${this.launchStatusLabel(data)}\n          </div>\n        </div>\n      </a>\n    `;\n\n    return fragment.children[0] as HTMLElement;\n  }\n\n  private buildRaidLink(): HTMLElement {\n    let href      = raidSimSiteUrl;\n    let textKlass = this.getContextualKlass({type: 'Raid'});\n    let iconPath  = this.getSimIconPath({type: 'Raid'});\n    let label     = raidSimLabel;\n\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <a href=\"${raidSimSiteUrl}\" class=\"sim-link ${textKlass}\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-title\">${label}</span>\n            ${this.launchStatusLabel({type: 'Raid'})}\n          </div>\n        </div>\n      </a>\n    `;\n\n    return fragment.children[0] as HTMLElement;\n  }\n\n  private buildClassLink(classIndex: Class): HTMLElement {\n    let specIndexes = getLaunchedSimsForClass(classIndex);\n    let href        = specIndexes.length > 1 ? 'javascript:void(0)' : getSpecSiteUrl(specIndexes[0]);\n    let textKlass   = this.getContextualKlass({type: 'Class', index: classIndex});\n    let iconPath    = this.getSimIconPath({type: 'Class', index: classIndex});\n    let label       = classNames[classIndex];\n\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <a href=\"${href}\" class=\"sim-link ${textKlass}\" ${specIndexes.length > 1 ? 'role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"' : ''}>\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-title\">${label}</span>\n            ${specIndexes.length == 1 ? this.launchStatusLabel({type: 'Spec', index: specIndexes[0]}) : ''}\n          </div>\n        </div>\n      </a>\n    `;\n\n    return fragment.children[0] as HTMLElement;\n  }\n\n  private buildSpecLink(specIndex: Spec): HTMLElement {\n    let href      = getSpecSiteUrl(specIndex);\n    let textKlass = this.getContextualKlass({type: 'Spec', index: specIndex});\n    let iconPath  = this.getSimIconPath({type: 'Spec', index: specIndex});\n    let className = classNames[specToClass[specIndex]];\n    let specLabel = this.specLabels[specIndex];\n\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <a href=\"${href}\" class=\"sim-link ${textKlass}\" role=\"button\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-label\">${className}</span>\n            <span class=\"sim-link-title\">${specLabel}</span>\n            ${this.launchStatusLabel({type: 'Spec', index: specIndex})}\n          </div>\n        </div>\n      </a>\n    `;\n\n    return fragment.children[0] as HTMLElement;\n  }\n\n  private launchStatusLabel(data: SpecOptions | RaidOptions): string {\n    if (\n      (data.type == 'Raid' && raidSimStatus == LaunchStatus.Launched) ||\n      (data.type == 'Spec' && simLaunchStatuses[data.index] == LaunchStatus.Launched)\n    ) return \"\";\n\n    let label = data.type == 'Raid' ? LaunchStatus[raidSimStatus] : LaunchStatus[simLaunchStatuses[data.index]];\n    let elem = document.createElement('span');\n    elem.classList.add('launch-status-label', 'text-brand');\n    elem.textContent = label;\n\n    return elem.outerHTML;\n  }\n\n  private getSimIconPath(data: ClassOptions | SpecOptions | RaidOptions): string {\n    let iconPath: string;\n\n    if (data.type == 'Raid') {\n      iconPath = raidSimIcon;\n    } else if (data.type == 'Class') {\n\t\t\tlet className = classNames[data.index];\n\t\t\ticonPath = `/wotlk/assets/img/${className.toLowerCase().replace(/\\s/g, '_')}_icon.png`\n    } else {\n\t\t\ticonPath = titleIcons[data.index];\n\t\t}\n\n    return iconPath;\n  }\n\n  private getContextualKlass(data: ClassOptions | SpecOptions | RaidOptions): string {\n    if (data.type == 'Raid')\n      // Raid link\n      return 'text-white';\n    else if (data.type == 'Class')\n      // Class links\n      return textCssClassForClass(data.index);\n    else\n      return textCssClassForSpec(data.index);\n  }\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a boolean picker (checkbox).\n */\nexport interface BooleanPickerConfig<ModObject> extends InputConfig<ModObject, boolean> {\n\tcssScheme?: string;\n}\n\n// UI element for picking an arbitrary number field.\nexport class BooleanPicker<ModObject> extends Input<ModObject, boolean> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: BooleanPickerConfig<ModObject>) {\n\t\tsuper(parent, 'boolean-picker-root', modObject, config);\n\n\t\tthis.rootElem.classList.add('form-check', 'form-check-reverse');\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'checkbox';\n\t\tthis.inputElem.classList.add('boolean-picker-input', 'form-check-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): boolean {\n\t\treturn Boolean(this.inputElem.checked);\n\t}\n\n\tsetInputValue(newValue: boolean) {\n\t\tthis.inputElem.checked = newValue;\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface EnumValueConfig {\n\tname: string,\n\tvalue: number,\n\ttooltip?: string,\n}\n\nexport interface EnumPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tvalues: Array<EnumValueConfig>;\n}\n\nexport class EnumPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly selectElem: HTMLSelectElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: EnumPickerConfig<ModObject>) {\n\t\tsuper(parent, 'enum-picker-root', modObject, config);\n\n\t\tthis.selectElem = document.createElement('select');\n\t\tthis.selectElem.classList.add('enum-picker-selector', 'form-select');\n\t\tthis.rootElem.appendChild(this.selectElem);\n\n\t\tconfig.values.forEach((value) => {\n\t\t\tconst option = document.createElement('option');\n\t\t\toption.value = String(value.value);\n\t\t\toption.textContent = value.name;\n\t\t\tthis.selectElem.appendChild(option);\n\n\t\t\tif (value.tooltip) {\n\t\t\t\toption.title = value.tooltip;\n\t\t\t}\n\t\t});\n\n\t\tthis.init();\n\n\t\tthis.selectElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.selectElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn parseInt(this.selectElem.value);\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.selectElem.value = String(newValue);\n\t}\n}\n","import { SimUI } from '../sim_ui.js';\nimport { Sim } from '../sim.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { wowheadSupportedLanguages } from '../constants/lang.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { BaseModal } from './base_modal.js';\nimport { Tooltip } from 'bootstrap';\n\nexport class SettingsMenu extends BaseModal {\n\tprivate readonly simUI: SimUI;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent, 'settings-menu', {title: \"Options\", footer: true});\n\t\tthis.simUI = simUI;\n\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"picker-group\">\n\t\t\t\t<div class=\"fixed-rng-seed-container\">\n\t\t\t\t\t<div class=\"fixed-rng-seed\"></div>\n\t\t\t\t\t<div class=\"form-text\">\n\t\t\t\t\t\t<span>Last used RNG seed:</span>&nbsp;<span class=\"last-used-rng-seed\">0</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"language-picker within-raid-sim-hide\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"show-threat-metrics-picker w-50 pe-2\"></div>\n\t\t\t<div class=\"show-experimental-picker w-50 pe-2\"></div>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t<button\n\t\t\t\tclass=\"restore-defaults-button btn btn-primary\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-title=\"Restores all default settings (gear, consumes, buffs, talents, EP weights, etc).\"\n\t\t\t>Restore Defaults</button>\n\t\t`\n\n\t\tconst restoreDefaultsButton = this.rootElem.getElementsByClassName('restore-defaults-button')[0] as HTMLElement;\n\t\tTooltip.getOrCreateInstance(restoreDefaultsButton);\n\t\trestoreDefaultsButton.addEventListener('click', event => {\n\t\t\tthis.simUI.applyDefaults(TypedEvent.nextEventID());\n\t\t});\n\n\t\tconst fixedRngSeed = this.rootElem.getElementsByClassName('fixed-rng-seed')[0] as HTMLElement;\n\t\tnew NumberPicker(fixedRngSeed, this.simUI.sim, {\n\t\t\tlabel: 'Fixed RNG Seed',\n\t\t\tlabelTooltip: 'Seed value for the random number generator used during sims, or 0 to use different randomness each run. Use this to share exact sim results or for debugging.',\n\t\t\textraCssClasses: ['mb-0'],\n\t\t\tchangedEvent: (sim: Sim) => sim.fixedRngSeedChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFixedRngSeed(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setFixedRngSeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst lastUsedRngSeed = this.rootElem.getElementsByClassName('last-used-rng-seed')[0] as HTMLElement;\n\t\tlastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed());\n\t\tthis.simUI.sim.lastUsedRngSeedChangeEmitter.on(() => lastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed()));\n\n\t\tconst language = this.rootElem.getElementsByClassName('language-picker')[0] as HTMLElement;\n\t\tconst langs = Object.keys(wowheadSupportedLanguages);\n\t\tconst defaultLang = langs.indexOf('en');\n\t\tconst languagePicker = new EnumPicker(language, this.simUI.sim, {\n\t\t\tlabel: 'Language',\n\t\t\tlabelTooltip: 'Controls the language for Wowhead tooltips.',\n\t\t\tvalues: langs.map((lang, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: wowheadSupportedLanguages[lang],\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: (sim: Sim) => sim.languageChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => {\n\t\t\t\tconst idx = langs.indexOf(sim.getLanguage());\n\t\t\t\treturn idx == -1 ? defaultLang : idx;\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setLanguage(eventID, langs[newValue] || 'en');\n\t\t\t},\n\t\t});\n\t\t// Refresh page after language change, to apply the changes.\n\t\tlanguagePicker.changeEmitter.on(() => setTimeout(() => location.reload(), 100));\n\n\t\tconst showThreatMetrics = this.rootElem.getElementsByClassName('show-threat-metrics-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showThreatMetrics, this.simUI.sim, {\n\t\t\tlabel: 'Show Threat/Tank Options',\n\t\t\tlabelTooltip: 'Shows all options and metrics relevant to tanks, like TPS/DTPS.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: (sim: Sim) => sim.showThreatMetricsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowThreatMetrics(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowThreatMetrics(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst showExperimental = this.rootElem.getElementsByClassName('show-experimental-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showExperimental, this.simUI.sim, {\n\t\t\tlabel: 'Show Experimental',\n\t\t\tlabelTooltip: 'Shows experimental options, if there are any active experiments.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: (sim: Sim) => sim.showExperimentalChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowExperimental(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowExperimental(eventID, newValue);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Component } from './component';\nimport { SettingsMenu } from './settings_menu';\nimport { SimUI } from '../sim_ui';\nimport { Tooltip } from 'bootstrap';\nimport { SimTab } from './sim_tab';\n\ninterface ToolbarLinkArgs {\n\tparent: HTMLElement,\n\thref?: string,\n\ttext?: string,\n\ticon?: string,\n\ttooltip?: string,\n\tclasses?: string,\n\tonclick?: Function\n}\n\nexport class SimHeader extends Component {\n  private simUI: SimUI;\n\n  private simTabsContainer: HTMLElement;\n\tprivate simToolbar: HTMLElement;\n\tprivate knownIssuesLink: HTMLElement;\n\n  constructor(parentElem: HTMLElement, simUI: SimUI) {\n    super(parentElem, 'sim-header');\n\n    this.simUI = simUI;\n\n    this.simTabsContainer = this.rootElem.querySelector('.sim-tabs') as HTMLElement;\n\t\tthis.simToolbar = this.rootElem.querySelector('.sim-toolbar') as HTMLElement;\t\n\n\t\tthis.knownIssuesLink = this.addKnownIssuesLink();\n    this.addBugReportLink();\n    this.addDownloadBinaryLink();\n    this.addSimOptionsLink();\n\t\tthis.addSocialLinks();\n  }\n\n  activateTab(className: string) {\n\t(this.simTabsContainer.getElementsByClassName(className)[0] as HTMLElement).click();\n  }\n\n  addTab(title: string, contentId: string) {\n\t\tconst isFirstTab = this.simTabsContainer.children.length == 0;\n\n\t\tconst tabFragment = document.createElement('fragment');\n\t\ttabFragment.innerHTML = `\n\t\t\t<li class=\"${contentId} nav-item\" role=\"presentation\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"nav-link ${isFirstTab ? 'active' : ''}\"\n\t\t\t\t\tdata-bs-toggle=\"tab\"\n\t\t\t\t\tdata-bs-target=\"#${contentId}\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\taria-controls=\"${contentId}\"\n\t\t\t\t\taria-selected=\"${isFirstTab}\"\n\t\t\t\t>${title}</a>\n\t\t\t</li>\n\t\t`;\n\n\t\tthis.simTabsContainer.appendChild(tabFragment.children[0] as HTMLElement);\n\t}\n\n\taddSimTabLink(tab: SimTab) {\n\t\tconst isFirstTab = this.simTabsContainer.children.length == 0;\n\n\t\ttab.navLink.setAttribute('aria-selected', isFirstTab.toString());\n\n\t\tif (isFirstTab) tab.navLink.classList.add('active', 'show');\n\t\t\n\t\tthis.simTabsContainer.appendChild(tab.navItem);\n\t}\n\n\taddImportLink(label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tthis.addImportExportLink('import-dropdown', label, onClick, hideInRaidSim);\n  }\n\taddExportLink(label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tthis.addImportExportLink('export-dropdown', label, onClick, hideInRaidSim);\n  }\n\tprivate addImportExportLink(cssClass: string, label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName(cssClass)[0] as HTMLElement;\n\t\tconst menuElem = dropdownElem.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\n\t\tconst itemFragment = document.createElement('fragment');\n\t\titemFragment.innerHTML = `\n\t\t\t<li>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t>${label}</a>\n\t\t\t</li>\n\t\t`;\n\t\tconst itemElem = itemFragment.children[0] as HTMLElement;\n\t\tconst linkElem = itemElem.children[0] as HTMLElement;\n\t\tlinkElem.addEventListener('click', () => onClick(menuElem));\n\t\tmenuElem.appendChild(itemElem);\n\t}\n\n\tprivate addToolbarLink(args: ToolbarLinkArgs): HTMLElement {\n\t\tlet fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"sim-toolbar-item\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"${args.href ? args.href : 'javascript:void(0)'}\"\n\t\t\t\t\t${args.href ? 'target=\"_blank\"' : ''}\n\t\t\t\t\tclass=\"${args.classes}\"\n\t\t\t\t\t${args.tooltip ? 'data-bs-toggle=\"tooltip\"' : ''}\n\t\t\t\t\t${args.tooltip ? 'data-bs-placement=\"bottom\"' : ''}\n\t\t\t\t\t${args.tooltip ? `data-bs-title=\"${args.tooltip}\"` : ''}\n\t\t\t\t\t${args.tooltip ? 'data-bs-html=\"true\"' : ''}\n\t\t\t\t>\n\t\t\t\t\t${args.icon ? `<i class=\"${args.icon}\"></i>` : ''}\n\t\t\t\t\t${args.text ? args.text : ''}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t`;\n\n\t\tlet item = fragment.children[0] as HTMLElement;\n\t\tlet link = item.children[0] as HTMLElement;\n\n\t\tif (args.onclick) {\n\t\t\tlink.addEventListener('click', () => {\n\t\t\t\t// Typescript is requiring this even though the condition is being done already above\n\t\t\t\tif (args.onclick)\n\t\t\t\t\targs.onclick();\n\t\t\t});\n\t\t}\n\n\t\tnew Tooltip(link);\n\t\targs.parent.appendChild(item);\n\n\t\treturn item;\n\t}\n\n\tprivate addKnownIssuesLink(): HTMLElement {\n\t\treturn this.addToolbarLink({\n\t\t\tparent: this.simToolbar,\n\t\t\ttext: \"Known Issues\",\n\t\t\ttooltip: \"<ul class='text-start ps-3 mb-0'></ul>\",\n\t\t\tclasses: \"known-issues link-danger\"\n\t\t}).children[0] as HTMLElement;\n\t}\n\n  addKnownIssue(issue: string) {\n\t\tlet tooltipFragment = document.createElement('fragment');\n\t\ttooltipFragment.innerHTML = this.knownIssuesLink.getAttribute('data-bs-title') as string;\n\t\tlet list = tooltipFragment.children[0] as HTMLElement;\n\t\tlet listItem = document.createElement('li');\n\t\tlistItem.innerHTML = issue;\n\t\tlist.appendChild(listItem);\n\t\tthis.knownIssuesLink.setAttribute('data-bs-title', list.outerHTML);\n    new Tooltip(this.knownIssuesLink);\n\t}\n\n  private addBugReportLink() {\n\t\tthis.addToolbarLink({\n\t\t\thref: \"https://github.com/wowsims/wotlk/issues/new/choose\",\n\t\t\tparent: this.simToolbar,\n\t\t\ticon: \"fas fa-bug fa-lg\",\n\t\t\ttooltip: \"Report a bug or<br>Request a feature\"\n\t\t})\n\t}\n\n  private addDownloadBinaryLink() {\n\t\tlet href = \"https://github.com/wowsims/wotlk/releases\";\n\t\tlet icon = \"fas fa-gauge-high fa-lg\"\n\t\tlet parent = this.simToolbar;\n\n\t\tif (document.location.href.includes(\"localhost\")) {\n\t\t\tfetch(\"/version\").then(resp => {\n\t\t\t\tresp.json()\n\t\t\t\t\t.then((versionInfo) => {\n\t\t\t\t\t\tif (versionInfo.outdated == 2) {\n\t\t\t\t\t\t\tthis.addToolbarLink({\n\t\t\t\t\t\t\t\thref: href,\n\t\t\t\t\t\t\t\tparent: parent,\n\t\t\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\t\t\ttooltip: \"Newer version of simulator available for download\",\n\t\t\t\t\t\t\t\tclasses: \"downbin link-danger\",\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.warn('No version info found!');\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.addToolbarLink({\n\t\t\t\thref: href,\n\t\t\t\tparent: parent,\n\t\t\t\ticon: icon,\n\t\t\t\ttooltip: \"Download simulator for faster simulating\",\n\t\t\t\tclasses: \"downbin\",\n\t\t\t})\n\t\t}\n  }\n\n  private addSimOptionsLink() {\n\t\tthis.addToolbarLink({\n\t\t\tparent: this.simToolbar,\n\t\t\ticon: \"fas fa-cog fa-lg\",\n\t\t\ttooltip: \"Show Sim Options\",\n\t\t\tclasses: 'sim-options',\n\t\t\tonclick: () => new SettingsMenu(this.simUI.rootElem, this.simUI)\n\t\t})\n\t}\n\n\tprivate addSocialLinks() {\n\t\tlet container = document.createElement('div');\n\t\tcontainer.classList.add('sim-toolbar-socials')\n\t\tthis.simToolbar.appendChild(container);\n\n\t\tthis.addDiscordLink(container);\n\t\tthis.addGitHubLink(container);\n\t\tthis.addPatreonLink(container);\n\t}\n\n\tprivate addDiscordLink(container: HTMLElement) {\n\t\tthis.addToolbarLink({\n\t\t\thref: \"https://discord.gg/p3DgvmnDCS\",\n\t\t\tparent: container,\n\t\t\ticon: \"fab fa-discord fa-lg\",\n\t\t\ttooltip: \"Join us on Discord\",\n\t\t\tclasses: \"discord-link link-alt\"\n\t\t})\n\t}\n\n\tprivate addGitHubLink(container: HTMLElement) {\n\t\tthis.addToolbarLink({\n\t\t\thref: \"https://github.com/wowsims/wotlk\",\n\t\t\tparent: container,\n\t\t\ticon: \"fab fa-github fa-lg\",\n\t\t\ttooltip: \"Contribute on GitHub\",\n\t\t\tclasses: \"github-link link-alt\"\n\t\t})\n\t}\n\n\tprivate addPatreonLink(container: HTMLElement) {\n\t\tthis.addToolbarLink({\n\t\t\thref: \"https://patreon.com/wowsims\",\n\t\t\tparent: container,\n\t\t\ttext: \"Support our devs\",\n\t\t\ticon: \"fab fa-patreon fa-lg\",\n\t\t\tclasses: \"patreon-link link-alt\"\n\t\t})\n\t}\n\n\tprotected customRootElement(): HTMLElement {\n\t\tlet headerFragment = document.createElement('fragment');\n\t\theaderFragment.innerHTML = `\n\t\t\t<header class=\"sim-header\">\n\t\t\t\t<ul class=\"sim-tabs nav nav-tabs\" role=\"tablist\"></ul>\n\t\t\t\t<div class=\"import-export within-raid-sim-hide\">\n\t\t\t\t\t<div class=\"dropdown sim-dropdown-menu import-dropdown\">\n\t\t\t\t\t\t<a href=\"javascript:void(0)\" class=\"import-link\" role=\"button\" data-bs-toggle=\"dropdown\" data-bs-display=\"dynamic\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t<i class=\"fa fa-download\"></i>\n\t\t\t\t\t\t\tImport\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\"></ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"dropdown sim-dropdown-menu export-dropdown\">\n\t\t\t\t\t\t<a href=\"javascript:void(0)\" class=\"export-link\" role=\"button\" data-bs-toggle=\"dropdown\" data-bs-display=\"dynamic\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t<i class=\"fa fa-right-from-bracket\"></i>\n\t\t\t\t\t\t\tExport\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class=\"dropdown-menu\"></ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"sim-toolbar\"></div>\n\t\t\t</header>\n\t\t`;\n\n\t\treturn headerFragment.children[0] as HTMLElement;\n\t}\n}\n","import { Component } from './components/component.js';\nimport { NumberPicker } from './components/number_picker.js';\nimport { ResultsViewer } from './components/results_viewer.js';\nimport { SimTitleDropdown } from './components/sim_title_dropdown.js';\nimport { SimHeader } from './components/sim_header';\nimport { Spec } from './proto/common.js';\nimport { LaunchStatus } from './launched_sims.js';\n\nimport { Sim, SimError } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\nimport { SimTab } from './components/sim_tab.js';\nimport { BaseModal } from './components/base_modal.js';\n\nconst URLMAXLEN = 2048;\nconst noticeText = '';\nconst globalKnownIssues = [\n\t'Wowhead tooltips may not correctly display Tier 8 set bonuses when combining 10 and 25 player tier pieces.'\n]\n\n// Config for displaying a warning to the user whenever a condition is met.\nexport interface SimWarning {\n\tupdateOn: TypedEvent<any>,\n\tgetContent: () => string | Array<string>,\n}\n\nexport interface SimUIConfig {\n\t// Additional css class to add to the root element.\n\tcssClass: string;\n\t// Scheme used for themeing on a per-class Basis or for other sims\n\tcssScheme: string;\n\t// The spec, if an individual sim, or null if the raid sim.\n\tspec: Spec | null,\n\tlaunchStatus: LaunchStatus,\n\tknownIssues?: Array<string>,\n}\n\n// Shared UI for all individual sims and the raid sim.\nexport abstract class SimUI extends Component {\n\treadonly sim: Sim;\n\treadonly cssClass: string;\n\treadonly cssScheme: string;\n\treadonly isWithinRaidSim: boolean;\n\n\t// Emits when anything from the sim, raid, or encounter changes.\n\treadonly changeEmitter;\n\n\treadonly resultsViewer: ResultsViewer\n\treadonly simHeader: SimHeader;\n\n\treadonly simContentContainer: HTMLElement;\n\treadonly simMain: HTMLElement;\n\treadonly simActionsContainer: HTMLElement;\n\treadonly iterationsPicker: HTMLElement;\n\treadonly simTabContentsContainer: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, sim: Sim, config: SimUIConfig) {\n\t\tsuper(parentElem, 'sim-ui');\n\t\tthis.sim = sim;\n\t\tthis.cssClass = config.cssClass;\n\t\tthis.cssScheme = config.cssScheme;\n\t\tthis.isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n\t\tthis.rootElem.innerHTML = simHTML;\n\t\tthis.simContentContainer = this.rootElem.querySelector('.sim-content') as HTMLElement;\n\t\tthis.simHeader = new SimHeader(this.simContentContainer, this);\n\t\tthis.simMain = document.createElement('main');\n\t\tthis.simMain.classList.add('sim-main', 'tab-content');\n\t\tthis.simContentContainer.appendChild(this.simMain);\n\n\t\tthis.rootElem.classList.add(this.cssClass);\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.rootElem.classList.add('not-within-raid-sim');\n\t\t}\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.sim.changeEmitter,\n\t\t], 'SimUIChange');\n\n\t\tthis.sim.crashEmitter.on((eventID: EventID, error: SimError) => this.handleCrash(error));\n\n\t\tconst updateShowDamageMetrics = () => {\n\t\t\tif (this.sim.getShowDamageMetrics())\n\t\t\t\tthis.rootElem.classList.remove('hide-damage-metrics');\n\t\t\telse\n\t\t\t\tthis.rootElem.classList.add('hide-damage-metrics');\n\t\t};\n\t\tupdateShowDamageMetrics();\n\t\tthis.sim.showDamageMetricsChangeEmitter.on(updateShowDamageMetrics);\n\n\t\tconst updateShowThreatMetrics = () => {\n\t\t\tif (this.sim.getShowThreatMetrics())\n\t\t\t\tthis.rootElem.classList.remove('hide-threat-metrics');\n\t\t\telse\n\t\t\t\tthis.rootElem.classList.add('hide-threat-metrics');\n\t\t};\n\t\tupdateShowThreatMetrics();\n\t\tthis.sim.showThreatMetricsChangeEmitter.on(updateShowThreatMetrics);\n\n\t\tconst updateShowHealingMetrics = () => {\n\t\t\tif (this.sim.getShowHealingMetrics())\n\t\t\t\tthis.rootElem.classList.remove('hide-healing-metrics');\n\t\t\telse\n\t\t\t\tthis.rootElem.classList.add('hide-healing-metrics');\n\t\t};\n\t\tupdateShowHealingMetrics();\n\t\tthis.sim.showHealingMetricsChangeEmitter.on(updateShowHealingMetrics);\n\n\t\tconst updateShowEpRatios = () => {\n\t\t\t// Threat metrics *always* shows multiple columns, so\n\t\t\t// always show ratios when they are shown\n\t\t\tif (this.sim.getShowThreatMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-ep-ratios');\n\t\t\t// This case doesn't currently happen, but who knows\n\t\t\t// what the future holds...\n\t\t\t} else if (this.sim.getShowDamageMetrics() && this.sim.getShowHealingMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-ep-ratios');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-ep-ratios');\n\t\t\t}\n\t\t};\n\n\t\tupdateShowEpRatios();\n\t\tthis.sim.showDamageMetricsChangeEmitter.on(updateShowEpRatios);\n\t\tthis.sim.showHealingMetricsChangeEmitter.on(updateShowEpRatios);\n\t\tthis.sim.showThreatMetricsChangeEmitter.on(updateShowEpRatios);\n\n\t\tconst updateShowExperimental = () => {\n\t\t\tif (this.sim.getShowExperimental())\n\t\t\t\tthis.rootElem.classList.remove('hide-experimental');\n\t\t\telse\n\t\t\t\tthis.rootElem.classList.add('hide-experimental');\n\t\t};\n\t\tupdateShowExperimental();\n\t\tthis.sim.showExperimentalChangeEmitter.on(updateShowExperimental);\n\n\t\tthis.addKnownIssues(config);\n\n\t\tconst titleElem = this.rootElem.querySelector('.sim-title') as HTMLElement;\n\t\tnew SimTitleDropdown(titleElem, config.spec, {noDropdown: this.isWithinRaidSim});\n\n\t\tconst resultsViewerElem = this.rootElem.getElementsByClassName('sim-sidebar-results')[0] as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n\t\tthis.simActionsContainer = this.rootElem.getElementsByClassName('sim-sidebar-actions')[0] as HTMLElement;\n\n\t\tnew NumberPicker(this.simActionsContainer, this.sim, {\n\t\t\tlabel: 'Iterations',\n\t\t\textraCssClasses: [\n\t\t\t\t'iterations-picker',\n\t\t\t\t'within-raid-sim-hide',\n\t\t\t],\n\t\t\tchangedEvent: (sim: Sim) => sim.iterationsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getIterations(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setIterations(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tthis.iterationsPicker = this.rootElem.getElementsByClassName('iterations-picker')[0] as HTMLElement;\n\t\tthis.simTabContentsContainer = this.rootElem.querySelector('.sim-main.tab-content') as HTMLElement;\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\twindow.addEventListener('message', async event => {\n\t\t\t\tif (event.data == 'runOnce') {\n\t\t\t\t\tthis.runSimOnce();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\taddAction(name: string, cssClass: string, actFn: () => void) {\n\t\tconst button = document.createElement('button');\n\t\tbutton.classList.add('btn', 'btn-primary', 'w-100', cssClass);\n\t\tbutton.textContent = name;\n\t\tbutton.addEventListener('click', actFn);\n\t\tthis.simActionsContainer.appendChild(button);\n\t}\n\n\taddTab(title: string, cssClass: string, innerHTML: string) {\n\t\tconst contentId = cssClass.replace(/\\s+/g, '-') + '-tab';\n\t\tconst isFirstTab = this.simTabContentsContainer.children.length == 0;\n\n\t\tthis.simHeader.addTab(title, contentId);\n\n\t\tconst tabContentFragment = document.createElement('fragment');\n\t\ttabContentFragment.innerHTML = `\n\t\t\t<div\n\t\t\t\tid=\"${contentId}\"\n\t\t\t\tclass=\"tab-pane fade ${isFirstTab ? 'active show' : ''}\"\n\t\t\t>${innerHTML}</div>\n\t\t`;\n\t\tthis.simTabContentsContainer.appendChild(tabContentFragment.children[0] as HTMLElement);\n\t}\n\n\taddSimTab(tab: SimTab) {\n\t\tthis.simHeader.addSimTabLink(tab);\n\t}\n\n\taddWarning(warning: SimWarning) {\n\t\tthis.resultsViewer.addWarning(warning);\n\t}\n\n\tprivate addKnownIssues(config: SimUIConfig) {\n\t\tlet statusStr = '';\n\t\tif (config.launchStatus == LaunchStatus.Unlaunched) {\n\t\t\tstatusStr = 'This sim is a WORK IN PROGRESS. It is not fully developed and should not be used for general purposes.';\n\t\t} else if (config.launchStatus == LaunchStatus.Alpha) {\n\t\t\tstatusStr = 'This sim is in ALPHA. Bugs are expected; please let us know if you find one!';\n\t\t} else if (config.launchStatus == LaunchStatus.Beta) {\n\t\t\tstatusStr = 'This sim is in BETA. There may still be a few bugs; please let us know if you find one!';\n\t\t}\n\t\tif (statusStr) {\n\t\t\tconfig.knownIssues = [statusStr].concat(config.knownIssues || []);\n\t\t}\n\t\tif (config.knownIssues && config.knownIssues.length) {\n\t\t\tconfig.knownIssues.forEach(issue => this.simHeader.addKnownIssue(issue));\n\t\t}\n\t\tglobalKnownIssues.forEach(issue => this.simHeader.addKnownIssue(issue));\n\t}\n\n\t// Returns a key suitable for the browser's localStorage feature.\n\tabstract getStorageKey(postfix: string): string;\n\n\tgetSettingsStorageKey(): string {\n\t\treturn this.getStorageKey('__currentSettings__');\n\t}\n\n\tgetSavedEncounterStorageKey(): string {\n\t\t// By skipping the call to this.getStorageKey(), saved encounters will be\n\t\t// shared across all sims.\n\t\treturn 'sharedData__savedEncounter__';\n\t}\n\n\tisIndividualSim(): boolean {\n\t\treturn this.rootElem.classList.contains('individual-sim-ui');\n\t}\n\n\tasync runSim(onProgress: Function) {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSim(TypedEvent.nextEventID(), onProgress);\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\tasync runSimOnce() {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSimWithLogs(TypedEvent.nextEventID());\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\thandleCrash(error: any) {\n\t\tif (!(error instanceof SimError)) {\n\t\t\talert(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorStr = (error as SimError).errorStr;\n\t\tif (window.confirm('Simulation Failure:\\n' + errorStr + '\\nPress Ok to file crash report')) {\n\t\t\t// Splice out just the line numbers\n\t\t\tconst hash = this.hashCode(errorStr);\n\t\t\tconst link = this.toLink();\n\t\t\tconst rngSeed = this.sim.getLastUsedRngSeed();\n\t\t\tfetch('https://api.github.com/search/issues?q=is:issue+is:open+repo:wowsims/wotlk+' + hash).then(resp => {\n\t\t\t\tresp.json().then((issues) => {\n\t\t\t\t\tif (issues.total_count > 0) {\n\t\t\t\t\t\twindow.open(issues.items[0].html_url, '_blank');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst base_url = 'https://github.com/wowsims/wotlk/issues/new?assignees=&labels=&title=Crash%20Report%20'\n\t\t\t\t\t\tconst base = `${base_url}${hash}&body=`;\n\t\t\t\t\t\tconst maxBodyLength = URLMAXLEN - base.length;\n\t\t\t\t\t\tlet issueBody = encodeURIComponent(`Link:\\n${link}\\n\\nRNG Seed: ${rngSeed}\\n\\n${errorStr}`);\n\t\t\t\t\t\tif (link.includes('/raid/')) {\n\t\t\t\t\t\t\t// Move the actual error before the link, as it will likely get truncated.\n\t\t\t\t\t\t\tissueBody = encodeURIComponent(`${errorStr}\\nRNG Seed: ${rngSeed}\\nLink:\\n${link}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet truncated = false;\n\t\t\t\t\t\twhile (issueBody.length > maxBodyLength - (truncated ? 3 : 0)) {\n\t\t\t\t\t\t\tissueBody = issueBody.slice(0, issueBody.lastIndexOf('%')) // Avoid truncating in the middle of a URLencoded segment.\n\t\t\t\t\t\t\ttruncated = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (truncated) {\n\t\t\t\t\t\t\tissueBody += \"...\";\n\t\t\t\t\t\t\t// The raid links are too large and will always cause truncation.\n\t\t\t\t\t\t\t// Prompt the user to add more information to the issue.\n\t\t\t\t\t\t\tnew CrashModal(this.rootElem, link);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.open(base + issueBody, '_blank');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).catch(fetchErr => {\n\t\t\t\talert('Failed to file report... try again another time:' + fetchErr);\n\t\t\t});\n\t\t}\n\t}\n\n\thashCode(str: string): number {\n\t\tlet hash = 0;\n\t\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\t\tlet chr = str.charCodeAt(i);\n\t\t\thash = (hash << 5) - hash + chr;\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\t\treturn hash;\n\t}\n\n\tabstract applyDefaults(eventID: EventID): void;\n\tabstract toLink(): string;\n}\n\nclass CrashModal extends BaseModal {\n\tconstructor(parent: HTMLElement, link: string) {\n\t\tsuper(parent, 'crash', {title: 'Extra Crash Information'});\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"sim-crash-report\">\n\t\t\t\t<h3 class=\"sim-crash-report-header\">Please append the following complete link to the issue you just created. This will simplify debugging the issue.</h3>\n\t\t\t\t<textarea class=\"sim-crash-report-text form-control\"></textarea>\n\t\t\t</div>\n\t\t`;\n\t\tlet text = document.createTextNode(link);\n\t\tthis.body.querySelector('textarea')?.appendChild(text);\n\t}\n}\n\nconst simHTML = `\n<div class=\"sim-root\">\n\t<div class=\"sim-bg\"></div>\n\t${noticeText ? `<div class=\"notices-banner alert border-bottom mb-0 text-center\">${noticeText}</div>` : ''}\n  <aside class=\"sim-sidebar\">\n    <div class=\"sim-title\"></div>\n\t\t<div class=\"sim-sidebar-content\">\n\t\t\t<div class=\"sim-sidebar-actions within-raid-sim-hide\"></div>\n\t\t\t<div class=\"sim-sidebar-results within-raid-sim-hide\"></div>\n\t\t\t<div class=\"sim-sidebar-footer\"></div>\n\t\t</div>\n  </aside>\n  <div class=\"sim-content container-fluid\">\n\t</div>\n  </section>\n</div>\n`;\n","import { Stat, Class, PseudoStat } from '..//proto/common.js';\nimport { TristateEffect } from '..//proto/common.js'\nimport { getClassStatName, statOrder } from '..//proto_utils/names.js';\nimport { Stats } from '..//proto_utils/stats.js';\nimport { Player } from '..//player.js';\nimport { EventID, TypedEvent } from '..//typed_event.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\n\nimport { NumberPicker } from './number_picker';\nimport { Component } from './component.js';\n\nimport { Popover, Tooltip } from 'bootstrap';\n\ndeclare var tippy: any;\n\nexport type StatMods = { talents: Stats };\n\nexport class CharacterStats extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly valueElems: Array<HTMLTableCellElement>;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly modifyDisplayStats?: (player: Player<any>) => StatMods;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>, modifyDisplayStats?: (player: Player<any>) => StatMods) {\n\t\tsuper(parent, 'character-stats-root');\n\t\tthis.stats = statOrder.filter(stat => stats.includes(stat));\n\t\tthis.player = player;\n\t\tthis.modifyDisplayStats = modifyDisplayStats;\n\n\t\tconst label = document.createElement('label');\n\t\tlabel.classList.add('character-stats-label');\n\t\tlabel.textContent = 'Stats';\n\t\tthis.rootElem.appendChild(label);\n\n\t\tconst table = document.createElement('table');\n\t\ttable.classList.add('character-stats-table');\n\t\tthis.rootElem.appendChild(table);\n\n\t\tthis.valueElems = [];\n\t\tthis.stats.forEach(stat => {\n\t\t\tlet statName = getClassStatName(stat, player.getClass());\n\n\t\t\tconst row = document.createElement('tr');\n\t\t\trow.classList.add('character-stats-table-row');\n\t\t\trow.innerHTML = `\n\t\t\t\t<td class=\"character-stats-table-label\">${statName}</td>\n\t\t\t\t<td class=\"character-stats-table-value\"></td\n\t\t\t`;\n\t\t\ttable.appendChild(row);\n\n\t\t\tconst valueElem = row.getElementsByClassName('character-stats-table-value')[0] as HTMLTableCellElement;\n\t\t\tvalueElem.appendChild(this.bonusStatsLink(stat));\n\t\t\tthis.valueElems.push(valueElem);\n\t\t});\n\n\t\tthis.updateStats(player);\n\t\tTypedEvent.onAny([player.currentStatsEmitter, player.sim.changeEmitter]).on(() => {\n\t\t\tthis.updateStats(player);\n\t\t});\n\t}\n\n\tprivate updateStats(player: Player<any>) {\n\t\tconst playerStats = player.getCurrentStats();\n\n\t\tconst statMods = this.modifyDisplayStats ? this.modifyDisplayStats(this.player) : {\n\t\t\ttalents: new Stats(),\n\t\t};\n\n\t\tconst baseStats = Stats.fromProto(playerStats.baseStats);\n\t\tconst gearStats = Stats.fromProto(playerStats.gearStats);\n\t\tconst talentsStats = Stats.fromProto(playerStats.talentsStats);\n\t\tconst buffsStats = Stats.fromProto(playerStats.buffsStats);\n\t\tconst consumesStats = Stats.fromProto(playerStats.consumesStats);\n\t\tconst debuffStats = this.getDebuffStats();\n\t\tconst bonusStats = player.getBonusStats();\n\n\t\tconst baseDelta = baseStats.subtract(bonusStats);\n\t\tconst gearDelta = gearStats.subtract(baseStats);\n\t\tconst talentsDelta = talentsStats.subtract(gearStats).add(statMods.talents);\n\t\tconst buffsDelta = buffsStats.subtract(talentsStats);\n\t\tconst consumesDelta = consumesStats.subtract(buffsStats);\n\n\t\tconst finalStats = Stats.fromProto(playerStats.finalStats).add(statMods.talents).add(debuffStats);\n\n\t\tthis.stats.forEach((stat, idx) => {\n\t\t\tlet fragment = document.createElement('fragment');\n\t\t\tfragment.innerHTML = `\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"stat-value-link\" role=\"button\" data-bs-toggle=\"tooltip\" data-bs-html=\"true\">${this.statDisplayString(finalStats, finalStats, stat)}</a>\n\t\t\t`\n\t\t\tlet valueElem = fragment.children[0] as HTMLElement;\n\t\t\tthis.valueElems[idx].querySelector('.stat-value-link')?.remove()\n\t\t\tthis.valueElems[idx].prepend(valueElem);\n\n\t\t\tlet bonusStatValue = bonusStats.getStat(stat);\n\t\t\t\n\t\t\tif (bonusStatValue == 0) {\n\t\t\t\tvalueElem.classList.remove('text-success', 'text-danger');\n\t\t\t\tvalueElem.classList.add('text-white');\n\t\t\t} else if (bonusStatValue > 0) {\n\t\t\t\tvalueElem.classList.remove('text-white', 'text-danger');\n\t\t\t\tvalueElem.classList.add('text-success');\n\t\t\t} else if (bonusStatValue < 0) {\n\t\t\t\tvalueElem.classList.remove('text-white', 'text-success');\n\t\t\t\tvalueElem.classList.add('text-danger');\n\t\t\t}\n\n\t\t\tvalueElem.setAttribute('data-bs-title', `\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Base:</span>\n\t\t\t\t\t<span>${this.statDisplayString(baseStats, baseDelta, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Gear:</span>\n\t\t\t\t\t<span>${this.statDisplayString(gearStats, gearDelta, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Talents:</span>\n\t\t\t\t\t<span>${this.statDisplayString(talentsStats, talentsDelta, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Buffs:</span>\n\t\t\t\t\t<span>${this.statDisplayString(buffsStats, buffsDelta, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Consumes:</span>\n\t\t\t\t\t<span>${this.statDisplayString(consumesStats, consumesDelta, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t${debuffStats.getStat(stat) == 0 ? '' : `\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t<span>${this.statDisplayString(debuffStats, debuffStats, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t`}\n\t\t\t\t${bonusStatValue == 0 ? '' : `\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Bonus:</span>\n\t\t\t\t\t<span>${this.statDisplayString(bonusStats, bonusStats, stat)}</span>\n\t\t\t\t</div>\n\t\t\t\t`}\n\t\t\t\t<div class=\"character-stats-tooltip-row\">\n\t\t\t\t\t<span>Total:</span>\n\t\t\t\t\t<span>${this.statDisplayString(finalStats, finalStats, stat)}</span>\n\t\t\t\t</div>\n\t\t\t`);\n\n\t\t\tTooltip.getOrCreateInstance(valueElem);\n\t\t});\n\t}\n\n\tprivate statDisplayString(stats: Stats, deltaStats: Stats, stat: Stat): string {\n\t\tlet rawValue = deltaStats.getStat(stat);\n\n\t\tif (stat == Stat.StatBlockValue) {\n\t\t\trawValue *= stats.getPseudoStat(PseudoStat.PseudoStatBlockValueMultiplier) || 1;\n\t\t}\n\n\t\tlet displayStr = String(Math.round(rawValue));\n\n\t\tif (stat == Stat.StatMeleeHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatSpellHit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeCrit || stat == Stat.StatSpellCrit) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatMeleeHaste) {\n\t\t\tif ([Class.ClassDruid, Class.ClassShaman, Class.ClassPaladin, Class.ClassDeathknight].includes(this.player.getClass())) {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t} else {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t}\n\t\t} else if (stat == Stat.StatSpellHaste) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatArmorPenetration) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.ARMOR_PEN_PER_PERCENT_ARMOR).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatExpertise) {\n\t\t\t// As of 06/20, Blizzard has changed Expertise to no longer truncate at quarter percent intervals. Note that\n\t\t\t// in-game character sheet tooltips will still display the truncated values, but it has been tested to behave\n\t\t\t// continuously in reality since the patch.\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION / 4).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDefense) {\n\t\t\tdisplayStr += ` (${(Mechanics.CHARACTER_LEVEL * 5 + Math.floor(rawValue / Mechanics.DEFENSE_RATING_PER_DEFENSE)).toFixed(0)})`;\n\t\t} else if (stat == Stat.StatBlock) {\n\t\t\t// TODO: Figure out how to display these differently for the components than the final value\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr += ` (${((rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE) + (Mechanics.MISS_DODGE_PARRY_BLOCK_CRIT_CHANCE_PER_DEFENSE * Math.floor(stats.getStat(Stat.StatDefense) / Mechanics.DEFENSE_RATING_PER_DEFENSE)) + 5.00).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDodge) {\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.DODGE_RATING_PER_DODGE_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr += ` (${(stats.getPseudoStat(PseudoStat.PseudoStatDodge)*100).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatParry) {\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.PARRY_RATING_PER_PARRY_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr += ` (${(stats.getPseudoStat(PseudoStat.PseudoStatParry)*100).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatResilience) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.RESILIENCE_RATING_PER_CRIT_REDUCTION_CHANCE).toFixed(2)}%)`;\n\t\t}\n\n\t\treturn displayStr;\n\t}\n\n\tprivate getDebuffStats(): Stats {\n\t\tlet debuffStats = new Stats();\n\n\t\tconst debuffs = this.player.sim.raid.getDebuffs();\n\t\tif (debuffs.misery || debuffs.faerieFire == TristateEffect.TristateEffectImproved) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellHit, 3 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t}\n\t\tif (debuffs.totemOfWrath || debuffs.heartOfTheCrusader || debuffs.masterPoisoner) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 3 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatMeleeCrit, 3 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\t\tif (debuffs.improvedScorch || debuffs.wintersChill || debuffs.shadowMastery) {\n\t\t\tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 5 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t}\n\n\t\treturn debuffStats;\n\t}\n\n\tprivate bonusStatsLink(stat: Stat): HTMLElement {\n\t\tlet statName = getClassStatName(stat, this.player.getClass());\n\t\tlet fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<a\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\tclass=\"add-bonus-stats text-white ms-2\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-toggle=\"popover\"\n\t\t\t\tdata-bs-content=\"\n\t\t\t\t\t<div class='input-root number-picker-root mb-0'>\n\t\t\t\t\t\t<label class='form-label'>Bonus Health</label>\n\t\t\t\t\t\t<input type='text' class='form-control number-picker-input' value=${this.player.getBonusStats().getStat(stat)}>\n\t\t\t\t\t</div>\n\t\t\t\t\"\n\t\t\t\tdata-bs-placement=\"right\"\n\t\t\t\tdata-bs-html=\"true\"\n\t\t\t>\n\t\t\t\t<i class=\"fas fa-plus-minus\"></i>\n\t\t\t</a>\n\t\t`;\n\n\t\tlet link = fragment.children[0] as HTMLElement;\n\t\tlet popover = Popover.getOrCreateInstance(link, {\n\t\t\tcustomClass: 'bonus-stats-popover',\n\t\t\tfallbackPlacement: ['left'],\n\t\t\tsanitize: false,\n\t\t});\n\n\t\tlink.addEventListener('shown.bs.popover', (event) => {\n\t\t\tlet popoverBody = document.querySelector('.popover.bonus-stats-popover .popover-body') as HTMLElement;\n\t\t\tpopoverBody.innerHTML = '';\n\t\t\tlet picker = new NumberPicker(popoverBody, this.player, {\n\t\t\t\tlabel: `Bonus ${statName}`,\n\t\t\t\textraCssClasses: ['mb-0'],\n\t\t\t\tchangedEvent: (player: Player<any>) => player.bonusStatsChangeEmitter,\n\t\t\t\tgetValue: (player: Player<any>) => player.getBonusStats().getStat(stat),\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\t\tconst bonusStats = player.getBonusStats().withStat(stat, newValue);\n\t\t\t\t\tplayer.setBonusStats(eventID, bonusStats);\n\t\t\t\t\tpopover.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\treturn link as HTMLElement;\n\t}\n}\n","import { Tooltip } from 'bootstrap';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\ndeclare var tippy: any;\n\nexport interface IconEnumValueConfig<ModObject, T> {\n\tvalue: T,\n\t// One of these should be set. If actionId is set, shows the icon for that id. If\n\t// color is set, shows that color.\n\tactionId?: ActionId,\n\tcolor?: string,\n\t// Text to be displayed on the icon.\n\ttext?: string,\n\t// Hover tooltip.\n\ttooltip?: string,\n\n\tshowWhen?: (obj: ModObject) => boolean,\n}\n\nexport interface IconEnumPickerConfig<ModObject, T> extends InputConfig<ModObject, T> {\n\tnumColumns: number,\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>;\n\t// Value that will be considered inactive.\n\tzeroValue: T,\n\t// Function for comparing two values.\n\t// Tooltip that will be shown whne hovering over the icon-picker-button\n\ttooltip?: string,\n\tequals: (a: T, b: T) => boolean,\n\tbackupIconUrl?: (value: T) => ActionId,\n\tshowWhen?: (obj: ModObject) => boolean,\n}\n\n// Icon-based UI for picking enum values.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconEnumPicker<ModObject, T> extends Input<ModObject, T> {\n\tprivate readonly config: IconEnumPickerConfig<ModObject, T>;\n\n\tprivate currentValue: T;\n\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly buttonText: HTMLElement;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconEnumPickerConfig<ModObject, T>) {\n\t\tsuper(parent, 'icon-enum-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('icon-picker', 'dropdown');\n\t\tthis.config = config;\n\t\tthis.currentValue = this.config.zeroValue;\n\n\t\tif (config.showWhen) {\n\t\t\tconfig.changedEvent(this.modObject).on(eventID => {\n\t\t\t\tconst show = config.showWhen && config.showWhen(this.modObject);\n\t\t\t\tif (!show)\n\t\t\t\t\tthis.rootElem.classList.add('hide');\n\t\t\t});\n\t\t}\n\n\t\tif (config.tooltip) {\n\t\t\tthis.rootElem.setAttribute('data-bs-toggle', 'tooltip');\n\t\t\tthis.rootElem.setAttribute('data-bs-title', config.tooltip);\n\t\t\tthis.rootElem.setAttribute('data-bs-html', 'true');\n\t\t\tTooltip.getOrCreateInstance(this.rootElem);\n\t\t}\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\tclass=\"icon-picker-button\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-toggle=\"dropdown\"\n\t\t\t\tdata-bs-placement=\"bottom\"\n\t\t\t\taria-expanded=\"false\"\n\t\t\t>\n\t\t\t\t<span class='icon-picker-label'></span>\n\t\t\t</a>\n\t\t\t<ul class=\"dropdown-menu\"></ul>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.querySelector('.icon-picker-button') as HTMLAnchorElement;\n\t\tthis.buttonText\t= this.buttonElem.querySelector('.icon-picker-label') as HTMLElement;\n\t\tconst dropdownMenu = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\n\n\t\tdropdownMenu.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\n\t\tconfig.values.forEach((valueConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('li');\n\t\t\toptionContainer.classList.add('icon-dropdown-option', 'dropdown-option')\n\t\t\tdropdownMenu.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('icon-picker-button');\n\t\t\toptionContainer.appendChild(option);\n\t\t\tthis.setImage(option, valueConfig);\n\n\t\t\tif (valueConfig.text != undefined){\n\t\t\t\tconst optionText = document.createElement('div');\n\t\t\t\toptionText.classList.add(\"icon-picker-label\");\n\t\t\t\toptionText.textContent = valueConfig.text;\n\t\t\t\toption.append(optionText);\n\t\t\t}\n\n\t\t\tif (valueConfig.tooltip) {\n\t\t\t\toption.setAttribute('data-bs-toggle', 'tooltip');\n\t\t\t\toption.setAttribute('data-bs-title', valueConfig.tooltip);\n\t\t\t\toption.setAttribute('data-bs-html', 'true');\n\t\t\t\tTooltip.getOrCreateInstance(option);\n\t\t\t}\n\n\t\t\tif (valueConfig.showWhen) {\n\t\t\t\tconfig.changedEvent(this.modObject).on(eventID => {\n\t\t\t\t\tconst show = valueConfig.showWhen && valueConfig.showWhen(this.modObject);\n\t\t\t\t\tif (show)\n\t\t\t\t\t\toptionContainer.classList.remove('hide');\n\t\t\t\t\telse\n\t\t\t\t\t\toptionContainer.classList.add('hide');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\toption.addEventListener('click', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\n\t\t\t\t// Wowhead tooltips can't seem to detect when an element is hidden while\n\t\t\t\t// being moused over, and the tooltip doesn't disappear. Patch this by\n\t\t\t\t// dispatching our own mouseout event.\n\t\t\t\toption.dispatchEvent(new Event('mouseout'));\n\t\t\t});\n\t\t\toption.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\toption.addEventListener('touchend', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\tdropdownMenu.style.display = \"none\";\n\t\t\t});\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tprivate setActionImage(elem: HTMLAnchorElement, actionId: ActionId) {\n\t\tactionId.fillAndSet(elem, true, true);\n\t}\n\n\tprivate setImage(elem: HTMLAnchorElement, valueConfig: IconEnumValueConfig<ModObject, T>) {\n\t\tif (valueConfig.actionId) {\n\t\t\tthis.setActionImage(elem, valueConfig.actionId);\n\t\t} else {\n\t\t\telem.style.backgroundImage = '';\n\t\t\telem.style.backgroundColor = valueConfig.color!;\n\t\t}\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\t\tthis.setActive(this.enabled && !this.config.equals(this.currentValue, this.config.zeroValue));\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): T {\n\t\treturn this.currentValue;\n\t}\n\n\tsetInputValue(newValue: T) {\n\t\tthis.currentValue = newValue;\n\t\tthis.setActive(this.enabled && !this.config.equals(this.currentValue, this.config.zeroValue))\n\n\t\tthis.buttonText.textContent = ''\n\t\tthis.buttonText.style.display = 'none'\n\n\t\tconst valueConfig = this.config.values.find(valueConfig => this.config.equals(valueConfig.value, this.currentValue))!;\n\t\tif (valueConfig) {\n\t\t\tthis.setImage(this.buttonElem, valueConfig);\n\t\t\tif (valueConfig.text != undefined) {\n\t\t\t\tthis.buttonText.style.display = 'block'\n\t\t\t\tthis.buttonText.textContent = valueConfig.text\n\t\t\t}\n\t\t} else if (this.config.backupIconUrl) {\n\t\t\tconst backupId = this.config.backupIconUrl(this.currentValue);\n\t\t\tthis.setActionImage(this.buttonElem, backupId);\n\t\t\tthis.setActive(false);\n\t\t}\n\t}\n\n\tsetActive(active: boolean) {\n\t\tif (active)\n\t\t\tthis.buttonElem.classList.add('active');\n\t\telse\n\t\t\tthis.buttonElem.classList.remove('active');\n\t}\n}\n","import { SimUI } from '../sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Component } from './component.js';\n\nexport class LogRunner extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent, 'log-runner-root');\n\n\t\tconst controlBar = document.createElement('div');\n\t\tcontrolBar.classList.add('log-runner-control-bar');\n\t\tthis.rootElem.appendChild(controlBar);\n\n\t\tconst simButton = document.createElement('button');\n\t\tsimButton.classList.add('log-runner-button', 'btn', 'btn-primary');\n\t\tsimButton.textContent = 'Sim 1 Iteration';\n\t\tcontrolBar.appendChild(simButton);\n\n\t\tconst logsDiv = document.createElement('div');\n\t\tlogsDiv.classList.add('log-runner-logs');\n\t\tthis.rootElem.appendChild(logsDiv);\n\n\t\tsimButton.addEventListener('click', async () => simUI.runSimOnce());\n\n\t\tsimUI.sim.simResultEmitter.on((eventID, simResult) => {\n\t\t\tconst logs = simResult.logs;\n\t\t\tlogsDiv.textContent = '';\n\t\t\tlogs\n\t\t\t\t.filter(log => {\n\t\t\t\t\treturn !log.isCastCompleted();\n\t\t\t\t})\n\t\t\t\t.forEach(log => {\n\t\t\t\t\tconst lineElem = document.createElement('span');\n\t\t\t\t\tlineElem.textContent = log.toString();\n\t\t\t\t\tlogsDiv.appendChild(lineElem);\n\t\t\t\t});\n\t\t});\n\t}\n}\n","import { Tooltip } from 'bootstrap';\nimport { title } from 'process';\nimport { Component } from './component.js';\n\nexport interface ContentBlockHeaderConfig {\n  title: string,\n  extraCssClasses?: Array<string>,\n  titleTag?: string,\n  tooltip?: string,\n}\n\nexport interface ContentBlockConfig {\n\tbodyClasses?: Array<string>,\n  extraCssClasses?: Array<string>,\n  rootElem?: HTMLElement,\n  header?: ContentBlockHeaderConfig,\n}\n\nexport class ContentBlock extends Component {\n  readonly headerElement: HTMLElement|null;\n  readonly bodyElement: HTMLElement;\n\n  readonly config: ContentBlockConfig;\n\n\tconstructor(parent: HTMLElement, cssClass: string, config: ContentBlockConfig) {\n\t\tsuper(parent, 'content-block', config.rootElem);\n    this.config = config;\n\t\tthis.rootElem.classList.add(cssClass);\n\n\t\tif (config.extraCssClasses) {\n\t\t\tthis.rootElem.classList.add(...config.extraCssClasses);\n    }\n\n    this.headerElement = this.buildHeader();\n    this.bodyElement = this.buildBody();\n    config.bodyClasses?.forEach((cl) => {\n      this.bodyElement.classList.add(cl);\n    })\n\t}\n\n  private buildHeader(): HTMLElement|null {\n    if (this.config.header && Object.keys(this.config.header).length) {\n      let titleTag = this.config.header.titleTag || 'h6';\n      let headerFragment = document.createElement('fragment');\n      headerFragment.innerHTML = `\n        <div class=\"content-block-header\">\n          <${titleTag}\n            class=\"content-block-title\"\n            ${this.config.header.tooltip ? 'data-bs-toggle=\"tooltip\"' : ''}\n            ${this.config.header.tooltip ? `data-bs-title=\"${this.config.header.tooltip}\"` : ''}\n            ${this.config.header.tooltip ? 'data-bs-html=\"true\"' : ''}\n          >${this.config.header.title}</${titleTag}>\n        </div>\n      `;\n\n      let header = headerFragment.children[0] as HTMLElement;\n      \n      if (this.config.header.extraCssClasses) {\n        header.classList.add(...this.config.header.extraCssClasses);\n      }\n\n      if (this.config.header.tooltip)\n        Tooltip.getOrCreateInstance(header.querySelector('.content-block-title') as HTMLElement);\n\n      this.rootElem.appendChild(header);\n\n      return header;\n    } else {\n      return null;\n    }\n  }\n\n  private buildBody(): HTMLElement {\n    let bodyElem = document.createElement('div');\n    bodyElem.classList.add('content-block-body');\n\n    this.rootElem.appendChild(bodyElem);\n\n    return bodyElem;\n  }\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { ContentBlock, ContentBlockHeaderConfig } from './content_block';\n\nimport { Component } from '../components/component.js';\nimport { Tooltip } from 'bootstrap';\nimport { json } from 'stream/consumers';\nimport { SimUI } from '../sim_ui.js';\n\nexport type SavedDataManagerConfig<ModObject, T> = {\n\tlabel: string;\n\theader?: ContentBlockHeaderConfig;\n\tpresetsOnly?: boolean;\n\tstorageKey: string;\n\tchangeEmitters: Array<TypedEvent<any>>,\n\tequals: (a: T, b: T) => boolean;\n\tgetData: (modObject: ModObject) => T;\n\tsetData: (eventID: EventID, modObject: ModObject, data: T) => void;\n\ttoJson: (a: T) => any;\n\tfromJson: (obj: any) => T;\n};\n\nexport type SavedDataConfig<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\ttooltip?: string;\n\tisPreset?: boolean;\n\n\t// If set, will automatically hide the saved data when this evaluates to false.\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\ntype SavedData<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\telem: HTMLElement;\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\nexport class SavedDataManager<ModObject, T> extends Component {\n\tprivate readonly simUI: SimUI;\n\tprivate readonly modObject: ModObject;\n\tprivate readonly config: SavedDataManagerConfig<ModObject, T>;\n\n\tprivate readonly userData: Array<SavedData<ModObject, T>>;\n\tprivate readonly presets: Array<SavedData<ModObject, T>>;\n\n\tprivate readonly savedDataDiv: HTMLElement;\n\tprivate readonly saveInput?: HTMLInputElement;\n\tprivate frozen: boolean;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, modObject: ModObject, config: SavedDataManagerConfig<ModObject, T>) {\n\t\tsuper(parent, 'saved-data-manager-root');\n\t\tthis.simUI = simUI;\n\t\tthis.modObject = modObject;\n\t\tthis.config = config;\n\n\t\tthis.userData = [];\n\t\tthis.presets = [];\n\t\tthis.frozen = false;\n\n\t\tlet contentBlock = new ContentBlock(this.rootElem, 'saved-data', {header: config.header});\n\n\t\tcontentBlock.bodyElement.innerHTML = `<div class=\"saved-data-container hide\"></div>`;\n\t\tthis.savedDataDiv = contentBlock.bodyElement.querySelector('.saved-data-container') as HTMLElement;\n\n\t\tif (!config.presetsOnly) {\n\t\t\tcontentBlock.bodyElement.appendChild(this.buildCreateContainer());\n\t\t\tthis.saveInput = contentBlock.bodyElement.querySelector('.saved-data-save-input') as HTMLInputElement;\n\t\t}\n\t}\n\n\taddSavedData(config: SavedDataConfig<ModObject, T>) {\n\t\tthis.savedDataDiv.classList.remove('hide');\n\n\t\tconst newData = this.makeSavedData(config);\n\t\tconst dataArr = config.isPreset ? this.presets : this.userData;\n\t\tconst oldIdx = dataArr.findIndex(data => data.name == config.name);\n\t\n\t\tif (oldIdx == -1) {\n\t\t\tif (config.isPreset || this.presets.length == 0) {\n\t\t\t\tthis.savedDataDiv.appendChild(newData.elem);\n\t\t\t} else {\n\t\t\t\tthis.savedDataDiv.insertBefore(newData.elem, this.presets[0].elem);\n\t\t\t}\n\t\t\tdataArr.push(newData);\n\t\t} else {\n\t\t\tthis.savedDataDiv.replaceChild(newData.elem, dataArr[oldIdx].elem);\n\t\t\tdataArr[oldIdx] = newData;\n\t\t}\n\t}\n\n\tprivate makeSavedData(config: SavedDataConfig<ModObject, T>): SavedData<ModObject, T> {\n\t\tconst dataElemFragment = document.createElement('fragment');\n\t\tdataElemFragment.innerHTML = `\n\t\t\t<div class=\"saved-data-set-chip badge rounded-pill\">\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"saved-data-set-name\" role=\"button\">${config.name}</a>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst dataElem = dataElemFragment.children[0] as HTMLElement;\n\t\tdataElem.addEventListener('click', event => {\n\t\t\tthis.config.setData(TypedEvent.nextEventID(), this.modObject, config.data);\n\n\t\t\tif (this.saveInput)\n\t\t\t\tthis.saveInput.value = config.name;\n\t\t});\n\n\t\tif (!config.isPreset) {\n\t\t\tlet deleteFragment = document.createElement('fragment');\n\t\t\tdeleteFragment.innerHTML = `\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"saved-data-set-delete\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\tdata-bs-title=\"Delete saved ${this.config.label}\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"fa fa-times fa-lg\"></i>\n\t\t\t\t</a>\n\t\t\t`;\n\n\t\t\tconst deleteButton = deleteFragment.children[0] as HTMLElement;\n\t\t\tdataElem.appendChild(deleteButton);\n\n\t\t\tconst tooltip = Tooltip.getOrCreateInstance(deleteButton);\n\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst shouldDelete = confirm(`Delete saved ${this.config.label} '${config.name}'?`);\n\t\t\t\tif (!shouldDelete)\n\t\t\t\t\treturn;\n\n\t\t\t\ttooltip.dispose();\n\n\t\t\t\tconst idx = this.userData.findIndex(data => data.name == config.name);\n\t\t\t\tthis.userData[idx].elem.remove();\n\t\t\t\tthis.userData.splice(idx, 1);\n\t\t\t\tthis.saveUserData();\n\t\t\t});\n\t\t}\n\n\t\tif (config.tooltip) {\n\t\t\tdataElem.setAttribute('data-bs-toggle', 'tooltip');\n\t\t\tdataElem.setAttribute('data-bs-title', config.tooltip);\n\t\t\tdataElem.setAttribute('data-bs-placement', 'bottom');\n\t\t\tdataElem.setAttribute('data-bs-html', 'true');\n\t\t\tTooltip.getOrCreateInstance(dataElem);\n\t\t}\n\n\t\tconst checkActive = () => {\n\t\t\tif (this.config.equals(config.data, this.config.getData(this.modObject))) {\n\t\t\t\tdataElem.classList.add('active');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('active');\n\t\t\t}\n\n\t\t\tif (config.enableWhen && !config.enableWhen(this.modObject)) {\n\t\t\t\tdataElem.classList.add('disabled');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('disabled');\n\t\t\t}\n\t\t};\n\n\t\tcheckActive();\n\t\tthis.config.changeEmitters.forEach(emitter => emitter.on(checkActive));\n\n\t\treturn {\n\t\t\tname: config.name,\n\t\t\tdata: config.data,\n\t\t\telem: dataElem,\n\t\t\tenableWhen: config.enableWhen,\n\t\t};\n\t}\n\n\t// Save data to window.localStorage.\n\tprivate saveUserData() {\n\t\tconst userData: Record<string, Object> = {};\n\t\tthis.userData.forEach(savedData => {\n\t\t\tuserData[savedData.name] = this.config.toJson(savedData.data);\n\t\t});\n\n\t\tif (this.userData.length == 0 && this.presets.length == 0)\n\t\t\tthis.savedDataDiv.classList.add('hide');\n\n\t\twindow.localStorage.setItem(this.config.storageKey, JSON.stringify(userData));\n\t}\n\n\t// Load data from window.localStorage.\n\tloadUserData() {\n\t\tconst dataStr = window.localStorage.getItem(this.config.storageKey);\n\t\tif (!dataStr)\n\t\t\treturn;\n\n\t\tlet jsonData;\n\t\ttry {\n\t\t\tjsonData = JSON.parse(dataStr);\n\t\t} catch (e) {\n\t\t\tconsole.warn('Invalid json for local storage value: ' + dataStr);\n\t\t}\n\n\t\tfor (let name in jsonData) {\n\t\t\ttry {\n\t\t\t\tthis.addSavedData({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdata: this.config.fromJson(jsonData[name]),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('Failed parsing saved data: ' + jsonData[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent user input from creating / deleting saved data.\n\tfreeze() {\n\t\tthis.frozen = true;\n\t\tthis.rootElem.classList.add('frozen');\n\t}\n\n\tprivate buildCreateContainer(): HTMLElement {\n\t\tlet savedDataCreateFragment = document.createElement('fragment');\n\t\tsavedDataCreateFragment.innerHTML = `\n\t\t\t<div class=\"saved-data-create-container\">\n\t\t\t\t<label class=\"form-label\">${this.config.label} Name</label>\n\t\t\t\t<input class=\"saved-data-save-input form-control\" type=\"text\" placeholder=\"Name\">\n\t\t\t\t<button class=\"saved-data-save-button btn btn-primary\">Save ${this.config.label}</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst saveButton = savedDataCreateFragment.querySelector('.saved-data-save-button') as HTMLButtonElement;\n\n\t\tsaveButton.addEventListener('click', event => {\n\t\t\tif (this.frozen)\n\t\t\t\treturn;\n\n\t\t\tconst newName = this.saveInput?.value;\n\t\t\tif (!newName) {\n\t\t\t\talert(`Choose a label for your saved ${this.config.label}!`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newName in this.presets) {\n\t\t\t\talert(`${this.config.label} with name ${newName} already exists.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.addSavedData({\n\t\t\t\tname: newName,\n\t\t\t\tdata: this.config.getData(this.modObject),\n\t\t\t});\n\t\t\tthis.saveUserData();\n\t\t});\n\n\t\treturn savedDataCreateFragment.children[0] as HTMLElement;\n\t}\n}\n","import { StatWeightsResult, StatWeightValues, ProgressMetrics } from '../proto/api.js';\nimport { ItemSlot } from '../proto/common.js';\nimport { GemColor } from '../proto/common.js';\nimport { Profession } from '../proto/common.js';\nimport { Stat, PseudoStat, UnitStats } from '../proto/common.js';\nimport { Stats, UnitStat } from '../proto_utils/stats.js';\nimport { Gear } from '../proto_utils/gear.js';\nimport { getClassStatName } from '../proto_utils/names.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { Player } from '../player.js';\nimport { formatDeltaTextElem, stDevToConf90 } from '../utils.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { combinationsWithDups, permutations, sum } from '../utils.js';\nimport { UIGem as Gem } from '../proto/ui.js';\n\nimport * as Gems from '../proto_utils/gems.js';\n\nimport { BaseModal } from './base_modal.js';\nimport { Tooltip } from 'bootstrap';\nimport { ResultsViewer } from './results_viewer.js';\n\nexport function addStatWeightsAction(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat>|undefined, epReferenceStat: Stat) {\n\tsimUI.addAction('Stat Weights', 'ep-weights-action', () => {\n\t\tnew EpWeightsMenu(simUI, epStats, epPseudoStats || [], epReferenceStat);\n\t});\n}\n\n// Create the config for modal in separate function, as constructor cannot\n// contain any logic before `super' call. Use modal-xl to accommodate the extra\n// TMI & p(death) EP in the UI.\nfunction getModalConfig(simUI: IndividualSimUI<any>) {\n\tconst baseConfig = { footer: true, scrollContents: true };\n\tif (simUI.sim.getShowThreatMetrics() && simUI.sim.getShowExperimental()) {\n\t\treturn {size: 'xl' as const, ...baseConfig };\n\t}\n\treturn baseConfig;\n}\n\nclass EpWeightsMenu extends BaseModal {\n\tprivate readonly simUI: IndividualSimUI<any>;\n\tprivate readonly container: HTMLElement;\n\tprivate readonly table: HTMLElement;\n\tprivate readonly tableBody: HTMLElement;\n\tprivate readonly resultsViewer: ResultsViewer;\n\n\tprivate statsType: string;\n\tprivate epStats: Array<Stat>;\n\tprivate epPseudoStats: Array<PseudoStat>;\n\tprivate epReferenceStat: Stat;\n\tprivate showAllStats: boolean = false;\n\n\tconstructor(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat>, epReferenceStat: Stat) {\n\t\tsuper(simUI.rootElem, 'ep-weights-menu', getModalConfig(simUI));\n\t\tthis.simUI = simUI;\n\t\tthis.statsType = 'ep';\n\t\tthis.epStats = epStats;\n\t\tthis.epPseudoStats = epPseudoStats;\n\t\tthis.epReferenceStat = epReferenceStat;\n\n\t\tthis.header?.insertAdjacentHTML('afterbegin', '<h5 class=\"modal-title\">Calculate Stat Weights</h5>');\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"ep-weights-options row\">\n\t\t\t\t<div class=\"col col-sm-3\">\n\t\t\t\t\t<select class=\"ep-type-select form-select\">\n\t\t\t\t\t\t<option value=\"ep\">EP</option>\n\t\t\t\t\t\t<option value=\"weight\">Weights</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"show-all-stats-container col col-sm-3\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"ep-reference-options row experimental\">\n\t\t\t\t<div class=\"col col-sm-4 damage-metrics\">\n\t\t\t\t\t<span>DPS/TPS reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select damage-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col col-sm-4 healing-metrics\">\n\t\t\t\t\t<span>Healing reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select healing-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col col-sm-4 threat-metrics\">\n\t\t\t\t\t<span>Mitigation reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select threat-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<p>The above stat selectors control which reference stat is used for EP normalisation for the different EP columns.</p>\n\t\t\t</div>\n\t\t\t<p>The 'Current EP' column displays the values currently used by the item pickers to sort items.</br>\n\t\t\tUse the <a href='javascript:void(0)' class=\"fa fa-copy\"></a> icon above the EPs to use newly calculated EPs.</p>\n\t\t\t<div class=\"results-ep-table-container modal-scroll-table\">\n\t\t\t\t<div class=\"results-pending-overlay\"></div>\n\t\t\t\t<table class=\"results-ep-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Stat</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>DPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>DPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>HPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>HPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>TPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>TPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>DTPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>DTPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight experimental\">\n\t\t\t\t\t\t\t\t<span>TMI Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep experimental\">\n\t\t\t\t\t\t\t\t<span>TMI EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight experimental\">\n\t\t\t\t\t\t\t\t<span>Death Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep experimental\">\n\t\t\t\t\t\t\t\t<span>Death EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th style=\"text-align: center\">\n\t\t\t\t\t\t\t\t<span>Current EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fas fa-arrows-rotate\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr class=\"ep-ratios\">\n\t\t\t\t\t\t\t<td>EP Ratio</td>\n\t\t\t\t\t\t\t<td class=\"damage-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"damage-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"healing-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"healing-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"text-align: center; vertical-align: middle;\">\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary compute-ep\">\n\t\t\t\t\t\t\t\t\t<i class=\"fas fa-calculator\"></i>\n\t\t\t\t\t\t\t\t\t<span class=\"not-tiny\">Compute </span>EP\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody></tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t<button\n\t\t\t\tclass=\"btn btn-primary optimize-gems experimental me-2\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-title=\"\n\t\t\t\t\t<p><span class='warnings link-warning'><i class='fa fa-exclamation-triangle'></i> WARNING</span> This feature is experimental, and will not always produce the most optimal gems especially when interacting with soft/hard stat caps.</p>\n\t\t\t\t\t<p>Optimizes equipped gems to maximize EP, based on the values in <b>Current EP</b>.</p>\n\t\t\t\t\t<p class='mb-0'>Does not change the meta gem, but ensures that its condition is met. Uses JC gems if Jewelcrafting is a selected profession.</p>\n\t\t\t\t\"\n\t\t\t\tdata-bs-html=\"true\"\n\t\t\t>\n\t\t\t\tOptimize Gems\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-primary calc-weights\">\n\t\t\t\t<i class=\"fas fa-calculator\"></i>\n\t\t\t\tCalculate\n\t\t\t</button>\n\t\t`;\n\n\t\tthis.container = this.rootElem.querySelector('.results-ep-table-container') as HTMLElement;\n\t\tthis.table = this.rootElem.querySelector('.results-ep-table') as HTMLElement;\n\t\tthis.tableBody = this.rootElem.querySelector('.results-ep-table tbody') as HTMLElement;\n\n\t\tconst resultsElem = this.rootElem.querySelector('.results-pending-overlay') as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsElem);\n\n\t\tconst updateType = () => {\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tthis.table.classList.remove('stats-type-weight');\n\t\t\t\tthis.table.classList.add('stats-type-ep');\n\t\t\t} else {\n\t\t\t\tthis.table.classList.add('stats-type-weight');\n\t\t\t\tthis.table.classList.remove('stats-type-ep');\n\t\t\t}\n\t\t};\n\n\t\tconst selectElem = this.rootElem.getElementsByClassName('ep-type-select')[0] as HTMLSelectElement;\n\t\tselectElem.addEventListener('input', event => {\n\t\t\tthis.statsType = selectElem.value;\n\t\t\tupdateType();\n\t\t});\n\t\tselectElem.value = this.statsType;\n\t\tupdateType();\n\n\t\tconst getNameFromStat = (stat: Stat|undefined) => {\n\t\t\treturn stat !== undefined ? getClassStatName(stat, this.simUI.player.getClass()) : '??';\n\t\t};\n\n\t\tconst getStatFromName = (value: string) => {\n\t\t\tfor (let stat of this.epStats) {\n\t\t\t\tif (getNameFromStat(stat) == value) {\n\t\t\t\t\treturn stat;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst updateEpRefStat = () => {\n\t\t\tthis.simUI.prevEpSimResult = this.calculateEp(this.getPrevSimResult());\n\t\t\tthis.updateTable(this.simUI.prevEpIterations || 1, this.getPrevSimResult());\n\t\t};\n\n\t\tconst epRefSelects = this.rootElem.querySelectorAll('.ref-stat-select') as NodeListOf<HTMLSelectElement>;\n\t\tepRefSelects.forEach((epSelect: HTMLSelectElement, idx: number) => {\n\t\t\tthis.epStats.forEach((stat) => {\n\t\t\t\tepSelect.options[epSelect.options.length] = new Option(getNameFromStat(stat));\n\t\t\t});\n\t\t\tif (epSelect.classList.contains('damage-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', event => {\n\t\t\t\t\tthis.simUI.dpsRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getDpsEpRefStat());\n\t\t\t} else if (epSelect.classList.contains('healing-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', event => {\n\t\t\t\t\tthis.simUI.healRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getHealEpRefStat());\n\t\t\t} else if (epSelect.classList.contains('threat-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', event => {\n\t\t\t\t\tthis.simUI.tankRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getTankEpRefStat());\n\t\t\t}\n\t\t});\n\n\t\tconst optimizeGemsButton = this.rootElem.getElementsByClassName('optimize-gems')[0] as HTMLElement;\n\t\tTooltip.getOrCreateInstance(optimizeGemsButton);\n\t\toptimizeGemsButton.addEventListener('click', async event => {\n\t\t\tconst previousContents = optimizeGemsButton.innerHTML;\n\t\t\toptimizeGemsButton.classList.add('disabled');\n\t\t\toptimizeGemsButton.style.width = `${optimizeGemsButton.getBoundingClientRect().width.toFixed(3)}px`;\n\t\t\toptimizeGemsButton.innerHTML = `<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Running`;\n\t\t\tawait this.optimizeGems(TypedEvent.nextEventID());\n\t\t\toptimizeGemsButton.innerHTML = previousContents;\n\t\t\toptimizeGemsButton.classList.remove('disabled');\n\t\t});\n\n\t\tconst calcButton = this.rootElem.getElementsByClassName('calc-weights')[0] as HTMLElement;\n\t\tcalcButton.addEventListener('click', async event => {\n\t\t\tconst previousContents = calcButton.innerHTML;\n\t\t\tcalcButton.classList.add('disabled');\n\t\t\tcalcButton.style.width = `${calcButton.getBoundingClientRect().width.toFixed(3)}px`;\n\t\t\tcalcButton.innerHTML = `<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Running`;\n\t\t\tthis.container.scrollTo({top: 0});\n\t\t\tthis.container.classList.add('pending');\n\t\t\tthis.resultsViewer.setPending();\n\t\t\tconst iterations = this.simUI.sim.getIterations();\n\t\t\tconst result = await this.simUI.player.computeStatWeights(TypedEvent.nextEventID(), this.epStats, this.epPseudoStats, this.epReferenceStat, (progress: ProgressMetrics) => {\n\t\t\t\tthis.setSimProgress(progress);\n\t\t\t});\n\t\t\tthis.container.classList.remove('pending');\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tcalcButton.innerHTML = previousContents;\n\t\t\tcalcButton.classList.remove('disabled');\n\t\t\tthis.simUI.prevEpIterations = iterations;\n\t\t\tthis.simUI.prevEpSimResult = this.calculateEp(result);\n\t\t\tthis.updateTable(iterations, this.simUI.prevEpSimResult);\n\t\t});\n\n\t\tconst colActionButtons = Array.from(this.rootElem.getElementsByClassName('col-action')) as Array<HTMLSelectElement>;\n\t\tconst makeUpdateWeights = (button: HTMLElement, labelTooltip: string, tooltip: string, weightsFunc: () => UnitStats|undefined, epRefStat?: () => Stat) => {\n\t\t\tconst label = button.previousElementSibling as HTMLElement;\n\t\t\tconst title = () => {\n\t\t\t\tif (!epRefStat) return labelTooltip;\n\n\t\t\t\tconst refStatName = getNameFromStat(epRefStat());\n\t\t\t\treturn labelTooltip + ` Normalized by ${refStatName}.`;\n\t\t\t};\n\t\t\tconst labelTooltipConfig = {\n\t\t\t\ttoggle: 'tooltip',\n\t\t\t\thtml: true,\n\t\t\t\ttitle: title\n\t\t\t};\n\t\t\tbutton.setAttribute('data-bs-toggle', 'tooltip');\n\t\t\tbutton.setAttribute('data-bs-title', tooltip);\n\t\t\tbutton.setAttribute('data-bs-html', 'true');\n\n\t\t\tnew Tooltip(label, labelTooltipConfig);\n\t\t\tTooltip.getOrCreateInstance(button);\n\n\t\t\tbutton.addEventListener('click', event => {\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), Stats.fromProto(weightsFunc()));\n\t\t\t});\n\t\t};\n\n\t\tmakeUpdateWeights(colActionButtons[0], 'Per-point increase in DPS (Damage Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[1], 'EP (Equivalency Points) for DPS (Damage Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dps!.epValues, () => this.getDpsEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[2], 'Per-point increase in HPS (Healing Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().hps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[3], 'EP (Equivalency Points) for HPS (Healing Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().hps!.epValues, () => this.getHealEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[4], 'Per-point increase in TPS (Threat Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[5], 'EP (Equivalency Points) for TPS (Threat Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tps!.epValues, () => this.getDpsEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[6], 'Per-point increase in DTPS (Damage Taken Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dtps!.weights);\n\t\tmakeUpdateWeights(colActionButtons[7], 'EP (Equivalency Points) for DTPS (Damage Taken Per Second) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().dtps!.epValues, () => this.getTankEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[8], 'Per-point decrease in TMI (Theck-Meloree Index) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tmi!.weights);\n\t\tmakeUpdateWeights(colActionButtons[9], 'EP (Equivalency Points) for TMI (Theck-Meloree Index) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().tmi!.epValues, () => this.getTankEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[10], 'Per-point decrease in p(death) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().pDeath!.weights);\n\t\tmakeUpdateWeights(colActionButtons[11], 'EP (Equivalency Points) for p(death) for each stat.', 'Copy to Current EP', () => this.getPrevSimResult().pDeath!.epValues, () => this.getTankEpRefStat());\n\t\tmakeUpdateWeights(colActionButtons[12], 'Current EP Weights. Used to sort the gear selector menus.', 'Restore Default EP', () => this.simUI.individualConfig.defaults.epWeights.toProto());\n\n\t\tconst showAllStatsContainer = this.rootElem.getElementsByClassName('show-all-stats-container')[0] as HTMLElement;\n\t\tnew BooleanPicker(showAllStatsContainer, this, {\n\t\t\tlabel: 'Show All Stats',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => new TypedEvent(),\n\t\t\tgetValue: () => this.showAllStats,\n\t\t\tsetValue: (eventID: EventID, menu: EpWeightsMenu, newValue: boolean) => {\n\t\t\t\tthis.showAllStats = newValue;\n\t\t\t\tthis.updateTable(this.simUI.prevEpIterations || 1, this.getPrevSimResult());\n\t\t\t},\n\t\t});\n\n\t\tthis.updateTable(this.simUI.prevEpIterations || 1, this.getPrevSimResult(), true);\n\n\t\tconst makeEpRatioCell = (cell: HTMLElement, idx: number) => {\n\t\t\tnew NumberPicker(cell, this.simUI.player, {\n\t\t\t\tfloat: true,\n\t\t\t\tchangedEvent: (player: Player<any>) => player.epRatiosChangeEmitter,\n\t\t\t\tgetValue: (player: Player<any>) => this.simUI.player.getEpRatios()[idx],\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\t\tconst epRatios = player.getEpRatios();\n\t\t\t\t\tepRatios[idx] = newValue;\n\t\t\t\t\tplayer.setEpRatios(eventID, epRatios);\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t\tconst epRatioCells = this.body.querySelectorAll('.type-ratio.type-ep') as NodeListOf<HTMLElement>;\n\t\tepRatioCells.forEach(makeEpRatioCell);\n\n\t\tconst weightRatioCells = this.body.querySelectorAll('.type-ratio.type-weight') as NodeListOf<HTMLElement>;\n\t\tweightRatioCells.forEach(makeEpRatioCell);\n\n\t\tconst updateButton = this.rootElem.getElementsByClassName('compute-ep')[0] as HTMLElement;\n\t\tupdateButton.setAttribute('data-bs-toggle', 'tooltip');\n\t\tupdateButton.setAttribute('data-bs-title', \"Compute Weighted EP\");\n\t\tupdateButton.setAttribute('data-bs-html', 'true');\n\n\t\tTooltip.getOrCreateInstance(updateButton);\n\n\t\tupdateButton.addEventListener('click', event => {\n\t\t\tconst results = this.getPrevSimResult();\n\t\t\tconst epRatios = this.simUI.player.getEpRatios();\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tconst scaledDpsEp = Stats.fromProto(results.dps!.epValues).scale(epRatios[0]);\n\t\t\t\tconst scaledHpsEp = Stats.fromProto(results.hps!.epValues).scale(epRatios[1]);\n\t\t\t\tconst scaledTpsEp = Stats.fromProto(results.tps!.epValues).scale(epRatios[2]);\n\t\t\t\tconst scaledDtpsEp = Stats.fromProto(results.dtps!.epValues).scale(epRatios[3]);\n\t\t\t\tconst scaledTmiEp = Stats.fromProto(results.tmi!.epValues).scale(epRatios[4]);\n\t\t\t\tconst scaledPDeathEp = Stats.fromProto(results.pDeath!.epValues).scale(epRatios[5]);\n\t\t\t\tconst newEp = scaledDpsEp.add(scaledHpsEp).add(scaledTpsEp).add(scaledDtpsEp).add(scaledTmiEp).add(scaledPDeathEp);\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), newEp);\n\t\t\t} else {\n\t\t\t\tconst scaledDpsWeights = Stats.fromProto(results.dps!.weights).scale(epRatios[0]);\n\t\t\t\tconst scaledHpsWeights = Stats.fromProto(results.hps!.weights).scale(epRatios[1]);\n\t\t\t\tconst scaledTpsWeights = Stats.fromProto(results.tps!.weights).scale(epRatios[2]);\n\t\t\t\tconst scaledDtpsWeights = Stats.fromProto(results.dtps!.weights).scale(epRatios[3]);\n\t\t\t\tconst scaledTmiWeights = Stats.fromProto(results.tmi!.weights).scale(epRatios[4]);\n\t\t\t\tconst scaledPDeathWeights = Stats.fromProto(results.pDeath!.weights).scale(epRatios[5]);\n\t\t\t\tconst newWeights = scaledDpsWeights.add(scaledHpsWeights).add(scaledTpsWeights).add(scaledDtpsWeights).add(scaledTmiWeights).add(scaledPDeathWeights);\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), newWeights);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setSimProgress(progress: ProgressMetrics) {\n\t\tthis.resultsViewer.setContent(`\n\t\t\t<div class=\"results-sim\">\n\t\t\t\t<div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n\t\t\t\t<div class=\"\">\n\t\t\t\t\t${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\t}\n\n\tprivate updateTable(iterations: number, result: StatWeightsResult, skipFormatting: boolean = false) {\n\t\tthis.tableBody.innerHTML = ``;\n\n\t\tEpWeightsMenu.epUnitStats.forEach(stat => {\n\t\t\t// Don't show extra stats when 'Show all stats' is not selected\n\t\t\tif ((!this.showAllStats && (\n\t\t\t\tstat.isStat() && !this.epStats.includes(stat.getStat())) ||\n\t\t\t\t(stat.isPseudoStat() && !this.epPseudoStats.includes(stat.getPseudoStat()))\n\t\t\t)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst row = this.makeTableRow(stat, iterations, result, skipFormatting);\n\t\t\tthis.tableBody.appendChild(row);\n\t\t});\n\t}\n\tprivate makeTableRow(stat: UnitStat, iterations: number, result: StatWeightsResult, skipFormatting: boolean): HTMLElement {\n\t\tconst row = document.createElement('tr');\n\t\tconst makeWeightAndEpCellHtml = (statWeights: StatWeightValues, className: string): string => {\n\t\t\tconst epCurrent = this.simUI.player.getEpWeights().getUnitStat(stat);\n\t\t\tconst epAvg = stat.getProtoValue(statWeights.epValues!);\n\n\t\t\tlet template = document.createElement('template');\n\t\t\ttemplate.innerHTML = `\n\t\t\t\t<td class=\"stdev-cell ${className} type-weight\">\n\t\t\t\t\t<span class=\"results-avg\">${stat.getProtoValue(statWeights.weights!).toFixed(2)}</span>\n\t\t\t\t\t<span class=\"results-stdev\">\n\t\t\t\t\t\t(<i class=\"fas fa-plus-minus fa-xs\"></i>${stDevToConf90(stat.getProtoValue(statWeights.weightsStdev!), iterations).toFixed(2)})\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"stdev-cell ${className} type-ep\">\n\t\t\t\t\t<span class=\"results-avg\">${epAvg.toFixed(2)}</span>\n\t\t\t\t\t<span class=\"results-stdev\">\n\t\t\t\t\t\t(<i class=\"fas fa-plus-minus fa-xs\"></i>${stDevToConf90(stat.getProtoValue(statWeights.epValuesStdev!), iterations).toFixed(2)})\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\t\t\t`;\n\n\t\t\tconst epAvgElem = template.content.querySelector('.type-ep .results-avg') as HTMLElement;\n\t\t\tconst epDelta = epAvg - epCurrent;\n\n\t\t\tif (skipFormatting || epDelta.toFixed(2) == \"0.00\")\n\t\t\t\tepAvgElem // no-op\n\t\t\telse if (epDelta > 0)\n\t\t\t\tepAvgElem.classList.add('positive');\n\t\t\telse if (epDelta < 0)\n\t\t\t\tepAvgElem.classList.add('negative');\n\n\t\t\treturn template.innerHTML;\n\t\t};\n\n\t\trow.innerHTML = `\n\t\t\t<td>${stat.getName(this.simUI.player.getClass())}</td>\n\t\t\t${makeWeightAndEpCellHtml(result.dps!, 'damage-metrics')}\n\t\t\t${makeWeightAndEpCellHtml(result.hps!, 'healing-metrics')}\n\t\t\t${makeWeightAndEpCellHtml(result.tps!, 'threat-metrics')}\n\t\t\t${makeWeightAndEpCellHtml(result.dtps!, 'threat-metrics')}\n\t\t\t${makeWeightAndEpCellHtml(result.tmi!, 'threat-metrics experimental')}\n\t\t\t${makeWeightAndEpCellHtml(result.pDeath!, 'threat-metrics experimental')}\n\t\t\t<td class=\"current-ep\"></td>\n\t\t`;\n\n\t\tconst currentEpCell = row.querySelector('.current-ep') as HTMLElement;\n\t\tnew NumberPicker(currentEpCell, this.simUI.player, {\n\t\t\tfloat: true,\n\t\t\tchangedEvent: (player: Player<any>) => player.epWeightsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => this.simUI.player.getEpWeights().getUnitStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst epWeights = player.getEpWeights().withUnitStat(stat, newValue);\n\t\t\t\tplayer.setEpWeights(eventID, epWeights);\n\t\t\t},\n\t\t});\n\n\t\treturn row;\n\t}\n\n\tprivate calculateEp(weights: StatWeightsResult) {\n\t\tvar result = StatWeightsResult.clone(weights);\n\t\tconst normaliseValue = (refStat: Stat, values: StatWeightValues) => {\n\t\t\tconst refUnitStat = UnitStat.fromStat(refStat);\n\t\t\tconst refWeight = refUnitStat.getProtoValue(values.weights!);\n\t\t\tconst refStdev = refUnitStat.getProtoValue(values.weightsStdev!);\n\t\t\tEpWeightsMenu.epUnitStats.forEach(stat => {\n\t\t\t\tconst value = stat.getProtoValue(values.weights!);\n\t\t\t\tstat.setProtoValue(values.epValues!, refWeight == 0 ? 0 : value / refWeight);\n\n\t\t\t\tconst valueStdev = stat.getProtoValue(values.weightsStdev!);\n\t\t\t\tstat.setProtoValue(values.epValuesStdev!, refStdev == 0 ? 0 : valueStdev / refStdev);\n\t\t\t});\n\t\t};\n\n\t\tif (this.simUI.dpsRefStat !== undefined) {\n\t\t\tnormaliseValue(this.simUI.dpsRefStat, result.dps!);\n\t\t\tnormaliseValue(this.simUI.dpsRefStat, result.tps!);\n\t\t}\n\t\tif (this.simUI.healRefStat !== undefined) normaliseValue(this.simUI.healRefStat, result.hps!);\n\t\tif (this.simUI.tankRefStat !== undefined) {\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.dtps!);\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.tmi!);\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.pDeath!);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getDpsEpRefStat(): Stat {\n\t\treturn this.simUI.dpsRefStat !== undefined ? this.simUI.dpsRefStat : this.epReferenceStat;\n\t}\n\n\tprivate getHealEpRefStat(): Stat {\n\t\treturn this.simUI.healRefStat !== undefined ? this.simUI.healRefStat : this.epReferenceStat;\n\t}\n\n\tprivate getTankEpRefStat(): Stat {\n\t\treturn this.simUI.tankRefStat !== undefined ? this.simUI.tankRefStat : Stat.StatArmor;\n\t}\n\n\tprivate getPrevSimResult(): StatWeightsResult {\n\t\treturn this.simUI.prevEpSimResult || StatWeightsResult.create({\n\t\t\tdps: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t\thps: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t\ttps: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t\tdtps: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t\ttmi: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t\tpDeath: {\n\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async optimizeGems(eventID: EventID) {\n\t\t// Replace 0 weights with a very tiny value, so we always prefer to take free stats even if the user gave a 0 weight.\n\t\tlet epWeights = this.simUI.player.getEpWeights();\n\t\tepWeights = new Stats(epWeights.asArray().map(w => w == 0 ? 1e-8 : w));\n\n\t\tconst gear = this.simUI.player.getGear();\n\t\tconst allGems = this.simUI.sim.db.getGems();\n\t\tconst phase = this.simUI.sim.getPhase();\n\t\tconst isBlacksmithing = this.simUI.player.isBlacksmithing();\n\t\tconst isJewelcrafting = this.simUI.player.hasProfession(Profession.Jewelcrafting);\n\n\t\tconst optimizedGear = EpWeightsMenu.optimizeGemsForWeights(epWeights, gear, allGems, phase, isBlacksmithing, isJewelcrafting);\n\t\tthis.simUI.player.setGear(eventID, optimizedGear);\n\t}\n\n\tprivate static optimizeGemsForWeights(epWeights: Stats, gear: Gear, allGems: Array<Gem>, phase: number, isBlacksmithing: boolean, isJewelcrafting: boolean): Gear {\n\t\tconst unrestrictedGems = allGems.filter(gem => Gems.isUnrestrictedGem(gem, phase));\n\n\t\tconst {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t} = EpWeightsMenu.findBestGems(unrestrictedGems, epWeights);\n\n\t\tconst items = gear.asMap();\n\t\tconst socketBonusEPs = Object.values(items).map(item => item != null ? new Stats(item.item.socketBonus).computeEP(epWeights) : 0);\n\n\t\t// Start by optimally filling all items, ignoring meta condition.\n\t\tObject.entries(items).forEach(([itemSlot, equippedItem], i) => {\n\t\t\tif (equippedItem == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst item = equippedItem.item;\n\t\t\tconst socketColors = equippedItem.curSocketColors(isBlacksmithing);\n\n\t\t\t// Compare whether its better to match sockets + get socket bonus, or just use best gems.\n\t\t\tconst bestGemEPNotMatchingSockets = sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemEP));\n\t\t\tconst bestGemEPMatchingSockets = socketBonusEPs[i] + sum(socketColors.map(socketColor => socketColor == GemColor.GemColorMeta ? 0 : bestGemForSocketEP[socketColor]));\n\n\t\t\tif (bestGemEPNotMatchingSockets > bestGemEPMatchingSockets) {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGem, i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsocketColors.forEach((socketColor, i) => {\n\t\t\t\t\tif (socketColor != GemColor.GemColorMeta) {\n\t\t\t\t\t\tequippedItem = equippedItem!.withGem(bestGemForSocket[socketColor], i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\titems[Number(itemSlot) as ItemSlot] = equippedItem;\n\t\t});\n\t\tgear = new Gear(items);\n\n\t\tconst allSockets: Array<{ itemSlot: ItemSlot, socketIdx: number }> = Object.keys(items).map((itemSlotStr) => {\n\t\t\tconst itemSlot = parseInt(itemSlotStr) as ItemSlot;\n\t\t\tconst item = items[itemSlot];\n\t\t\tif (!item) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst numSockets = item.numSockets(isBlacksmithing);\n\t\t\treturn [...Array(numSockets).keys()]\n\t\t\t\t.filter(socketIdx => item.item.gemSockets[socketIdx] != GemColor.GemColorMeta)\n\t\t\t\t.map(socketIdx => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\titemSlot: itemSlot,\n\t\t\t\t\t\tsocketIdx: socketIdx,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t}).flat();\n\t\tconst threeSocketCombos = permutations(allSockets, 3);\n\t\tconst calculateGearGemsEP = (gear: Gear): number => gear.statsFromGems(isBlacksmithing).computeEP(epWeights);\n\n\t\t// Now make adjustments to satisfy meta condition.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tconst metaGem = gear.getMetaGem();\n\t\t\tif (!metaGem) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst condition = Gems.getMetaGemCondition(metaGem.id);\n\t\t\t// Only TBC gems use compare color conditions, so just ignore them.\n\t\t\tif (!condition || condition.isCompareColorCondition()) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// If there are very few non-meta gem slots, just skip because it's annoying to deal with.\n\t\t\tif (gear.getAllGems(isBlacksmithing).length - 1 < 3) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\t// In wrath, all meta gems use min colors condition (numRed >= r && numYellow >= y && numBlue >= b)\n\t\t\t// All conditions require 3 gems, e.g. 3 of a single color, 2 of one color and 1 of another, or 1 of each.\n\t\t\t// So the maximum number of gems that ever need to change is 3.\n\n\t\t\tconst colorCombos = EpWeightsMenu.getColorCombosToSatisfyCondition(condition);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\t// Use brute-force to try every possibility.\n\t\t\tcolorCombos.forEach(colorCombo => {\n\t\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\t\tfor (let i = 0; i < colorCombo.length; i++) {\n\t\t\t\t\t\tconst gemColor = colorCombo[i];\n\t\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\t\tcurItems[itemSlot] = curItems[itemSlot]!.withGem(bestGemForColor[gemColor], socketIdx);\n\t\t\t\t\t}\n\t\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\t// Now insert 3 JC gems, if Jewelcrafting is selected.\n\t\t// Use a wrapper function so we can return for readability.\n\t\tgear = ((gear: Gear): Gear => {\n\t\t\tif (!isJewelcrafting) {\n\t\t\t\treturn gear;\n\t\t\t}\n\n\t\t\tconst jcGems = allGems.filter(gem => gem.requiredProfession == Profession.Jewelcrafting);\n\n\t\t\tconst {\n\t\t\t\tbestGemForColor: bestJcGemForColor,\n\t\t\t\tbestGemForColorEP: bestJcGemForColorEP,\n\t\t\t\tbestGemForSocket: bestJcGemForSocket,\n\t\t\t\tbestGemForSocketEP: bestJcGemForSocketEP,\n\t\t\t\tbestGem: bestJcGem,\n\t\t\t\tbestGemEP: bestJcGemEP,\n\t\t\t} = EpWeightsMenu.findBestGems(jcGems, epWeights);\n\n\t\t\tlet bestGear = gear;\n\t\t\tlet bestGearEP = calculateGearGemsEP(gear);\n\n\t\t\tthreeSocketCombos.forEach(socketCombo => {\n\t\t\t\tconst curItems = gear.asMap();\n\t\t\t\tfor (let i = 0; i < socketCombo.length; i++) {\n\t\t\t\t\tconst { itemSlot, socketIdx } = socketCombo[i];\n\t\t\t\t\tconst ei = curItems[itemSlot]!;\n\t\t\t\t\tconst gemColor = ei.gems[socketIdx]!.color;\n\t\t\t\t\tcurItems[itemSlot] = ei.withGem(bestJcGemForColor[gemColor], socketIdx);\n\t\t\t\t}\n\n\t\t\t\tconst curGear = new Gear(curItems);\n\t\t\t\tif (curGear.hasActiveMetaGem(isBlacksmithing)) {\n\t\t\t\t\tconst curGearEP = calculateGearGemsEP(curGear);\n\t\t\t\t\tif (curGearEP > bestGearEP) {\n\t\t\t\t\t\tbestGear = curGear;\n\t\t\t\t\t\tbestGearEP = curGearEP;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn bestGear;\n\t\t})(gear);\n\n\t\treturn gear;\n\t}\n\n\t// Returns every possible way we could satisfy the gem condition.\n\tprivate static getColorCombosToSatisfyCondition(condition: Gems.MetaGemCondition): Array<Array<GemColor>> {\n\t\tif (condition.isOneOfEach()) {\n\t\t\treturn [\n\t\t\t\tGems.PRIMARY_COLORS,\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t].concat(\n\t\t\t\tGems.SECONDARY_COLORS.map((secondaryColor, i) => {\n\t\t\t\t\tconst remainingColor = Gems.PRIMARY_COLORS[i];\n\t\t\t\t\treturn Gems.socketToMatchingColors.get(remainingColor)!.map(matchingColor => [matchingColor, secondaryColor]);\n\t\t\t\t}).flat()\n\t\t\t);\n\t\t} else if (condition.isTwoAndOne()) {\n\t\t\tconst oneColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(1)];\n\t\t\tconst twoColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(2)];\n\t\t\tconst secondaryColor = Gems.SECONDARY_COLORS.find(color => Gems.gemColorMatchesSocket(color, oneColor) && Gems.gemColorMatchesSocket(color, twoColor))!;\n\n\t\t\treturn [\n\t\t\t\t// All the ways to get 1 point in both colors. These are partial combos,\n\t\t\t\t// which still need 1 more gem in the 2-color.\n\t\t\t\t[GemColor.GemColorPrismatic],\n\t\t\t\t[secondaryColor],\n\t\t\t\t[oneColor, twoColor],\n\t\t\t].map(partialCombo => {\n\t\t\t\treturn Gems.socketToMatchingColors.get(twoColor)!.map(matchingColor => partialCombo.concat([matchingColor]));\n\t\t\t}).flat();\n\t\t} else if (condition.isThreeOfAColor()) {\n\t\t\tconst threeColor = Gems.PRIMARY_COLORS[[condition.minRed, condition.minYellow, condition.minBlue].indexOf(3)];\n\t\t\tconst matchingColors = Gems.socketToMatchingColors.get(threeColor)!;\n\t\t\treturn combinationsWithDups(matchingColors, 3);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate static findBestGems(gemList: Array<Gem>, epWeights: Stats): BestGemsResult {\n\t\t// Best gem when we need a gem of a specific color.\n\t\tconst bestGemForColor: Array<Gem> = Gems.GEM_COLORS.map(color => null as unknown as Gem);\n\t\tconst bestGemForColorEP: Array<number> = Gems.GEM_COLORS.map(color => 0);\n\t\t// Best gem when we need to match a socket to activate a bonus.\n\t\tconst bestGemForSocket: Array<Gem> = bestGemForColor.slice();\n\t\tconst bestGemForSocketEP: Array<number> = bestGemForColorEP.slice();\n\t\t// The single best gem, when color doesn't matter.\n\t\tlet bestGem = gemList[0];\n\t\tlet bestGemEP = 0;\n\t\tgemList.forEach(gem => {\n\t\t\tconst gemEP = new Stats(gem.stats).computeEP(epWeights);\n\t\t\tif (gemEP > bestGemForColorEP[gem.color]) {\n\t\t\t\tbestGemForColorEP[gem.color] = gemEP;\n\t\t\t\tbestGemForColor[gem.color] = gem;\n\n\t\t\t\tif (gem.color != GemColor.GemColorMeta && gemEP > bestGemEP) {\n\t\t\t\t\tbestGemEP = gemEP;\n\t\t\t\t\tbestGem = gem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tGems.GEM_COLORS.forEach(socketColor => {\n\t\t\t\tif (Gems.gemMatchesSocket(gem, socketColor) && gemEP > bestGemForSocketEP[socketColor]) {\n\t\t\t\t\tbestGemForSocketEP[socketColor] = gemEP;\n\t\t\t\t\tbestGemForSocket[socketColor] = gem;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tbestGemForColor: bestGemForColor,\n\t\t\tbestGemForColorEP: bestGemForColorEP,\n\t\t\tbestGemForSocket: bestGemForSocket,\n\t\t\tbestGemForSocketEP: bestGemForSocketEP,\n\t\t\tbestGem: bestGem,\n\t\t\tbestGemEP: bestGemEP,\n\t\t};\n\t}\n\n\tprivate static epUnitStats: Array<UnitStat> = UnitStat.getAll().filter(stat => {\n\t\tif (stat.isStat()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn [\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\n\t\t\t\tPseudoStat.PseudoStatRangedDps,\n\t\t\t].includes(stat.getPseudoStat());\n\t\t}\n\t});\n}\n\ninterface BestGemsResult {\n\tbestGemForColor: Array<Gem>,\n\tbestGemForColorEP: Array<number>,\n\tbestGemForSocket: Array<Gem>,\n\tbestGemForSocketEP: Array<number>,\n\tbestGem: Gem,\n\tbestGemEP: number,\n}\n","import { IndividualSimUI } from '../individual_sim_ui';\nimport { SimUI } from '../sim_ui';\nimport { TypedEvent } from '../typed_event';\nimport {\n\tClass,\n\tEquipmentSpec,\n\tItemSlot,\n\tGlyphs,\n\tItemSpec,\n\tProfession,\n\tRace,\n\tSpec,\n} from '../proto/common';\nimport { IndividualSimSettings } from '../proto/ui';\nimport { Database } from '../proto_utils/database';\nimport { classNames, nameToClass, nameToRace, nameToProfession } from '../proto_utils/names';\nimport { classGlyphsConfig, talentSpellIdsToTalentString } from '../talents/factory';\nimport { GlyphConfig } from '../talents/glyphs_picker';\nimport { BaseModal } from './base_modal';\nimport { buf2hex } from '../utils';\nimport { JsonObject } from '@protobuf-ts/runtime';\n\nexport abstract class Importer extends BaseModal {\n\tprotected readonly textElem: HTMLTextAreaElement;\n\tprotected readonly descriptionElem: HTMLElement;\n\tprotected readonly importButton: HTMLButtonElement;\n\tprivate readonly includeFile: boolean;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, title: string, includeFile: boolean) {\n\t\tsuper(parent, 'importer', {title: title, footer: true});\n\t\tthis.includeFile = includeFile;\n\t\tconst uploadInputId = 'upload-input-' + title.toLowerCase().replaceAll(' ', '-');\n\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"import-description\"></div>\n\t\t\t<textarea class=\"importer-textarea form-control\"></textarea>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t${this.includeFile ? `\n\t\t\t\t<label for=\"${uploadInputId}\" class=\"importer-button btn btn-primary upload-button me-2\">\n\t\t\t\t\t<i class=\"fas fa-file-arrow-up\"></i>\n\t\t\t\t\tUpload File\n\t\t\t\t</label>\n\t\t\t\t<input type=\"file\" id=\"${uploadInputId}\" class=\"importer-upload-input d-none\" hidden>\n\t\t\t` : ''\n\t\t\t}\n\t\t\t<button class=\"importer-button btn btn-primary import-button\">\n\t\t\t\t<i class=\"fa fa-download\"></i>\n\t\t\t\tImport\n\t\t\t</button>\n\t\t`;\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('importer-textarea')[0] as HTMLTextAreaElement;\n\t\tthis.descriptionElem = this.rootElem.getElementsByClassName('import-description')[0] as HTMLElement;\n\n\t\tif (this.includeFile) {\n\t\t\tconst uploadInput = this.rootElem.getElementsByClassName('importer-upload-input')[0] as HTMLButtonElement;\n\t\t\tuploadInput.addEventListener('change', async event => {\n\t\t\t\tconst data: string = await (event as any).target.files[0].text();\n\t\t\t\tthis.textElem.textContent = data;\n\t\t\t});\n\t\t}\n\n\t\tthis.importButton = this.rootElem.getElementsByClassName('import-button')[0] as HTMLButtonElement;\n\t\tthis.importButton.addEventListener('click', event => {\n\t\t\ttry {\n\t\t\t\tthis.onImport(this.textElem.value || '');\n\t\t\t} catch (error) {\n\t\t\t\talert('Import error: ' + error);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract onImport(data: string): void\n\n\tprotected async finishIndividualImport<SpecType extends Spec>(simUI: IndividualSimUI<SpecType>, charClass: Class, race: Race, equipmentSpec: EquipmentSpec, talentsStr: string, glyphs: Glyphs | null, professions: Array<Profession>): Promise<void> {\n\t\tconst playerClass = simUI.player.getClass();\n\t\tif (charClass != playerClass) {\n\t\t\tthrow new Error(`Wrong Class! Expected ${classNames[playerClass]} but found ${classNames[charClass]}!`);\n\t\t}\n\n\t\tawait Database.loadLeftoversIfNecessary(equipmentSpec);\n\n\t\tconst gear = simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tconst expectedEnchantIds = equipmentSpec.items.map(item => item.enchant);\n\t\tconst foundEnchantIds = gear.asSpec().items.map(item => item.enchant);\n\t\tconst missingEnchants = expectedEnchantIds.filter(expectedId => expectedId != 0 && !foundEnchantIds.includes(expectedId));\n\n\t\tconst expectedItemIds = equipmentSpec.items.map(item => item.id);\n\t\tconst foundItemIds = gear.asSpec().items.map(item => item.id);\n\t\tconst missingItems = expectedItemIds.filter(expectedId => !foundItemIds.includes(expectedId));\n\n\t\t// Now update settings using the parsed values.\n\t\tconst eventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tsimUI.player.setRace(eventID, race);\n\t\t\tsimUI.player.setGear(eventID, gear);\n\t\t\tif (talentsStr && talentsStr != '--') {\n\t\t\t\tsimUI.player.setTalentsString(eventID, talentsStr);\n\t\t\t}\n\t\t\tif (glyphs) {\n\t\t\t\tsimUI.player.setGlyphs(eventID, glyphs)\n\t\t\t}\n\t\t\tif (professions.length > 0) {\n\t\t\t\tsimUI.player.setProfessions(eventID, professions)\n\t\t\t}\n\t\t});\n\n\t\tthis.close();\n\n\t\tif (missingItems.length == 0 && missingEnchants.length == 0) {\n\t\t\talert('Import successful!');\n\t\t} else {\n\t\t\talert('Import successful, but the following IDs were not found in the sim database:' +\n\t\t\t\t(missingItems.length == 0 ? '' : '\\n\\nItems: ' + missingItems.join(', ')) +\n\t\t\t\t(missingEnchants.length == 0 ? '' : '\\n\\nEnchants: ' + missingEnchants.join(', ')));\n\t\t}\n\t}\n}\n\nexport class IndividualJsonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>Import settings from a JSON file, which can be created using the JSON Export feature.</p>\n\t\t\t<p>To import, upload the file or paste the text below, then click, 'Import'.</p>\n\t\t`;\n\t}\n\n\tasync onImport(data: string) {\n\t\tconst proto = IndividualSimSettings.fromJsonString(data, { ignoreUnknownFields: true });\n\t\tif (proto.player?.equipment) {\n\t\t\tawait Database.loadLeftoversIfNecessary(proto.player.equipment);\n\t\t}\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tif (proto.player) {\n\t\t\t\tthis.simUI.player.fromProto(TypedEvent.nextEventID(), proto.player);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), proto);\n\t\t}\n\t\tthis.close();\n\t}\n}\n\nexport class Individual80UImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, '80 Upgrades Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://eightyupgrades.com\" target=\"_blank\">Eighty Upgrades</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the site's export option below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson?.character?.gameClass as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson?.character?.race as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tlet talentsStr = '';\n\t\tif (importJson?.talents?.length > 0) {\n\t\t\tconst talentIds = (importJson.talents as Array<any>).map(talentJson => talentJson.spellId);\n\t\t\ttalentsStr = talentSpellIdsToTalentString(charClass, talentIds);\n\t\t}\n\n\t\tlet equipmentSpec = EquipmentSpec.create();\n\t\t(importJson.items as Array<any>).forEach(itemJson => {\n\t\t\tlet itemSpec = ItemSpec.create();\n\t\t\titemSpec.id = itemJson.id;\n\t\t\tif (itemJson.enchant?.id) {\n\t\t\t\titemSpec.enchant = itemJson.enchant.id;\n\t\t\t}\n\t\t\tif (itemJson.gems) {\n\t\t\t\titemSpec.gems = (itemJson.gems as Array<any>).filter(gemJson => gemJson?.id).map(gemJson => gemJson.id);\n\t\t\t}\n\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t});\n\n\t\tconst gear = this.simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, null, []);\n\t}\n}\n\nexport class IndividualWowheadGearPlannerImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Wowhead Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://www.wowhead.com/wotlk/gear-planner\" target=\"_blank\">Wowhead Gear Planner</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the gear planner link below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(url: string) {\n\t\tconst match = url.match(/www\\.wowhead\\.com\\/wotlk\\/gear-planner\\/([a-z\\-]+)\\/([a-z\\-]+)\\/([a-zA-Z0-9_\\-]+)/);\n\t\tif (!match) {\n\t\t\tthrow new Error(`Invalid WCL URL ${url}, must look like \"https://www.wowhead.com/wotlk/gear-planner/CLASS/RACE/XXXX\"`);\n\t\t}\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass(match[1].replaceAll('-', ' '));\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class: ' + match[1]);\n\t\t}\n\n\t\tconst race = nameToRace(match[2].replaceAll('-', ' '));\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race: ' + match[2]);\n\t\t}\n\n\t\tconst base64Data = match[3].replaceAll('_', '/').replaceAll('-', '+');\n\t\t//console.log('Base64: ' + base64Data);\n\t\tconst data = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0))\n\t\t//console.log('Hex: ' + buf2hex(data));\n\n\t\t// Binary schema\n\t\t// Byte 00: ??\n\t\t// Byte 01: ?? Seems related to aesthetics (e.g. body type)\n\t\t// Byte 02: 8-bit Player Level\n\t\t// Byte 03: 8-bit length of talents bytes\n\t\t// Next N Bytes: Talents in hex string format\n\n\t\t// Talent hex string looks like '230005232100330150323102505321f03f023203001f'\n\t\t// Just like regular wowhead talents string except 'f' instead of '-'.\n\t\tconst numTalentBytes = data[3];\n\t\tconst talentBytes = data.subarray(4, 4 + numTalentBytes);\n\t\tconst talentsHexStr = buf2hex(talentBytes);\n\t\t//console.log('Talents hex: ' + talentsHexStr);\n\t\tconst talentsStr = talentsHexStr.split('f').slice(0, 3).join('-');\n\t\t//console.log('Talents: ' + talentsStr);\n\n\t\tlet cur = 4 + numTalentBytes;\n\t\tconst numGlyphBytes = data[cur];\n\t\tcur++;\n\t\tconst glyphBytes = data.subarray(cur, cur + numGlyphBytes);\n\t\tconst gearBytes = data.subarray(cur + numGlyphBytes);\n\t\t//console.log(`Glyphs have ${numGlyphBytes} bytes: ${buf2hex(glyphBytes)}`);\n\t\t//console.log(`Remaining ${gearBytes.length} bytes: ${buf2hex(gearBytes)}`);\n\n\t\t// First byte in glyphs section seems to always be 0x30\n\t\tcur = 1;\n\t\tlet hasGlyphs = false;\n\t\tconst d = \"0123456789abcdefghjkmnpqrstvwxyz\";\n\t\tconst glyphStr = String.fromCharCode(...glyphBytes);\n\t\tconst glyphIds = [0, 0, 0, 0, 0, 0];\n\t\twhile (cur < glyphBytes.length) {\n\n\t\t\t// First byte for each glyph is 0x3z, where z is the glyph position.\n\t\t\t// 0, 1, 2 are major glyphs, 3, 4, 5 are minor glyphs.\n\t\t\tconst glyphPosition = d.indexOf(glyphStr[cur]);\n\t\t\tcur++;\n\n\t\t\t// For some reason, wowhead uses the spell IDs for the glyphs and\n\t\t\t// applies a ridiculous hashing scheme.\n\t\t\tconst spellId = 0 +\n\t\t\t\t(d.indexOf(glyphStr[cur + 0]) << 15) +\n\t\t\t\t(d.indexOf(glyphStr[cur + 1]) << 10) +\n\t\t\t\t(d.indexOf(glyphStr[cur + 2]) <<  5) +\n\t\t\t\t(d.indexOf(glyphStr[cur + 3]) <<  0);\n\t\t\tconst itemId = this.simUI.sim.db.glyphSpellToItemId(spellId);\n\t\t\t//console.log(`Glyph position: ${glyphPosition}, spellID: ${spellId}`);\n\n\t\t\thasGlyphs = true;\n\t\t\tglyphIds[glyphPosition] = itemId;\n\t\t\tcur += 4;\n\t\t}\n\t\tconst glyphs = Glyphs.create({\n\t\t\tmajor1: glyphIds[0],\n\t\t\tmajor2: glyphIds[1],\n\t\t\tmajor3: glyphIds[2],\n\t\t\tminor1: glyphIds[3],\n\t\t\tminor2: glyphIds[4],\n\t\t\tminor3: glyphIds[5],\n\t\t});\n\n\t\t// Binary schema for each item:\n\t\t// 8-bit slotNumber, high bit = is enchanted\n\t\t// 8-bit upper 3 bits for gem count\n\t\t// 16-bit item id\n\t\t// if enchant bit is set:\n\t\t//   8-bit ??, possibly enchant position for multiple enchants?\n\t\t//   16-bit enchant id\n\t\t// for each gem:\n\t\t//   8-bit upper 3 bits for gem position\n\t\t//   16-bit gem item id\n\t\tconst equipmentSpec = EquipmentSpec.create();\n\t\tcur = 0;\n\t\twhile (cur < gearBytes.length) {\n\t\t\tconst itemSpec = ItemSpec.create();\n\t\t\tconst slotId = gearBytes[cur] & 0b00111111;\n\t\t\tconst isEnchanted = Boolean(gearBytes[cur] & 0b10000000);\n\t\t\tconst randomEnchant = Boolean(gearBytes[cur] & 0b01000000);\n\t\t\tcur++;\n\n\t\t\tconst numGems = (gearBytes[cur] & 0b11100000) >> 5;\n\t\t\tconst highid = (gearBytes[cur] & 0b00011111);\n\t\t\tcur++;\n\n\t\t\titemSpec.id = (highid << 16) + (gearBytes[cur] << 8) + gearBytes[cur + 1];\n\t\t\tcur += 2;\n\t\t\t//console.log(`Slot ID: ${slotId}, isEnchanted: ${isEnchanted}, numGems: ${numGems}, itemID: ${itemSpec.id}`);\n\n\t\t\tif (isEnchanted) {\n\t\t\t\t// Note: this is the enchant SPELL id, not the effect ID.\n\t\t\t\tconst enchantSpellId = (gearBytes[cur] << 16) + (gearBytes[cur + 1] << 8) + gearBytes[cur + 2];\n\t\t\t\titemSpec.enchant = this.simUI.sim.db.enchantSpellIdToEffectId(enchantSpellId);\n\t\t\t\tcur += 3;\n\t\t\t\t//console.log(`Enchant ID: ${itemSpec.enchant}. Spellid: ${enchantSpellId}`);\n\t\t\t}\n\n\t\t\tfor (let gemIdx = 0; gemIdx < numGems; gemIdx++) {\n\t\t\t\tconst gemPosition = (gearBytes[cur] & 0b11100000) >> 5;\n\t\t\t\tconst highgemid   = (gearBytes[cur] & 0b00011111);\n\t\t\t\tcur++;\n\n\t\t\t\tconst gemId = (highgemid << 16) + (gearBytes[cur] << 8) + gearBytes[cur + 1];\n\t\t\t\tcur += 2;\n\t\t\t\t//console.log(`Gem position: ${gemPosition}, gemID: ${gemId}`);\n\n\t\t\t\tif (!itemSpec.gems) {\n\t\t\t\t\titemSpec.gems = [];\n\t\t\t\t}\n\t\t\t\twhile (itemSpec.gems.length < gemPosition) {\n\t\t\t\t\titemSpec.gems.push(0);\n\t\t\t\t}\n\t\t\t\titemSpec.gems[gemPosition] = gemId;\n\t\t\t}\n\n\t\t\t// Ignore tabard / shirt slots\n\t\t\tconst itemSlotEntry = Object.entries(IndividualWowheadGearPlannerImporter.slotIDs).find(e => e[1] == slotId);\n\t\t\tif (itemSlotEntry != null) {\n\t\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t\t}\n\t\t}\n\t\tconst gear = this.simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, hasGlyphs ? glyphs : null, []);\n\t}\n\n\tstatic slotIDs: Record<ItemSlot, number> = {\n\t\t[ItemSlot.ItemSlotHead]: 1,\n\t\t[ItemSlot.ItemSlotNeck]: 2,\n\t\t[ItemSlot.ItemSlotShoulder]: 3,\n\t\t[ItemSlot.ItemSlotBack]: 15,\n\t\t[ItemSlot.ItemSlotChest]: 5,\n\t\t[ItemSlot.ItemSlotWrist]: 9,\n\t\t[ItemSlot.ItemSlotHands]: 10,\n\t\t[ItemSlot.ItemSlotWaist]: 6,\n\t\t[ItemSlot.ItemSlotLegs]: 7,\n\t\t[ItemSlot.ItemSlotFeet]: 8,\n\t\t[ItemSlot.ItemSlotFinger1]: 11,\n\t\t[ItemSlot.ItemSlotFinger2]: 12,\n\t\t[ItemSlot.ItemSlotTrinket1]: 13,\n\t\t[ItemSlot.ItemSlotTrinket2]: 14,\n\t\t[ItemSlot.ItemSlotMainHand]: 16,\n\t\t[ItemSlot.ItemSlotOffHand]: 17,\n\t\t[ItemSlot.ItemSlotRanged]: 18,\n\t};\n}\n\nexport class IndividualAddonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Addon Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from the <a href=\"https://www.curseforge.com/wow/addons/wowsimsexporter\" target=\"_blank\">WoWSims Importer In-Game Addon</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, talents, glyphs, and professions. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the addon below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tasync onImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson['class'] as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson['race'] as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tconst professions = (importJson['professions'] as Array<{name: string, level: number}>).map(profData => nameToProfession(profData.name));\n\t\tprofessions.forEach((prof, i) => {\n\t\t\tif (prof == Profession.ProfessionUnknown) {\n\t\t\t\tthrow new Error(`Could not parse profession '${importJson['professions'][i]}'`);\n\t\t\t}\n\t\t});\n\n\t\tconst talentsStr = (importJson['talents'] as string) || '';\n\t\tconst glyphsConfig = classGlyphsConfig[charClass];\n\n\t\tconst db = await Database.get();\n\t\tconst majorGlyphIDs = (importJson['glyphs']['major'] as Array<string|JsonObject>).map(g => glyphToID(g, db, glyphsConfig.majorGlyphs));\n\t\tconst minorGlyphIDs = (importJson['glyphs']['minor'] as Array<string|JsonObject>).map(g => glyphToID(g, db, glyphsConfig.minorGlyphs));\n\n\t\tconst glyphs = Glyphs.create({\n\t\t\tmajor1: majorGlyphIDs[0] || 0,\n\t\t\tmajor2: majorGlyphIDs[1] || 0,\n\t\t\tmajor3: majorGlyphIDs[2] || 0,\n\t\t\tminor1: minorGlyphIDs[0] || 0,\n\t\t\tminor2: minorGlyphIDs[1] || 0,\n\t\t\tminor3: minorGlyphIDs[2] || 0,\n\t\t});\n\n\t\tconst gearJson = importJson['gear'];\n\t\tgearJson.items = (gearJson.items as Array<any>).filter(item => item != null);\n\t\t(gearJson.items as Array<any>).forEach(item => {\n\t\t\tif (item.gems) {\n\t\t\t\titem.gems = (item.gems as Array<any>).map(gem => gem || 0);\n\t\t\t}\n\t\t});\n\t\tconst equipmentSpec = EquipmentSpec.fromJson(gearJson);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, glyphs, professions);\n\t}\n}\n\nfunction glyphNameToID(glyphName: string, glyphsConfig: Record<number, GlyphConfig>): number {\n\tif (!glyphName) {\n\t\treturn 0;\n\t}\n\n\tfor (let glyphIDStr in glyphsConfig) {\n\t\tif (glyphsConfig[glyphIDStr].name == glyphName) {\n\t\t\treturn parseInt(glyphIDStr);\n\t\t}\n\t}\n\tthrow new Error(`Unknown glyph name '${glyphName}'`);\n}\n\nfunction glyphToID(glyph: string|JsonObject, db: Database, glyphsConfig: Record<number, GlyphConfig>): number {\n\tif (typeof glyph === 'string') {\n\t\t// Legacy version: AddOn exports Glyphs by name (string) only. Names must be in English.\n\t\treturn glyphNameToID(glyph, glyphsConfig);\n\t}\n\t// New version exports glyph information in a table that includes the name and the glyph spell ID.\n\treturn db.glyphSpellToItemId(glyph['spellID'] as number);\n}\n","import {\n\tArmorType,\n\tItemSlot,\n} from '../proto/common.js';\nimport {\n\tRaidFilterOption,\n\tSourceFilterOption,\n\tUIItem_FactionRestriction,\n} from '../proto/ui.js';\nimport {\n\tarmorTypeNames,\n\traidNames,\n\trangedWeaponTypeNames,\n\tsourceNames,\n\tweaponTypeNames,\n} from '../proto_utils/names.js';\nimport {\n\tclassToEligibleRangedWeaponTypes,\n\tclassToEligibleWeaponTypes,\n\tclassToMaxArmorType,\n\tisDualWieldSpec,\n} from '../proto_utils/utils.js';\nimport { Player } from '../player.js';\nimport { Sim } from '../sim.js';\nimport { EventID } from '../typed_event.js';\nimport { getEnumValues } from '../utils.js';\n\nimport { BooleanPicker } from './boolean_picker.js';\nimport { NumberPicker } from './number_picker.js';\nimport { BaseModal } from './base_modal.js';\nimport { EnumPicker } from './enum_picker.js';\n\nconst factionRestrictionsToLabels: Record<UIItem_FactionRestriction, string> = {\n\t[UIItem_FactionRestriction.UNSPECIFIED]: 'None',\n\t[UIItem_FactionRestriction.ALLIANCE_ONLY]: 'Alliance only',\n\t[UIItem_FactionRestriction.HORDE_ONLY]: 'Horde only',\n};\n\nexport class FiltersMenu extends BaseModal {\n\tconstructor(rootElem: HTMLElement, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(rootElem, 'filters-menu', {size: 'md', title: 'Filters'});\n\n\t\tlet section = this.newSection('Factions');\n\n\t\tnew EnumPicker(section, player.sim, {\n\t\t\tlabel: 'Faction Restrictions',\n\t\t\tvalues: [\n\t\t\t\tUIItem_FactionRestriction.UNSPECIFIED,\n\t\t\t\tUIItem_FactionRestriction.ALLIANCE_ONLY,\n\t\t\t\tUIItem_FactionRestriction.HORDE_ONLY\n\t\t\t].map((restriction) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: factionRestrictionsToLabels[restriction],\n\t\t\t\t\tvalue: restriction,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.filtersChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFilters().factionRestriction,\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: UIItem_FactionRestriction) => {\n\t\t\t\tconst newFilters = sim.getFilters();\n\t\t\t\tnewFilters.factionRestriction = newValue;\n\t\t\t\tsim.setFilters(eventID, newFilters);\n\t\t\t},\n\t\t});\n\n\t\tsection = this.newSection('Source');\n\t\tsection.classList.add('filters-menu-section-bool-list');\n\t\tconst sources = Sim.ALL_SOURCES.filter(s => s != SourceFilterOption.SourceUnknown);\n\t\tsources.forEach(source => {\n\t\t\tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t\t\tlabel: sourceNames[source],\n\t\t\t\tinline: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().sources.includes(source),\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\tfilters.sources.push(source);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilters.sources = filters.sources.filter(v => v != source);\n\t\t\t\t\t}\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tsection = this.newSection('Raids');\n\t\tsection.classList.add('filters-menu-section-bool-list');\n\t\tconst raids = Sim.ALL_RAIDS.filter(s => s != RaidFilterOption.RaidUnknown);\n\t\traids.forEach(raid => {\n\t\t\tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t\t\tlabel: raidNames[raid],\n\t\t\t\tinline: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().raids.includes(raid),\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\tfilters.raids.push(raid);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilters.raids = filters.raids.filter(v => v != raid);\n\t\t\t\t\t}\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tif (Player.ARMOR_SLOTS.includes(slot)) {\n\t\t\tconst maxArmorType = classToMaxArmorType[player.getClass()];\n\t\t\tif (maxArmorType >= ArmorType.ArmorTypeLeather) {\n\t\t\t\tconst section = this.newSection('Armor Type');\n\t\t\t\tsection.classList.add('filters-menu-section-bool-list');\n\t\t\t\tconst armorTypes = (getEnumValues(ArmorType) as Array<ArmorType>)\n\t\t\t\t\t\t.filter(at => at != ArmorType.ArmorTypeUnknown)\n\t\t\t\t\t\t.filter(at => at <= maxArmorType);\n\n\t\t\t\tarmorTypes.forEach(armorType => {\n\t\t\t\t\tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t\t\t\t\tlabel: armorTypeNames[armorType],\n\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().armorTypes.includes(armorType),\n\t\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\t\tfilters.armorTypes.push(armorType);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfilters.armorTypes = filters.armorTypes.filter(at => at != armorType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (Player.WEAPON_SLOTS.includes(slot)) {\n\t\t\tconst weaponTypeSection = this.newSection('Weapon Type');\n\t\t\tweaponTypeSection.classList.add('filters-menu-section-bool-list');\n\t\t\tconst weaponTypes = classToEligibleWeaponTypes[player.getClass()].map(ewt => ewt.weaponType);\n\n\t\t\tweaponTypes.forEach(weaponType => {\n\t\t\t\tnew BooleanPicker<Sim>(weaponTypeSection, player.sim, {\n\t\t\t\t\tlabel: weaponTypeNames[weaponType],\n\t\t\t\t\tinline: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().weaponTypes.includes(weaponType),\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\tfilters.weaponTypes.push(weaponType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.weaponTypes = filters.weaponTypes.filter(at => at != weaponType);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst weaponSpeedSection = this.newSection('Weapon Speed');\n\t\t\tweaponSpeedSection.classList.add('filters-menu-section-number-list');\n\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Min MH Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the mainhand weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minMhWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.minMhWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Max MH Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the mainhand weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxMhWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.maxMhWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (isDualWieldSpec(player.spec)) {\n\t\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\t\tlabel: 'Min OH Speed',\n\t\t\t\t\t//labelTooltip: 'Minimum speed for the offhand weapon. If 0, no minimum value is applied.',\n\t\t\t\t\tfloat: true,\n\t\t\t\t\tpositive: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minOhWeaponSpeed,\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tfilters.minOhWeaponSpeed = newValue;\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\t\tlabel: 'Max OH Speed',\n\t\t\t\t\t//labelTooltip: 'Maximum speed for the offhand weapon. If 0, no maximum value is applied.',\n\t\t\t\t\tfloat: true,\n\t\t\t\t\tpositive: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxOhWeaponSpeed,\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tfilters.maxOhWeaponSpeed = newValue;\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\tconst rangedWeaponTypes = classToEligibleRangedWeaponTypes[player.getClass()];\n\t\t\tif (rangedWeaponTypes.length <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rangedWeaponTypeSection = this.newSection('Ranged Weapon Type');\n\t\t\trangedWeaponTypeSection.classList.add('filters-menu-section-bool-list');\n\n\t\t\trangedWeaponTypes.forEach(rangedWeaponType => {\n\t\t\t\tnew BooleanPicker<Sim>(rangedWeaponTypeSection, player.sim, {\n\t\t\t\t\tlabel: rangedWeaponTypeNames[rangedWeaponType],\n\t\t\t\t\tinline: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().rangedWeaponTypes.includes(rangedWeaponType),\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\tfilters.rangedWeaponTypes.push(rangedWeaponType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.rangedWeaponTypes = filters.rangedWeaponTypes.filter(at => at != rangedWeaponType);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst rangedWeaponSpeedSection = this.newSection('Ranged Weapon Speed');\n\t\t\trangedWeaponSpeedSection.classList.add('filters-menu-section-number-list');\n\t\t\tnew NumberPicker<Sim>(rangedWeaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Min Ranged Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the ranged weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minRangedWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.minRangedWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tnew NumberPicker<Sim>(rangedWeaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Max Ranged Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the ranged weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxRangedWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.maxRangedWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate newSection(name: string): HTMLElement {\n\t\tconst section = document.createElement('div');\n\t\tsection.classList.add('menu-section');\n\t\tthis.body.appendChild(section);\n\t\tsection.innerHTML = `\n\t\t\t<div class=\"menu-section-header\">\n\t\t\t\t<h6 class=\"menu-section-title\">${name}</h6>\n\t\t\t</div>\n\t\t\t<div class=\"menu-section-content\"></div>\n\t\t`;\n\t\treturn section.getElementsByClassName('menu-section-content')[0] as HTMLElement;\n\t}\n}\n","import { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { RaidTarget } from '../proto/common.js';\nimport { Player } from '../player.js';\nimport { Sim } from '../sim.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { emptyRaidTarget } from '../proto_utils/utils.js';\n\nexport function makeShow1hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-1h-weapons-selector', 'mb-0'],\n\t\tlabel: '1H',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getFilters().oneHandedWeapons,\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tconst filters = sim.getFilters();\n\t\t\tfilters.oneHandedWeapons = newValue;\n\t\t\tsim.setFilters(eventID, filters);\n\t\t},\n\t});\n}\n\nexport function makeShow2hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-2h-weapons-selector', 'mb-0'],\n\t\tlabel: '2H',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getFilters().twoHandedWeapons,\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tconst filters = sim.getFilters();\n\t\t\tfilters.twoHandedWeapons = newValue;\n\t\t\tsim.setFilters(eventID, filters);\n\t\t},\n\t});\n}\n\nexport function makeShowMatchingGemsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-matching-gems-selector', 'input-inline', 'mb-0'],\n\t\tlabel: 'Match Socket',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getFilters().matchingGemsOnly,\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tconst filters = sim.getFilters();\n\t\t\tfilters.matchingGemsOnly = newValue;\n\t\t\tsim.setFilters(eventID, filters);\n\t\t},\n\t});\n}\n\nexport function makePhaseSelector(parent: HTMLElement, sim: Sim): EnumPicker<Sim> {\n\treturn new EnumPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['phase-selector'],\n\t\tvalues: [\n\t\t\t{ name: 'Phase 1', value: 1 },\n\t\t\t{ name: 'Phase 2', value: 2 },\n\t\t\t{ name: 'Phase 3', value: 3 },\n\t\t\t{ name: 'Phase 4', value: 4 },\n\t\t\t{ name: 'Phase 5', value: 5 },\n\t\t],\n\t\tchangedEvent: (sim: Sim) => sim.phaseChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getPhase(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\tsim.setPhase(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport const InFrontOfTarget = {\n\ttype: 'boolean' as const,\n\tlabel: 'In Front of Target',\n\tlabelTooltip: 'Stand in front of the target, causing Blocks and Parries to be included in the attack table.',\n\tchangedEvent: (player: Player<any>) => player.inFrontOfTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getInFrontOfTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\tplayer.setInFrontOfTarget(eventID, newValue);\n\t},\n};\n\nexport const DistanceFromTarget = {\n\ttype: 'number' as const,\n\tlabel: 'Distance From Target',\n\tlabelTooltip: 'Distance from targets, in yards. Used to calculate travel time for certain spells.',\n\tchangedEvent: (player: Player<any>) => player.distanceFromTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getDistanceFromTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setDistanceFromTarget(eventID, newValue);\n\t},\n};\n\nexport const TankAssignment = {\n\ttype: 'enum' as const,\n\textraCssClasses: [\n\t\t'tank-selector',\n\t\t'threat-metrics',\n\t\t'within-raid-sim-hide',\n\t],\n\tlabel: 'Tank Assignment',\n\tlabelTooltip: 'Determines which mobs will be tanked. Most mobs default to targeting the Main Tank, but in preset multi-target encounters this is not always true.',\n\tvalues: [\n\t\t{ name: 'None', value: -1 },\n\t\t{ name: 'Main Tank', value: 0 },\n\t\t{ name: 'Tank 2', value: 1 },\n\t\t{ name: 'Tank 3', value: 2 },\n\t\t{ name: 'Tank 4', value: 3 },\n\t],\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.tanksChangeEmitter,\n\tgetValue: (player: Player<any>) => (player.getRaid()?.getTanks() || []).findIndex(tank => RaidTarget.equals(tank, player.makeRaidTarget())),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newTanks = [];\n\t\tif (newValue != -1) {\n\t\t\tfor (let i = 0; i < newValue; i++) {\n\t\t\t\tnewTanks.push(emptyRaidTarget());\n\t\t\t}\n\t\t\tnewTanks.push(player.makeRaidTarget());\n\t\t}\n\t\tplayer.getRaid()!.setTanks(eventID, newTanks);\n\t},\n};\n\nexport const IncomingHps = {\n\ttype: 'number' as const,\n\tlabel: 'Incoming HPS',\n\tlabelTooltip: `\n\t\t<p>Average amount of healing received per second. Used for calculating chance of death.</p>\n\t\t<p>If set to 0, defaults to 17.5% of the primary target's base DPS.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().hps,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.hps = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HealingCadence = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Healing Cadence',\n\tlabelTooltip: `\n\t\t<p>How often the incoming heal 'ticks', in seconds. Generally, longer durations favor Effective Hit Points (EHP) for minimizing Chance of Death, while shorter durations favor avoidance.</p>\n\t\t<p>Example: if Incoming HPS is set to 1000 and this is set to 1s, then every 1s a heal will be received for 1000. If this is instead set to 2s, then every 2s a heal will be recieved for 2000.</p>\n\t\t<p>If set to 0, defaults to 1.5 times the primary target's base swing timer, and half that for dual wielding targets.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().cadenceSeconds,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.cadenceSeconds = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HealingCadenceVariation = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Cadence +/-',\n\tlabelTooltip: `\n\t\t<p>Magnitude of random variation in healing intervals, in seconds.</p>\n\t\t<p>Example: if Healing Cadence is set to 1s with 0.5s variation, then the interval between successive heals will vary uniformly between 0.5 and 1.5s. If the variation is instead set to 2s, then 50% of healing intervals will fall between 0s and 1s, and the other 50% will fall between 1s and 3s.</p>\n\t\t<p>The amount of healing per 'tick' is automatically scaled up or down based on the randomized time since the last tick, so as to keep HPS constant.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().cadenceVariation,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.cadenceVariation = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const BurstWindow = {\n\ttype: 'number' as const,\n\tfloat: false,\n\tlabel: 'TMI Burst Window',\n\tlabelTooltip: `\n\t\t<p>Size in whole seconds of the burst window for calculating TMI. It is important to use a consistent setting when comparing this metric.</p>\n\t\t<p>Default is 6 seconds. If set to 0, TMI calculations are disabled.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().burstWindow,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.burstWindow = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => RaidTarget.equals(tank, player.makeRaidTarget())) != null,\n};\n\nexport const HpPercentForDefensives = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'HP % for Defensive CDs',\n\tlabelTooltip: `\n\t\t<p>% of Maximum Health, below which defensive cooldowns are allowed to be used.</p>\n\t\t<p>If set to 0, this restriction is disabled.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getCooldowns().hpPercentForDefensives * 100,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst cooldowns = player.getCooldowns();\n\t\tcooldowns.hpPercentForDefensives = newValue / 100;\n\t\tplayer.setCooldowns(eventID, cooldowns);\n\t},\n};\n\nexport const InspirationUptime = {\n    type: 'number' as const,\n    float: true,\n    label: 'Inspiration % Uptime',\n    labelTooltip: `\n\t\t<p>% average of Encounter Duration, during which you have the Inspiration buff.</p>\n\t\t<p>If set to 0, the buff isn't applied.</p>\n\t`,\n    changedEvent: (player: Player<any>) => player.healingModelChangeEmitter,\n    getValue: (player: Player<any>) => player.getHealingModel().inspirationUptime * 100,\n    setValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n        const healingModel = player.getHealingModel();\n        healingModel.inspirationUptime = newValue / 100;\n        player.setHealingModel(eventID, healingModel);\n    },\n};\n","import {\n\tUIEnchant as Enchant,\n} from '../proto/ui.js';\n\nlet descriptionsPromise: Promise<Record<number, string>> | null = null;\nfunction fetchEnchantDescriptions(): Promise<Record<number, string>> {\n\tif (descriptionsPromise == null) {\n\t\tdescriptionsPromise = fetch('/wotlk/assets/enchants/descriptions.json')\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tconst descriptionsMap: Record<number, string> = {};\n\t\t\t\tfor (let idStr in json) {\n\t\t\t\t\tdescriptionsMap[parseInt(idStr)] = json[idStr];\n\t\t\t\t}\n\t\t\t\treturn descriptionsMap;\n\t\t\t});\n\t}\n\treturn descriptionsPromise;\n}\n\nexport async function getEnchantDescription(enchant: Enchant): Promise<string> {\n\tconst descriptionsMap = await fetchEnchantDescriptions();\n\treturn descriptionsMap[enchant.effectId] || enchant.name;\n}\n\n// Returns a string uniquely identifying the enchant.\nexport function getUniqueEnchantString(enchant: Enchant): string {\n\treturn enchant.effectId + '-' + enchant.type;\n}\n","import { difficultyNames, professionNames, slotNames } from '../proto_utils/names.js';\nimport { BaseModal } from './base_modal';\nimport { Component } from './component';\nimport { FiltersMenu } from './filters_menu';\nimport { Input, InputConfig } from './input';\nimport {\n\tmakePhaseSelector,\n\tmakeShow1hWeaponsSelector,\n\tmakeShow2hWeaponsSelector,\n\tmakeShowMatchingGemsSelector,\n} from './other_inputs';\n\nimport { setItemQualityCssClass } from '../css_utils';\nimport { Player } from '../player';\nimport { Sim } from '../sim.js';\nimport { SimUI } from '../sim_ui';\nimport { EventID, TypedEvent } from '../typed_event';\nimport { formatDeltaTextElem } from '../utils';\n\nimport { ActionId } from '../proto_utils/action_id';\nimport { getEnchantDescription, getUniqueEnchantString } from '../proto_utils/enchants';\nimport { EquippedItem } from '../proto_utils/equipped_item';\nimport { ItemSwapGear } from '../proto_utils/gear'\nimport { getEmptyGemSocketIconUrl, gemMatchesSocket } from '../proto_utils/gems';\nimport { Stats } from '../proto_utils/stats';\n\nimport {\n\tClass,\n\tSpec,\n\tGemColor,\n\tItemQuality,\n\tItemSlot,\n\tItemSpec,\n\tItemSwap,\n\tItemType,\n} from '../proto/common';\nimport {\n\tUIEnchant as Enchant,\n\tUIGem as Gem,\n\tUIItem as Item,\n} from '../proto/ui.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\n\ndeclare var tippy: any;\n\nexport class GearPicker extends Component {\n\t// ItemSlot is used as the index\n\treadonly itemPickers: Array<ItemPicker>;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>) {\n\t\tsuper(parent, 'gear-picker-root');\n\n\t\tconst leftSide = document.createElement('div');\n\t\tleftSide.classList.add('gear-picker-left', 'tab-panel-col');\n\t\tthis.rootElem.appendChild(leftSide);\n\n\t\tconst rightSide = document.createElement('div');\n\t\trightSide.classList.add('gear-picker-right', 'tab-panel-col');\n\t\tthis.rootElem.appendChild(rightSide);\n\n\t\tconst leftItemPickers = [\n\t\t\tItemSlot.ItemSlotHead,\n\t\t\tItemSlot.ItemSlotNeck,\n\t\t\tItemSlot.ItemSlotShoulder,\n\t\t\tItemSlot.ItemSlotBack,\n\t\t\tItemSlot.ItemSlotChest,\n\t\t\tItemSlot.ItemSlotWrist,\n\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\tItemSlot.ItemSlotOffHand,\n\t\t\tItemSlot.ItemSlotRanged,\n\t\t].map(slot => new ItemPicker(leftSide, simUI, player, slot));\n\n\t\tconst rightItemPickers = [\n\t\t\tItemSlot.ItemSlotHands,\n\t\t\tItemSlot.ItemSlotWaist,\n\t\t\tItemSlot.ItemSlotLegs,\n\t\t\tItemSlot.ItemSlotFeet,\n\t\t\tItemSlot.ItemSlotFinger1,\n\t\t\tItemSlot.ItemSlotFinger2,\n\t\t\tItemSlot.ItemSlotTrinket1,\n\t\t\tItemSlot.ItemSlotTrinket2,\n\t\t].map(slot => new ItemPicker(rightSide, simUI, player, slot));\n\n\t\tthis.itemPickers = leftItemPickers.concat(rightItemPickers).sort((a, b) => a.slot - b.slot);\n\t}\n}\n\nexport class ItemRenderer extends Component {\n\tprivate readonly player: Player<any>;\n\n\treadonly iconElem: HTMLAnchorElement;\n\treadonly nameElem: HTMLAnchorElement;\n\treadonly enchantElem: HTMLAnchorElement;\n\treadonly socketsContainerElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, player: Player<any>) {\n\t\tsuper(parent, 'item-picker-root');\n\t\tthis.player = player;\n\n\t\tthis.rootElem.innerHTML = `\n      <a class=\"item-picker-icon\" href=\"javascript:void(0)\" role=\"button\">\n        <div class=\"item-picker-sockets-container\"></div>\n      </a>\n      <div class=\"item-picker-labels-container\">\n        <a class=\"item-picker-name\" href=\"javascript:void(0)\" role=\"button\"></a><br>\n        <a class=\"item-picker-enchant\" href=\"javascript:void(0)\" role=\"button\"></a>\n      </div>\n    `;\n\n\t\tthis.iconElem = this.rootElem.querySelector('.item-picker-icon') as HTMLAnchorElement;\n\t\tthis.nameElem = this.rootElem.querySelector('.item-picker-name') as HTMLAnchorElement;\n\t\tthis.enchantElem = this.rootElem.querySelector('.item-picker-enchant') as HTMLAnchorElement;\n\t\tthis.socketsContainerElem = this.rootElem.querySelector('.item-picker-sockets-container') as HTMLElement;\n\t}\n\n\tclear() {\n\t\tthis.nameElem.removeAttribute('data-wowhead');\n\t\tthis.nameElem.removeAttribute('href');\n\t\tthis.iconElem.removeAttribute('data-wowhead');\n\t\tthis.iconElem.removeAttribute('href');\n\t\tthis.enchantElem.removeAttribute('data-wowhead');\n\t\tthis.enchantElem.removeAttribute('href');\n\t\tthis.iconElem.removeAttribute('href');\n\n\t\tthis.iconElem.style.backgroundImage = '';\n\t\tthis.enchantElem.innerHTML = '';\n\t\tthis.socketsContainerElem.innerHTML = '';\n\t\tthis.nameElem.textContent = '';\n\t}\n\n\tupdate(newItem: EquippedItem) {\n\t\tthis.nameElem.textContent = newItem.item.name;\n\t\tif (newItem.item.heroic) {\n\t\t\tvar heroic_span = document.createElement('span');\n\t\t\theroic_span.style.color = \"green\";\n\t\t\theroic_span.style.marginLeft = \"3px\";\n\t\t\theroic_span.innerText = \"[H]\";\n\t\t\tthis.nameElem.appendChild(heroic_span);\n\t\t}\n\n\t\tsetItemQualityCssClass(this.nameElem, newItem.item.quality);\n\n\t\tthis.player.setWowheadData(newItem, this.iconElem);\n\t\tthis.player.setWowheadData(newItem, this.nameElem);\n\t\tnewItem.asActionId().fill().then(filledId => {\n\t\t\tfilledId.setBackgroundAndHref(this.iconElem);\n\t\t\tfilledId.setWowheadHref(this.nameElem);\n\t\t});\n\n\t\tif (newItem.enchant) {\n\t\t\tgetEnchantDescription(newItem.enchant).then(description => {\n\t\t\t\tthis.enchantElem.textContent = description;\n\t\t\t});\n\t\t\t// Make enchant text hover have a tooltip.\n\t\t\tif (newItem.enchant.spellId) {\n\t\t\t\tthis.enchantElem.href = ActionId.makeSpellUrl(newItem.enchant.spellId);\n\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&spell=${newItem.enchant.spellId}`);\n\t\t\t} else {\n\t\t\t\tthis.enchantElem.href = ActionId.makeItemUrl(newItem.enchant.itemId);\n\t\t\t\tthis.enchantElem.setAttribute('data-wowhead', `domain=wotlk&item=${newItem.enchant.itemId}`);\n\t\t\t}\n\t\t}\n\n\t\tnewItem.allSocketColors().forEach((socketColor, gemIdx) => {\n\t\t\tlet gemFragment = document.createElement('fragment');\n\t\t\tgemFragment.innerHTML = `\n\t\t\t\t<div class=\"gem-socket-container\">\n\t\t\t\t\t<img class=\"gem-icon\" />\n\t\t\t\t\t<img class=\"socket-icon\" />\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst gemContainer = gemFragment.children[0] as HTMLElement;\n\t\t\tconst gemIconElem = gemContainer.querySelector('.gem-icon') as HTMLImageElement;\n\t\t\tconst socketIconElem = gemContainer.querySelector('.socket-icon') as HTMLImageElement;\n\t\t\tsocketIconElem.src = getEmptyGemSocketIconUrl(socketColor);\n\n\t\t\tif (newItem.gems[gemIdx] == null) {\n\t\t\t\tgemIconElem.classList.add('hide');\n\t\t\t} else {\n\t\t\t\tgemIconElem.classList.remove('hide');\n\t\t\t\tActionId.fromItemId(newItem.gems[gemIdx]!.id).fill().then(filledId => {\n\t\t\t\t\tgemIconElem.src = filledId.iconUrl;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (gemIdx == newItem.numPossibleSockets - 1 && [ItemType.ItemTypeWrist, ItemType.ItemTypeHands].includes(newItem.item.type)) {\n\t\t\t\tconst updateProfession = () => {\n\t\t\t\t\tif (this.player.isBlacksmithing()) {\n\t\t\t\t\t\tgemContainer.classList.remove('hide');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgemContainer.classList.add('hide');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.player.professionChangeEmitter.on(updateProfession);\n\t\t\t\tupdateProfession();\n\t\t\t}\n\n\t\t\tthis.socketsContainerElem.appendChild(gemContainer);\n\t\t});\n\t}\n}\n\nexport class ItemPicker extends Component {\n\treadonly slot: ItemSlot;\n\n\tprivate readonly simUI: SimUI;\n\tprivate readonly player: Player<any>;\n\n\tprivate readonly itemElem: ItemRenderer;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\tprivate _equippedItem: EquippedItem | null = null;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(parent, 'item-picker-root');\n\t\tthis.slot = slot;\n\t\tthis.simUI = simUI;\n\t\tthis.player = player;\n\t\tthis.itemElem = new ItemRenderer(this.rootElem, player);\n\n\t\tthis.item = player.getEquippedItem(slot);\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._items = this.player.getItems(this.slot);\n\t\t\tthis._enchants = this.player.getEnchants(this.slot);\n\n\t\t\tconst gearData = {\n\t\t\t\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => {\n\t\t\t\t\tthis.player.equipItem(eventID, this.slot, equippedItem);\n\t\t\t\t},\n\t\t\t\tgetEquippedItem: () => this.player.getEquippedItem(this.slot),\n\t\t\t\tchangeEvent: player.gearChangeEmitter,\n\t\t\t};\n\n\t\t\tconst openGearSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.openSelectorModal(SelectorModalTabs.Items, gearData);\n\t\t\t};\n\t\t\tconst openEnchantSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.openSelectorModal(SelectorModalTabs.Enchants, gearData);\n\t\t\t};\n\t\t\tconst onClickEnd = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\n\t\t\t// Make icon open gear selector\n\t\t\tthis.itemElem.iconElem.addEventListener('click', openGearSelector);\n\t\t\tthis.itemElem.iconElem.addEventListener('touchstart', openGearSelector);\n\t\t\tthis.itemElem.iconElem.addEventListener('touchend', onClickEnd);\n\n\t\t\t// Make item name open gear selector\n\t\t\tthis.itemElem.nameElem.addEventListener('click', openGearSelector);\n\t\t\tthis.itemElem.nameElem.addEventListener('touchstart', openGearSelector);\n\t\t\tthis.itemElem.nameElem.addEventListener('touchend', onClickEnd);\n\n\t\t\t// Make enchant name open enchant selector\n\t\t\tthis.itemElem.enchantElem.addEventListener('click', openEnchantSelector);\n\t\t\tthis.itemElem.enchantElem.addEventListener('touchstart', openEnchantSelector);\n\t\t\tthis.itemElem.enchantElem.addEventListener('touchend', onClickEnd);\n\t\t});\n\n\t\tplayer.gearChangeEmitter.on(() => {\n\t\t\tthis.item = player.getEquippedItem(slot);\n\t\t});\n\t\tplayer.professionChangeEmitter.on(() => {\n\t\t\tif (this._equippedItem != null) {\n\t\t\t\tthis.player.setWowheadData(this._equippedItem, this.itemElem.iconElem);\n\t\t\t}\n\t\t});\n\t}\n\n\tset item(newItem: EquippedItem | null) {\n\t\t// Clear everything first\n\t\tthis.itemElem.clear();\n\t\tthis.itemElem.nameElem.textContent = slotNames[this.slot];\n\t\tsetItemQualityCssClass(this.itemElem.nameElem, null);\n\n\t\tif (newItem != null) {\n\t\t\tthis.itemElem.update(newItem);\n\t\t} else {\n\t\t\tthis.itemElem.iconElem.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\t}\n\n\t\tthis._equippedItem = newItem;\n\t}\n\n\tprivate openSelectorModal(tab: SelectorModalTabs, gearData: GearData) {\n\t\tnew SelectorModal(this.simUI.rootElem, this.simUI, this.player, {\n\t\t\tselectedTab: tab,\n\t\t\tslot: this.slot,\n\t\t\tequippedItem: this._equippedItem,\n\t\t\teligibleItems: this._items,\n\t\t\teligibleEnchants: this._enchants,\n\t\t\tgearData: gearData\n\t\t})\n\t}\n}\n\nexport class IconItemSwapPicker<SpecType extends Spec, ValueType> extends Input<Player<SpecType>, ValueType> {\n\tprivate readonly config: InputConfig<Player<SpecType>, ValueType>;\n\tprivate readonly iconAnchor: HTMLAnchorElement;\n\tprivate readonly socketsContainerElem: HTMLElement;\n\tprivate readonly player: Player<SpecType>;\n\tprivate readonly slot: ItemSlot;\n\tprivate readonly gear: ItemSwapGear;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<SpecType>, slot: ItemSlot, config: InputConfig<Player<SpecType>, ValueType>) {\n\t\tsuper(parent, 'icon-picker-root', player, config)\n\t\tthis.rootElem.classList.add('icon-picker');\n\t\tthis.player = player;\n\t\tthis.config = config;\n\t\tthis.slot = slot;\n\t\tthis.gear = this.player.getItemSwapGear();\n\n\t\tthis.iconAnchor = document.createElement('a');\n\t\tthis.iconAnchor.classList.add('icon-picker-button');\n\t\tthis.iconAnchor.target = '_blank';\n\t\tthis.rootElem.prepend(this.iconAnchor);\n\n\t\tthis.socketsContainerElem = document.createElement('div')\n\t\tthis.socketsContainerElem.classList.add('item-picker-sockets-container')\n\t\tthis.iconAnchor.appendChild(this.socketsContainerElem);\n\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._items = this.player.getItems(slot);\n\t\t\tthis._enchants = this.player.getEnchants(slot);\n\t\t\tthis.addItemSpecToGear();\n\t\t\tconst gearData = {\n\t\t\t\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => {\n\t\t\t\t\tthis.gear.equipItem(this.slot, equippedItem, player.canDualWield2H());\n\t\t\t\t\tthis.inputChanged(eventID);\n\t\t\t\t},\n\t\t\t\tgetEquippedItem: () => this.gear.getEquippedItem(this.slot),\n\t\t\t\tchangeEvent: config.changedEvent(player),\n\t\t\t}\n\n\t\t\tconst onClickStart = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tnew SelectorModal(simUI.rootElem, simUI, this.player, {\n\t\t\t\t\tselectedTab: SelectorModalTabs.Items,\n\t\t\t\t\tslot: this.slot,\n\t\t\t\t\tequippedItem: this.gear.getEquippedItem(slot),\n\t\t\t\t\teligibleItems: this._items,\n\t\t\t\t\teligibleEnchants: this._enchants,\n\t\t\t\t\tgearData: gearData,\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tthis.iconAnchor.addEventListener('click', onClickStart);\n\t\t\tthis.iconAnchor.addEventListener('touchstart', onClickStart);\n\t\t}).finally(() => this.init());\n\n\t}\n\n\tprivate addItemSpecToGear() {\n\t\tconst itemSwap = this.config.getValue(this.player) as unknown as ItemSwap\n\t\tconst fieldName = this.getFieldNameFromItemSlot(this.slot)\n\n\t\tif (!fieldName)\n\t\t\treturn;\n\n\t\tconst itemSpec = itemSwap[fieldName] as unknown as ItemSpec\n\n\t\tif (!itemSpec)\n\t\t\treturn;\n\n\t\tconst equippedItem = this.player.sim.db.lookupItemSpec(itemSpec);\n\n\t\tif (equippedItem) {\n\t\t\tthis.gear.equipItem(this.slot, equippedItem, this.player.canDualWield2H());\n\t\t}\n\t}\n\n\tprivate getFieldNameFromItemSlot(slot: ItemSlot): keyof ItemSwap | undefined {\n\t\tswitch (slot) {\n\t\t\tcase ItemSlot.ItemSlotMainHand:\n\t\t\t\treturn 'mhItem';\n\t\t\tcase ItemSlot.ItemSlotOffHand:\n\t\t\t\treturn 'ohItem';\n\t\t\tcase ItemSlot.ItemSlotRanged:\n\t\t\t\treturn 'rangedItem';\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.iconAnchor;\n\t}\n\tgetInputValue(): ValueType {\n\t\treturn this.gear.toProto() as unknown as ValueType\n\t}\n\n\tsetInputValue(newValue: ValueType): void {\n\t\tthis.iconAnchor.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\tthis.iconAnchor.removeAttribute('data-wowhead');\n\t\tthis.iconAnchor.href = \"#\";\n\t\tthis.socketsContainerElem.innerHTML = '';\n\n\t\tconst equippedItem = this.gear.getEquippedItem(this.slot);\n\t\tif (equippedItem) {\n\t\t\tthis.iconAnchor.classList.add(\"active\")\n\n\t\t\tequippedItem.asActionId().fillAndSet(this.iconAnchor, true, true);\n\t\t\tthis.player.setWowheadData(equippedItem, this.iconAnchor);\n\n\t\t\tequippedItem.allSocketColors().forEach((socketColor, gemIdx) => {\n\t\t\t\tlet gemFragment = document.createElement('fragment');\n\t\t\t\tgemFragment.innerHTML = `\n\t\t\t\t\t<div class=\"gem-socket-container\">\n\t\t\t\t\t\t<img class=\"gem-icon\" />\n\t\t\t\t\t\t<img class=\"socket-icon\" />\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\tconst gemContainer = gemFragment.children[0] as HTMLElement;\n\t\t\t\tconst gemIconElem = gemContainer.querySelector('.gem-icon') as HTMLImageElement;\n\t\t\t\tconst socketIconElem = gemContainer.querySelector('.socket-icon') as HTMLImageElement;\n\t\t\t\tsocketIconElem.src = getEmptyGemSocketIconUrl(socketColor);\n\n\t\t\t\tif (equippedItem.gems[gemIdx] == null) {\n\t\t\t\t\tgemIconElem.classList.add('hide');\n\t\t\t\t} else {\n\t\t\t\t\tgemIconElem.classList.remove('hide');\n\t\t\t\t\tActionId.fromItemId(equippedItem.gems[gemIdx]!.id).fill().then(filledId => {\n\t\t\t\t\t\tgemIconElem.src = filledId.iconUrl;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.socketsContainerElem.appendChild(gemContainer);\n\t\t\t});\n\n\t\t} else {\n\t\t\tthis.iconAnchor.classList.remove(\"active\")\n\t\t}\n\t}\n\n}\n\nexport interface GearData {\n\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => void,\n\tgetEquippedItem: () => EquippedItem | null,\n\tchangeEvent: TypedEvent<any>,\n}\n\nexport enum SelectorModalTabs {\n\tItems = 'Items',\n\tEnchants = 'Enchants',\n\tGem1 = 'Gem1',\n\tGem2 = 'Gem2',\n\tGem3 = 'Gem3',\n}\n\ninterface SelectorModalConfig {\n\tselectedTab: SelectorModalTabs\n\tslot: ItemSlot,\n\tequippedItem: EquippedItem | null,\n\teligibleItems: Array<Item>,\n\teligibleEnchants: Array<Enchant>,\n\tgearData: GearData\n}\n\nexport class SelectorModal extends BaseModal {\n\tprivate readonly simUI: SimUI;\n\tprivate player: Player<any>;\n\tprivate config: SelectorModalConfig;\n\n\tprivate readonly tabsElem: HTMLElement;\n\tprivate readonly contentElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>, config: SelectorModalConfig) {\n\t\tsuper(parent, 'selector-modal');\n\n\t\tthis.simUI = simUI;\n\t\tthis.player = player;\n\t\tthis.config = config;\n\n\t\twindow.scrollTo({ top: 0 });\n\n\t\tthis.header!.insertAdjacentHTML('afterbegin', `<ul class=\"nav nav-tabs selector-modal-tabs\"></ul>`);\n\n\t\tthis.body.innerHTML = `<div class=\"tab-content selector-modal-tab-content\"></div>`\n\n\t\tthis.tabsElem = this.rootElem.querySelector('.selector-modal-tabs') as HTMLElement;\n\t\tthis.contentElem = this.rootElem.querySelector('.selector-modal-tab-content') as HTMLElement;\n\n\t\tthis.setData();\n\t}\n\n\t// Could be 'Items' 'Enchants' or 'Gem1'-'Gem3'\n\topenTabName(name: string) {\n\t\tArray.from(this.tabsElem.getElementsByClassName(\"selector-modal-item-tab\")).forEach(elem => {\n\t\t\tif (elem.getAttribute(\"data-content-id\") == name+\"-tab\") {\n\t\t\t\t(elem as HTMLElement).click();\n\t\t\t}\t\t\t\n\t\t});\n\t}\n\t\n\topenTab(idx: number) {\n\t\tconst elems = this.tabsElem.getElementsByClassName(\"selector-modal-item-tab\");\n\t\t(elems[idx] as HTMLElement).click();\n\t}\n\n\tsetData() {\n\t\tthis.tabsElem.innerHTML = '';\n\t\tthis.contentElem.innerHTML = '';\n\n\t\tconst { slot, equippedItem, eligibleItems, eligibleEnchants, gearData } = this.config;\n\n\t\tthis.addTab<Item>(\n\t\t\t'Items',\n\t\t\teligibleItems.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\titem: item,\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tactionId: ActionId.fromItem(item),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tquality: item.quality,\n\t\t\t\t\theroic: item.heroic,\n\t\t\t\t\tphase: item.phase,\n\t\t\t\t\tbaseEP: this.player.computeItemEP(item, slot),\n\t\t\t\t\tignoreEPFilter: false,\n\t\t\t\t\tonEquip: (eventID, item: Item) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withItem(item));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgearData.equipItem(eventID, new EquippedItem(item));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\titem => this.player.computeItemEP(item, slot),\n\t\t\tequippedItem => equippedItem?.item,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tgearData.equipItem(eventID, null);\n\t\t\t});\n\n\t\tthis.addTab<Enchant>(\n\t\t\t'Enchants',\n\t\t\teligibleEnchants.map(enchant => {\n\t\t\t\treturn {\n\t\t\t\t\titem: enchant,\n\t\t\t\t\tid: enchant.effectId,\n\t\t\t\t\tactionId: enchant.spellId ? ActionId.fromSpellId(enchant.spellId) : ActionId.fromItemId(enchant.itemId),\n\t\t\t\t\tname: enchant.name,\n\t\t\t\t\tquality: enchant.quality,\n\t\t\t\t\tphase: enchant.phase || 1,\n\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(enchant.stats)),\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\theroic: false,\n\t\t\t\t\tonEquip: (eventID, enchant: Enchant) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withEnchant(enchant));\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\tenchant => this.player.computeEnchantEP(enchant),\n\t\t\tequippedItem => equippedItem?.enchant,\n\t\t\tGemColor.GemColorUnknown,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\tif (equippedItem)\n\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withEnchant(null));\n\t\t\t});\n\n\t\tthis.addGemTabs(slot, equippedItem, gearData);\n\t}\n\n\tprivate addGemTabs(slot: ItemSlot, equippedItem: EquippedItem | null, gearData: GearData) {\n\t\tif (equippedItem == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst socketBonusEP = this.player.computeStatsEP(new Stats(equippedItem.item.socketBonus)) / (equippedItem.item.gemSockets.length || 1);\n\t\tequippedItem.curSocketColors(this.player.isBlacksmithing()).forEach((socketColor, socketIdx) => {\n\t\t\tthis.addTab<Gem>(\n\t\t\t\t'Gem ' + (socketIdx + 1),\n\t\t\t\tthis.player.getGems(socketColor).map((gem: Gem) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\titem: gem,\n\t\t\t\t\t\tid: gem.id,\n\t\t\t\t\t\tactionId: ActionId.fromItemId(gem.id),\n\t\t\t\t\t\tname: gem.name,\n\t\t\t\t\t\tquality: gem.quality,\n\t\t\t\t\t\tphase: gem.phase,\n\t\t\t\t\t\theroic: false,\n\t\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(gem.stats)),\n\t\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\t\tonEquip: (eventID, gem: Gem) => {\n\t\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withGem(gem, socketIdx));\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tgem => {\n\t\t\t\t\tlet gemEP = this.player.computeGemEP(gem);\n\t\t\t\t\tif (gemMatchesSocket(gem, socketColor)) {\n\t\t\t\t\t\tgemEP += socketBonusEP;\n\t\t\t\t\t}\n\t\t\t\t\treturn gemEP;\n\t\t\t\t},\n\t\t\t\tequippedItem => equippedItem?.gems[socketIdx],\n\t\t\t\tsocketColor,\n\t\t\t\teventID => {\n\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\tif (equippedItem)\n\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withGem(null, socketIdx));\n\t\t\t\t},\n\t\t\t\ttabAnchor => {\n\t\t\t\t\ttabAnchor.classList.add('selector-modal-tab-gem');\n\t\t\t\t\ttabAnchor.innerHTML = `\n\t\t\t\t\t\t<div class=\"gem-socket-container\">\n\t\t\t\t\t\t\t<img class=\"gem-icon\" />\n\t\t\t\t\t\t\t<img class=\"socket-icon\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\n\t\t\t\t\tconst gemElem = tabAnchor.querySelector('.gem-icon') as HTMLElement;\n\t\t\t\t\tconst socketElem = tabAnchor.querySelector('.socket-icon') as HTMLElement;\n\t\t\t\t\tconst emptySocketUrl = getEmptyGemSocketIconUrl(socketColor)\n\t\t\t\t\tsocketElem.setAttribute('src', emptySocketUrl);\n\n\t\t\t\t\tconst updateGemIcon = () => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tconst gem = equippedItem?.gems[socketIdx];\n\n\t\t\t\t\t\tif (gem) {\n\t\t\t\t\t\t\tActionId.fromItemId(gem.id).fill().then(filledId => {\n\t\t\t\t\t\t\t\tgemElem.setAttribute('src', filledId.iconUrl);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgemElem.setAttribute('src', emptySocketUrl);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tgearData.changeEvent.on(updateGemIcon);\n\t\t\t\t\tthis.addOnDisposeCallback(() => gearData.changeEvent.off(updateGemIcon));\n\t\t\t\t\tupdateGemIcon();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds one of the tabs for the item selector menu.\n\t *\n\t * T is expected to be Item, Enchant, or Gem. Tab menus for all 3 looks extremely\n\t * similar so this function uses extra functions to do it generically.\n\t */\n\tprivate addTab<T>(\n\t\tlabel: string,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => (T | null | undefined),\n\t\tsocketColor: GemColor,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tsetTabContent?: (tabElem: HTMLAnchorElement) => void) {\n\t\tif (itemData.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { slot, gearData } = this.config;\n\n\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t// Trinket EP is weird so just sort by ilvl instead.\n\t\t\titemData.sort((dataA, dataB) => (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl);\n\t\t} else {\n\t\t\titemData.sort((dataA, dataB) => {\n\t\t\t\tconst diff = computeEP(dataB.item) - computeEP(dataA.item);\n\t\t\t\t// if EP is same, sort by ilvl\n\t\t\t\tif (Math.abs(diff) < 0.01) {\n\t\t\t\t\treturn (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl;\n\t\t\t\t}\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\tconst selected = label === this.config.selectedTab;\n\n\t\tconst tabFragment = document.createElement('fragment');\n\t\ttabFragment.innerHTML = `\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"nav-link selector-modal-item-tab ${selected ? 'active' : ''}\"\n\t\t\t\t\tdata-content-id=\"${tabContentId}\"\n\t\t\t\t\tdata-bs-toggle=\"tab\"\n\t\t\t\t\tdata-bs-target=\"#${tabContentId}\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\taria-controls=\"${tabContentId}\"\n\t\t\t\t\taria-selected=\"${selected}\"\n\t\t\t\t></a>\n\t\t\t</li>\n\t\t`;\n\n\t\tconst tabElem = tabFragment.children[0] as HTMLElement;\n\t\tconst tabAnchor = tabElem.getElementsByClassName('selector-modal-item-tab')[0] as HTMLAnchorElement;\n\t\ttabAnchor.dataset.label = label;\n\t\tif (setTabContent) {\n\t\t\tsetTabContent(tabAnchor);\n\t\t} else {\n\t\t\ttabAnchor.textContent = label;\n\t\t}\n\n\t\tthis.tabsElem.appendChild(tabElem);\n\n\t\t// TODO: do we need this check here?\n\t\tif (itemData.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet ilist = new ItemList<T>(\n\t\t\tthis.contentElem,\n\t\t\tthis.simUI,\n\t\t\tthis.config,\n\t\t\tthis.player,\n\t\t\tlabel,\n\t\t\titemData,\n\t\t\tcomputeEP,\n\t\t\tequippedToItemFn,\n\t\t\tsocketColor,\n\t\t\tonRemove,\n\t\t\t(itemData: ItemData<T>) => {\n\t\t\t\tconst item = itemData.item;\n\t\t\t\titemData.onEquip(TypedEvent.nextEventID(), item);\n\n\t\t\t\t// If the item changes, the gem slots might change, so remove and recreate the gem tabs\n\t\t\t\tif (Item.is(item)) {\n\t\t\t\t\tthis.removeTabs('Gem');\n\t\t\t\t\tthis.addGemTabs(slot, gearData.getEquippedItem(), gearData);\n\t\t\t\t}\n\t\t\t},\n\t\t)\n\n\t\tlet invokeUpdate = () => {ilist.updateSelected()}\n\t\tlet applyFilter = () => {ilist.applyFilters()}\n\t\t// Add event handlers\n\t\tgearData.changeEvent.on(invokeUpdate);\n\n\t\tthis.addOnDisposeCallback(() => gearData.changeEvent.off(invokeUpdate));\n\n\t\tthis.player.sim.phaseChangeEmitter.on(applyFilter);\n\t\tthis.player.sim.filtersChangeEmitter.on(applyFilter);\n\t\tgearData.changeEvent.on(applyFilter);\n\n\t\tthis.addOnDisposeCallback(() => {\n\t\t\tthis.player.sim.phaseChangeEmitter.off(applyFilter);\n\t\t\tthis.player.sim.filtersChangeEmitter.off(applyFilter);\n\t\t\tgearData.changeEvent.off(applyFilter);\n\t\t});\n\n\t}\n\n\tprivate removeTabs(labelSubstring: string) {\n\t\tconst tabElems = Array.prototype.slice.call(this.tabsElem.getElementsByClassName('selector-modal-item-tab'))\n\t\t\t.filter(tab => tab.dataset.label.includes(labelSubstring));\n\n\t\tconst contentElems = tabElems\n\t\t\t.map(tabElem => document.getElementById(tabElem.dataset.contentId!.substring(1)))\n\t\t\t.filter(tabElem => Boolean(tabElem));\n\n\t\ttabElems.forEach(elem => elem.parentElement.remove());\n\t\tcontentElems.forEach(elem => elem!.remove());\n\t}\n}\n\nexport interface ItemData<T> {\n\titem: T,\n\tname: string,\n\tid: number,\n\tactionId: ActionId,\n\tquality: ItemQuality,\n\tphase: number,\n\tbaseEP: number,\n\tignoreEPFilter: boolean,\n\theroic: boolean,\n\tonEquip: (eventID: EventID, item: T) => void,\n}\n\nconst emptySlotIcons: Record<ItemSlot, string> = {\n\t[ItemSlot.ItemSlotHead]: '/wotlk/assets/item_slots/head.jpg',\n\t[ItemSlot.ItemSlotNeck]: '/wotlk/assets/item_slots/neck.jpg',\n\t[ItemSlot.ItemSlotShoulder]: '/wotlk/assets/item_slots/shoulders.jpg',\n\t[ItemSlot.ItemSlotBack]: '/wotlk/assets/item_slots/shirt.jpg',\n\t[ItemSlot.ItemSlotChest]: '/wotlk/assets/item_slots/chest.jpg',\n\t[ItemSlot.ItemSlotWrist]: '/wotlk/assets/item_slots/wrists.jpg',\n\t[ItemSlot.ItemSlotHands]: '/wotlk/assets/item_slots/hands.jpg',\n\t[ItemSlot.ItemSlotWaist]: '/wotlk/assets/item_slots/waist.jpg',\n\t[ItemSlot.ItemSlotLegs]: '/wotlk/assets/item_slots/legs.jpg',\n\t[ItemSlot.ItemSlotFeet]: '/wotlk/assets/item_slots/feet.jpg',\n\t[ItemSlot.ItemSlotFinger1]: '/wotlk/assets/item_slots/finger.jpg',\n\t[ItemSlot.ItemSlotFinger2]: '/wotlk/assets/item_slots/finger.jpg',\n\t[ItemSlot.ItemSlotTrinket1]: '/wotlk/assets/item_slots/trinket.jpg',\n\t[ItemSlot.ItemSlotTrinket2]: '/wotlk/assets/item_slots/trinket.jpg',\n\t[ItemSlot.ItemSlotMainHand]: '/wotlk/assets/item_slots/mainhand.jpg',\n\t[ItemSlot.ItemSlotOffHand]: '/wotlk/assets/item_slots/offhand.jpg',\n\t[ItemSlot.ItemSlotRanged]: '/wotlk/assets/item_slots/ranged.jpg',\n};\nexport function getEmptySlotIconUrl(slot: ItemSlot): string {\n\treturn emptySlotIcons[slot];\n}\n\nexport class ItemList<T> {\n\n\tprivate listItemElems: HTMLLIElement[];\n\tprivate readonly player: Player<any>;\n\tprivate label: string;\n\tprivate slot: ItemSlot;\n\tprivate itemData: Array<ItemData<T>>;\n\tprivate searchInput: HTMLInputElement;\n\tprivate socketColor: GemColor;\n\tprivate computeEP: (item: T) => number;\n\tprivate equippedToItemFn: (equippedItem: EquippedItem | null) => (T | null | undefined);\n\tprivate gearData: GearData;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tsimUI: SimUI,\n\t\tconfig: SelectorModalConfig,\n\t\tplayer: Player<any>,\n\t\tlabel: string,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => (T | null | undefined),\n\t\tsocketColor: GemColor,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tonItemClick: (itemData: ItemData<T>) => void) {\n\t\tthis.label = label;\n\t\tthis.player = player;\n\t\tthis.itemData = itemData;\n\t\tthis.socketColor = socketColor;\n\t\tthis.computeEP = computeEP;\n\t\tthis.equippedToItemFn = equippedToItemFn;\n\n\t\tconst { slot, gearData } = config;\n\t\tthis.slot = slot;\n\t\tthis.gearData = gearData;\n\n\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t// Trinket EP is weird so just sort by ilvl instead.\n\t\t\titemData.sort((dataA, dataB) => (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl);\n\t\t} else {\n\t\t\titemData.sort((dataA, dataB) => {\n\t\t\t\tconst diff = computeEP(dataB.item) - computeEP(dataA.item);\n\t\t\t\t// if EP is same, sort by ilvl\n\t\t\t\tif (Math.abs(diff) < 0.01) {\n\t\t\t\t\treturn (dataB.item as unknown as Item).ilvl - (dataA.item as unknown as Item).ilvl;\n\t\t\t\t}\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\tconst selected = label === config.selectedTab;\n\n\t\tconst tabContentFragment = document.createElement('fragment');\n\t\ttabContentFragment.innerHTML = `\n\t\t\t<div\n\t\t\t\tid=\"${tabContentId}\"\n\t\t\t\tclass=\"selector-modal-tab-pane tab-pane fade ${selected ? 'active show' : ''}\"\n\t\t\t>\n\t\t\t\t<div class=\"selector-modal-filters\">\n\t\t\t\t\t<input class=\"selector-modal-search form-control\" type=\"text\" placeholder=\"Search...\">\n\t\t\t\t\t${label == 'Items' ? '<button class=\"selector-modal-filters-button btn btn-primary\">Filters</button>' : ''}\n\t\t\t\t\t<div class=\"selector-modal-phase-selector\"></div>\n\t\t\t\t\t<div class=\"sim-input selector-modal-boolean-option selector-modal-show-1h-weapons\"></div>\n\t\t\t\t\t<div class=\"sim-input selector-modal-boolean-option selector-modal-show-2h-weapons\"></div>\n\t\t\t\t\t<div class=\"sim-input selector-modal-boolean-option selector-modal-show-matching-gems\"></div>\n\t\t\t\t\t<button class=\"selector-modal-simall-button btn btn-warning\">Add to Batch Sim</button>\n\t\t\t\t\t<button class=\"selector-modal-remove-button btn btn-danger\">Unequip Item</button>\n\t\t\t\t</div>\n\t\t\t\t<div style=\"width: 100%;height: 30px;font-size: 18px;\">\n\t\t\t\t\t<span style=\"float:left\">Item</span>\n\t\t\t\t\t<span style=\"float:right\">EP(+/-)<span class=\"ep-help fas fa-search\" style=\"font-size:10px\"></span></span>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"selector-modal-list\"></ul>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst tabContent = tabContentFragment.children[0] as HTMLElement;\n\t\tparent.appendChild(tabContent);\n\n\t\tconst helpIcon = tabContent.getElementsByClassName(\"ep-help\").item(0);\n\t\ttippy(helpIcon, { 'content': 'These values are computed using stat weights which can be edited using the \"Stat Weights\" button.' });\n\t\tconst show1hWeaponsSelector = makeShow1hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement, player.sim);\n\t\tconst show2hWeaponsSelector = makeShow2hWeaponsSelector(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement, player.sim);\n\t\tif (!(label == 'Items' && (slot == ItemSlot.ItemSlotMainHand || (slot == ItemSlot.ItemSlotOffHand && player.getClass() == Class.ClassWarrior)))) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst showMatchingGemsSelector = makeShowMatchingGemsSelector(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement, player.sim);\n\t\tif (!label.startsWith('Gem')) {\n\t\t\t(tabContent.getElementsByClassName('selector-modal-show-matching-gems')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\tconst phaseSelector = makePhaseSelector(tabContent.getElementsByClassName('selector-modal-phase-selector')[0] as HTMLElement, player.sim);\n\n\t\tif (label == 'Items') {\n\t\t\tconst filtersButton = tabContent.getElementsByClassName('selector-modal-filters-button')[0] as HTMLElement;\n\t\t\tfiltersButton.addEventListener('click', () => new FiltersMenu(parent, player, slot));\n\t\t}\n\n\t\tconst listElem = tabContent.getElementsByClassName('selector-modal-list')[0] as HTMLElement;\n\t\tconst initialFilters = player.sim.getFilters();\n\t\tlet lastFavElem: HTMLElement | null = null;\n\n\t\tthis.listItemElems = itemData.map((itemData, itemIdx) => {\n\t\t\tconst item = itemData.item;\n\t\t\tconst itemEP = computeEP(item);\n\n\t\t\tconst listItemElem = document.createElement('li');\n\t\t\tlistItemElem.classList.add('selector-modal-list-item');\n\t\t\tlistElem.appendChild(listItemElem);\n\n\t\t\tlistItemElem.dataset.idx = String(itemIdx);\n\n\t\t\tlistItemElem.innerHTML = `\n\t\t\t\t\t<div class=\"selector-modal-list-label-cell\">\n\t\t\t\t\t\t<a class=\"selector-modal-list-item-icon\"></a>\n\t\t\t\t\t\t<a class=\"selector-modal-list-item-name\">${itemData.heroic ? itemData.name + \"<span style=\\\"color:green\\\">[H]</span>\" : itemData.name}</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"selector-modal-list-item-source-container\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span class=\"selector-modal-list-item-favorite fa-star\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"selector-modal-list-item-ep\">\n\t\t\t\t\t\t<span class=\"selector-modal-list-item-ep-value\">${itemEP < 9.95 ? itemEP.toFixed(1) : Math.round(itemEP)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"selector-modal-list-item-ep\">\n\t\t\t\t\t\t<span class=\"selector-modal-list-item-ep-delta\"></span>\n\t\t\t\t\t</div>\n\t\t  `;\n\n\t\t\tif (slot == ItemSlot.ItemSlotTrinket1 || slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t\tconst epElem = listItemElem.getElementsByClassName('selector-modal-list-item-ep')[0] as HTMLElement;\n\t\t\t\tepElem.style.display = 'none';\n\t\t\t}\n\n\t\t\tconst iconElem = listItemElem.getElementsByClassName('selector-modal-list-item-icon')[0] as HTMLAnchorElement;\n\t\t\tconst nameElem = listItemElem.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLAnchorElement;\n\t\t\titemData.actionId.fill().then(filledId => {\n\t\t\t\tfilledId.setWowheadHref(iconElem);\n\t\t\t\tfilledId.setWowheadHref(nameElem);\n\t\t\t\ticonElem.style.backgroundImage = `url('${filledId.iconUrl}')`;\n\t\t\t});\n\n\t\t\tsetItemQualityCssClass(nameElem, itemData.quality);\n\n\t\t\tconst sourceElem = listItemElem.getElementsByClassName('selector-modal-list-item-source-container')[0] as HTMLDivElement;\n\t\t\tif (label == 'Items') {\n\t\t\t\tthis.fillSourceInfo(item as unknown as Item, sourceElem, player.sim);\n\t\t\t} else {\n\t\t\t\tsourceElem.remove();\n\t\t\t}\n\t\t\tconst clickHandle = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonItemClick(itemData);\n\t\t\t}\n\t\t\tnameElem.addEventListener('click', clickHandle);\n\t\t\ticonElem.addEventListener('click', clickHandle);\n\n\t\t\tconst favoriteElem = listItemElem.getElementsByClassName('selector-modal-list-item-favorite')[0] as HTMLElement;\n\t\t\ttippy(favoriteElem, { 'content': 'Add to Favorites' });\n\t\t\tconst setFavorite = (isFavorite: boolean) => {\n\t\t\t\tconst filters = player.sim.getFilters();\n\t\t\t\tif (label == 'Items') {\n\t\t\t\t\tconst favId = itemData.id;\n\t\t\t\t\tif (isFavorite) {\n\t\t\t\t\t\tfilters.favoriteItems.push(favId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst favIdx = filters.favoriteItems.indexOf(favId);\n\t\t\t\t\t\tif (favIdx != -1) {\n\t\t\t\t\t\t\tfilters.favoriteItems.splice(favIdx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (label == 'Enchants') {\n\t\t\t\t\tconst favId = getUniqueEnchantString(item as unknown as Enchant);\n\t\t\t\t\tif (isFavorite) {\n\t\t\t\t\t\tfilters.favoriteEnchants.push(favId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst favIdx = filters.favoriteEnchants.indexOf(favId);\n\t\t\t\t\t\tif (favIdx != -1) {\n\t\t\t\t\t\t\tfilters.favoriteEnchants.splice(favIdx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (label.startsWith('Gem')) {\n\t\t\t\t\tconst favId = itemData.id;\n\t\t\t\t\tif (isFavorite) {\n\t\t\t\t\t\tfilters.favoriteGems.push(favId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst favIdx = filters.favoriteGems.indexOf(favId);\n\t\t\t\t\t\tif (favIdx != -1) {\n\t\t\t\t\t\t\tfilters.favoriteGems.splice(favIdx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tplayer.sim.setFilters(TypedEvent.nextEventID(), filters);\n\n\t\t\t\t// Reorder and update this element.\n\t\t\t\tconst curItemElems = Array.from(listElem.children) as Array<HTMLElement>;\n\t\t\t\tif (isFavorite) {\n\t\t\t\t\t// Use same sorting order (based on idx) among the favorited elems.\n\t\t\t\t\tconst nextElem = curItemElems.find(elem => elem.dataset.fav == 'false' || parseInt(elem.dataset.idx!) > itemIdx);\n\t\t\t\t\tif (nextElem) {\n\t\t\t\t\t\tlistElem.insertBefore(listItemElem, nextElem);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistElem.appendChild(listItemElem);\n\t\t\t\t\t}\n\n\t\t\t\t\tfavoriteElem.classList.add('fa-solid');\n\t\t\t\t\tfavoriteElem.classList.remove('fa-regular');\n\t\t\t\t\tlistItemElem.dataset.fav = 'true';\n\t\t\t\t} else {\n\t\t\t\t\t// Put back in original spot. itemIdx will usually be a very good starting point for the search.\n\t\t\t\t\t// Need to search in both directions to handle all cases of favorited elems / itemIdx location.\n\t\t\t\t\tlet curIdx = itemIdx;\n\t\t\t\t\twhile (curIdx > 0 && curItemElems[curIdx].dataset.fav == 'false' && parseInt(curItemElems[curIdx].dataset.idx!) > itemIdx) {\n\t\t\t\t\t\tcurIdx--;\n\t\t\t\t\t}\n\t\t\t\t\twhile (curIdx < curItemElems.length && (curItemElems[curIdx].dataset.fav == 'true' || parseInt(curItemElems[curIdx].dataset.idx!) < itemIdx)) {\n\t\t\t\t\t\tcurIdx++;\n\t\t\t\t\t}\n\t\t\t\t\tif (curIdx == curItemElems.length) {\n\t\t\t\t\t\tlistElem.appendChild(listItemElem);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistElem.insertBefore(listItemElem, curItemElems[curIdx]);\n\t\t\t\t\t}\n\n\t\t\t\t\tfavoriteElem.classList.remove('fa-solid');\n\t\t\t\t\tfavoriteElem.classList.add('fa-regular');\n\t\t\t\t\tlistItemElem.dataset.fav = 'false';\n\t\t\t\t}\n\t\t\t};\n\t\t\tfavoriteElem.addEventListener('click', () => setFavorite(listItemElem.dataset.fav == 'false'));\n\n\t\t\tlet isFavorite = false;\n\t\t\tif (label == 'Items') {\n\t\t\t\tisFavorite = initialFilters.favoriteItems.includes(itemData.id);\n\t\t\t} else if (label == 'Enchants') {\n\t\t\t\tisFavorite = initialFilters.favoriteEnchants.includes(getUniqueEnchantString(item as unknown as Enchant));\n\t\t\t} else if (label.startsWith('Gem')) {\n\t\t\t\tisFavorite = initialFilters.favoriteGems.includes(itemData.id);\n\t\t\t}\n\t\t\tif (isFavorite) {\n\t\t\t\tfavoriteElem.classList.add('fa-solid');\n\t\t\t\tlistItemElem.dataset.fav = 'true';\n\t\t\t\tif (lastFavElem == null) {\n\t\t\t\t\tlistElem.prepend(listItemElem);\n\t\t\t\t} else {\n\t\t\t\t\tlastFavElem.after(listItemElem)\n\t\t\t\t}\n\t\t\t\tlastFavElem = listItemElem;\n\t\t\t} else {\n\t\t\t\tfavoriteElem.classList.add('fa-regular');\n\t\t\t\tlistItemElem.dataset.fav = 'false';\n\t\t\t}\n\n\t\t\treturn listItemElem;\n\t\t});\n\n\t\tconst removeButton = tabContent.getElementsByClassName('selector-modal-remove-button')[0] as HTMLButtonElement;\n\t\tremoveButton.addEventListener('click', event => {\n\t\t\tthis.listItemElems.forEach(elem => elem.classList.remove('active'));\n\t\t\tonRemove(TypedEvent.nextEventID());\n\t\t});\n\t\t\n\t\tif (label.startsWith(\"Enchants\")) {\n\t\t\tremoveButton.textContent = 'Remove Enchant';\n\t\t} else if (label.startsWith(\"Gem\")) {\n\t\t\tremoveButton.textContent = 'Remove Gem';\n\t\t}\n\t\t\n\t\tthis.updateSelected();\n\n\t\tthis.searchInput = tabContent.getElementsByClassName('selector-modal-search')[0] as HTMLInputElement;\n\t\tthis.searchInput.addEventListener('input', () => this.applyFilters());\n\t\tthis.searchInput.addEventListener(\"keyup\", ev => {\n\t\t\tif (ev.key == \"Enter\") {\n\t\t\t\tthis.listItemElems.find(ele => {\n\t\t\t\t\tif (ele.classList.contains(\"hidden\")) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst nameElem = ele.getElementsByClassName('selector-modal-list-item-name')[0] as HTMLElement;\n\t\t\t\t\tnameElem.click();\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst simAllButton = tabContent.getElementsByClassName('selector-modal-simall-button')[0] as HTMLButtonElement;\n\t\tif (label == \"Items\") {\n\t\t\tsimAllButton.hidden = !player.sim.getShowExperimental()\n\t\t\tplayer.sim.showExperimentalChangeEmitter.on(() => {\n\t\t\t\tsimAllButton.hidden = !player.sim.getShowExperimental();\n\t\t\t});\n\t\t\tsimAllButton.addEventListener('click', (event) => {\n\t\t\t\tif (simUI instanceof IndividualSimUI) {\n\t\t\t\t\tlet itemSpecs = Array<ItemSpec>();\n\t\t\t\t\tconst isRangedOrTrinket = this.slot == ItemSlot.ItemSlotRanged ||\n\t\t\t\t\tthis.slot == ItemSlot.ItemSlotTrinket1 ||\n\t\t\t\t\tthis.slot == ItemSlot.ItemSlotTrinket2\n\n\t\t\t\t\tconst curItem = this.equippedToItemFn(this.player.getEquippedItem(this.slot));\n\t\t\t\t\tlet curEP = 0;\n\t\t\t\t\tif (curItem != null) {\n\t\t\t\t\t\tcurEP = this.computeEP(curItem);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.listItemElems.forEach((elem, index) => {\n\t\t\t\t\t\t// skip items already filtered out.\n\t\t\t\t\t\tif (elem.classList.contains('hidden')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst idata = this.itemData[index];\n\t\t\t\t\t\tif (!isRangedOrTrinket && curEP > 0 && idata.baseEP < (curEP / 2) ) {\n\t\t\t\t\t\t\treturn; // If we have EPs on current item, dont sim items with less than half the EP.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add any item that is either >0 EP or a trinket/ranged item.\n\t\t\t\t\t\tif ( idata.baseEP > 0 || isRangedOrTrinket ) {\n\t\t\t\t\t\t\titemSpecs.push(ItemSpec.create({ id: idata.id }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\n\t\t\t\t\tsimUI.bt.addItems(itemSpecs);\n\t\t\t\t\t// TODO: should we open the bulk sim UI or should we run in the background showing progress, and then sort the items in the picker?\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// always hide non-items from being added to batch.\n\t\t\tsimAllButton.hidden = true;\n\t\t}\n\n\t\tthis.applyFilters();\n\t}\n\n\tpublic updateSelected() {\n\t\tconst newEquippedItem = this.gearData.getEquippedItem();\n\t\tconst newItem = this.equippedToItemFn(newEquippedItem);\n\n\t\tconst newItemId = newItem ? (this.label == 'Enchants' ? (newItem as unknown as Enchant).effectId : (newItem as unknown as Item | Gem).id) : 0;\n\t\tconst newEP = newItem ? this.computeEP(newItem) : 0;\n\n\t\tthis.listItemElems.forEach(elem => {\n\t\t\tconst listItemIdx = parseInt(elem.dataset.idx!);\n\t\t\tconst listItemData = this.itemData[listItemIdx];\n\t\t\tconst listItem = listItemData.item;\n\n\t\t\telem.classList.remove('active');\n\t\t\tif (listItemData.id == newItemId) {\n\t\t\t\telem.classList.add('active');\n\t\t\t}\n\n\t\t\tconst epDeltaElem = elem.getElementsByClassName('selector-modal-list-item-ep-delta')[0] as HTMLSpanElement;\n\t\t\tepDeltaElem.textContent = '';\n\t\t\tif (listItem) {\n\t\t\t\tconst listItemEP = this.computeEP(listItem);\n\t\t\t\tformatDeltaTextElem(epDeltaElem, newEP, listItemEP, 0);\n\t\t\t}\n\t\t});\n\t};\n\n\tpublic applyFilters() {\n\t\tlet validItemElems = this.listItemElems;\n\t\tconst currentEquippedItem = this.player.getEquippedItem(this.slot);\n\n\t\tif (this.label == 'Items') {\n\t\t\tvalidItemElems = this.player.filterItemData(\n\t\t\t\tvalidItemElems,\n\t\t\t\telem => this.itemData[parseInt(elem.dataset.idx!)].item as unknown as Item,\n\t\t\t\tthis.slot);\n\t\t} else if (this.label == 'Enchants') {\n\t\t\tvalidItemElems = this.player.filterEnchantData(\n\t\t\t\tvalidItemElems,\n\t\t\t\telem => this.itemData[parseInt(elem.dataset.idx!)].item as unknown as Enchant,\n\t\t\t\tthis.slot,\n\t\t\t\tcurrentEquippedItem);\n\t\t} else if (this.label.startsWith('Gem')) {\n\t\t\tvalidItemElems = this.player.filterGemData(\n\t\t\t\tvalidItemElems,\n\t\t\t\telem => this.itemData[parseInt(elem.dataset.idx!)].item as unknown as Gem,\n\t\t\t\tthis.slot,\n\t\t\t\tthis.socketColor);\n\t\t}\n\n\t\tvalidItemElems = validItemElems.filter(elem => {\n\t\t\tconst listItemData = this.itemData[parseInt(elem.dataset.idx!)];\n\n\t\t\tif (listItemData.phase > this.player.sim.getPhase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.searchInput.value.length > 0) {\n\t\t\t\tconst searchQuery = this.searchInput.value.toLowerCase().replaceAll(/[^a-zA-Z0-9\\s]/g, '').split(\" \");\n\t\t\t\tconst name = listItemData.name.toLowerCase().replaceAll(/[^a-zA-Z0-9\\s]/g, '');\n\n\t\t\t\tvar include = true;\n\t\t\t\tsearchQuery.forEach(v => {\n\t\t\t\t\tif (!name.includes(v))\n\t\t\t\t\t\tinclude = false;\n\t\t\t\t});\n\t\t\t\tif (!include) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tlet numShown = 0;\n\t\tthis.listItemElems.forEach(elem => {\n\t\t\tif (validItemElems.includes(elem)) {\n\t\t\t\telem.classList.remove('hidden');\n\t\t\t\tnumShown++;\n\t\t\t\tif (numShown % 2 == 0) {\n\t\t\t\t\telem.classList.remove('odd');\n\t\t\t\t} else {\n\t\t\t\t\telem.classList.add('odd');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telem.classList.add('hidden');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate fillSourceInfo(item: Item, container: HTMLDivElement, sim: Sim) {\n\t\tif (!item.sources || item.sources.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst source = item.sources[0];\n\t\tif (source.source.oneofKind == 'crafted') {\n\t\t\tconst src = source.source.crafted;\n\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t<a href=\"${ActionId.makeSpellUrl(src.spellId)}\">${professionNames[src.profession]}</a>\n\t\t\t\t`;\n\t\t} else if (source.source.oneofKind == 'drop') {\n\t\t\tconst src = source.source.drop;\n\t\t\tconst zone = sim.db.getZone(src.zoneId);\n\t\t\tconst npc = sim.db.getNpc(src.npcId);\n\t\t\tif (!zone) {\n\t\t\t\tthrow new Error('No zone found for item: ' + item);\n\t\t\t}\n\n\t\t\tlet innerHTML = `\n\t\t\t\t\t<a href=\"${ActionId.makeZoneUrl(zone.id)}\">${zone.name} (${difficultyNames[src.difficulty]})</a>\n\t\t\t\t`;\n\n\t\t\tconst category = src.category ? ` - ${src.category}` : '';\n\t\t\tif (npc) {\n\t\t\t\tinnerHTML += `\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<a href=\"${ActionId.makeNpcUrl(npc.id)}\">${npc.name + category}</a>\n\t\t\t\t\t`;\n\t\t\t} else if (src.otherName) {\n\t\t\t\tinnerHTML += `\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<a href=\"${ActionId.makeZoneUrl(zone.id)}>${src.otherName + category}</a>\n\t\t\t\t\t`;\n\t\t\t} else if (category) {\n\t\t\t\tinnerHTML += `\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<a href=\"${ActionId.makeZoneUrl(zone.id)}>${category}</a>\n\t\t\t\t\t`;\n\t\t\t}\n\t\t\tcontainer.innerHTML = innerHTML;\n\t\t} else if (source.source.oneofKind == 'quest') {\n\t\t\tconst src = source.source.quest;\n\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t<a href=\"${ActionId.makeQuestUrl(src.id)}\">${src.name}</a>\n\t\t\t\t`;\n\t\t} else if (source.source.oneofKind == 'soldBy') {\n\t\t\tconst src = source.source.soldBy;\n\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t<a href=\"${ActionId.makeNpcUrl(src.npcId)}\">${src.npcName}</a>\n\t\t\t\t`;\n\t\t}\n\t}\n\n}","import { SimUI } from \"../sim_ui\";\nimport { Component } from \"./component\";\n\nexport interface SimTabConfig {\n  identifier: string,\n  title: string,\n}\n\nexport abstract class SimTab extends Component {\n  protected simUI: SimUI;\n  protected config: SimTabConfig;\n\n  readonly navItem: HTMLElement;\n  readonly navLink: HTMLElement;\n  readonly contentContainer: HTMLElement;\n\n  constructor(parentElem: HTMLElement, simUI: SimUI, config: SimTabConfig ) {\n    super(parentElem, 'sim-tab');\n\n    this.rootElem.classList.add(config.identifier);\n\n    this.simUI = simUI;\n    this.config = config;\n\n    this.rootElem.id = this.config.identifier;\n    this.rootElem.classList.add('tab-pane', 'fade');\n\n    if (parentElem.childNodes.length == 0)\n      this.rootElem.classList.add('active', 'show');\n\n    this.navItem = this.buildNavItem();\n    this.navLink = this.navItem.children[0] as HTMLElement;\n    this.contentContainer = document.createElement('div');\n    this.contentContainer.classList.add('tab-pane-content-container');\n    this.rootElem.appendChild(this.contentContainer);\n\n    this.simUI.simHeader.addSimTabLink(this);\n  }\n\n  private buildNavItem(): HTMLElement {\n    const tabFragment = document.createElement('fragment');\n\t\ttabFragment.innerHTML = `\n\t\t\t<li class=\"${this.config.identifier} nav-item\" role=\"presentation\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"nav-link\"\n\t\t\t\t\tdata-bs-toggle=\"tab\"\n\t\t\t\t\tdata-bs-target=\"#${this.config.identifier}\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\taria-controls=\"${this.config.identifier}\"\n\t\t\t\t>${this.config.title}</a>\n\t\t\t</li>\n\t\t`;\n\n    return tabFragment.children[0] as HTMLElement;\n  }\n\n  protected abstract buildTabContent(): void;\n\n  protected buildColumn(index: number, customCssClass: string): HTMLElement {\n\t\tlet column = document.createElement('div');\n\t\tcolumn.classList.add('tab-panel-col', `${customCssClass}-${index}`)\n\t\treturn column;\n\t}\n}\n","import { Database } from '../../proto_utils/database';\nimport { ContentBlock } from \"../content_block\";\nimport { Importer } from \"../importers\";\n\nimport { IndividualSimUI } from \"../../individual_sim_ui\";\nimport { TypedEvent } from \"../../typed_event\";\n\nimport { EventID } from '../../typed_event.js';\n\nimport { BulkComboResult, BulkSettings, ItemSpecWithSlot, ProgressMetrics } from \"../../proto/api\";\nimport { EquipmentSpec, Faction, GemColor, ItemSlot, ItemSpec, SimDatabase, SimEnchant, SimGem, SimItem, Spec } from \"../../proto/common\";\n\nimport { ItemData, ItemList, ItemRenderer, SelectorModal, SelectorModalTabs } from \"../gear_picker\";\nimport { SimTab } from \"../sim_tab\";\n\nimport { UIEnchant, UIGem, UIItem } from \"../../proto/ui\";\nimport { EquippedItem } from \"../../proto_utils/equipped_item\";\nimport { Component } from \"../component\";\nimport { ResultsViewer } from \"../results_viewer\";\n\nimport { ActionId } from \"../../proto_utils/action_id\";\nimport { getEmptyGemSocketIconUrl } from \"../../proto_utils/gems\";\nimport { canEquipItem, getEligibleItemSlots } from \"../../proto_utils/utils\";\nimport { BaseModal } from \"../base_modal\";\nimport { BooleanPicker } from \"../boolean_picker\";\nimport { UIItem_FactionRestriction } from '../../proto/ui';\n\nexport class BulkGearJsonImporter<SpecType extends Spec> extends Importer {\n  private readonly simUI: IndividualSimUI<SpecType>;\n  private readonly bulkUI: BulkTab\n  constructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>, bulkUI: BulkTab) {\n    super(parent, simUI, 'Bag Item Import', true);\n    this.simUI = simUI;\n    this.bulkUI = bulkUI;\n    this.descriptionElem.innerHTML = `\n      <p>Import bag items from a JSON file, which can be created by the WowSimsExporter in-game AddOn.</p>\n      <p>To import, upload the file or paste the text below, then click, 'Import'.</p>\n    `;\n  }\n\n  async onImport(data: string) {\n    try {\n      const equipment = EquipmentSpec.fromJsonString(data, { ignoreUnknownFields: true });\n      if (equipment?.items?.length > 0) {\n        const db = await Database.loadLeftoversIfNecessary(equipment);\n        const items = equipment.items.filter((spec) => spec.id > 0);\n        if (items.length > 0) {\n          for (const itemSpec of items) {\n            if (itemSpec.id == 0) {\n              continue;\n            }\n            if (!db.lookupItemSpec(itemSpec)) {\n              throw new Error(\"cannot find item with ID \" + itemSpec.id);\n            }\n          }\n          this.bulkUI.addItems(items);\n        }\n      }\n      this.close();\n    } catch (e: any) {\n      alert(e.toString());\n    }\n  }\n}\n\nclass BulkSimResultRenderer {\n\n  constructor(parent: ContentBlock, simUI: IndividualSimUI<Spec>, result: BulkComboResult, baseResult: BulkComboResult) {\n    const dpsDivParent = document.createElement('div');\n    dpsDivParent.classList.add('results-sim');\n\n    const dpsDiv = document.createElement('div');\n    dpsDiv.classList.add('bulk-result-body-dps', 'bulk-items-text-line', 'results-sim-dps', 'damage-metrics');\n    dpsDivParent.appendChild(dpsDiv);\n\n    const dpsNumber = document.createElement('span');\n    dpsNumber.textContent = this.formatDps(result.unitMetrics?.dps?.avg!);\n    dpsNumber.classList.add('topline-result-avg');\n    dpsDiv.appendChild(dpsNumber);\n\n    const dpsDelta = result.unitMetrics?.dps?.avg! - baseResult.unitMetrics?.dps?.avg!;\n    const dpsDeltaSpan = document.createElement('span');\n    dpsDeltaSpan.textContent = `${this.formatDpsDelta(dpsDelta)}`;\n    dpsDeltaSpan.classList.add(dpsDelta >= 0 ? 'bulk-result-header-positive' : 'bulk-result-header-negative');\n    dpsDiv.appendChild(dpsDeltaSpan);\n\n    const itemsContainer = document.createElement('div');\n    itemsContainer.classList.add('bulk-gear-combo');\n    parent.bodyElement.appendChild(itemsContainer);\n    parent.bodyElement.appendChild(dpsDivParent);\n\n    if (result.itemsAdded && result.itemsAdded.length > 0) {\n      const equipBtn = document.createElement('button');\n      equipBtn.textContent = 'Equip';\n      equipBtn.classList.add('btn', 'btn-primary', 'bulk-equipit');\n      equipBtn.onclick = () => {\n        result.itemsAdded.forEach((itemAdded) => {\n          const item = simUI.sim.db.lookupItemSpec(itemAdded.item!);\n          simUI.player.equipItem(TypedEvent.nextEventID(), itemAdded.slot, item);\n          simUI.simHeader.activateTab('gear-tab');\n        });\n      };\n\n      parent.bodyElement.appendChild(equipBtn);\n\n      for (const is of result.itemsAdded) {\n        const item = simUI.sim.db.lookupItemSpec(is.item!)\n        const renderer = new ItemRenderer(itemsContainer, simUI.player);\n        renderer.update(item!);\n\n        const p = document.createElement('a');\n        p.classList.add('bulk-result-item-slot');\n        p.textContent = this.itemSlotName(is);\n        renderer.nameElem.appendChild(p);\n      }\n    } else {\n      const p = document.createElement('p');\n      p.textContent = 'No changes - this is your currently equipped gear!';\n      parent.bodyElement.appendChild(p);\n      dpsDeltaSpan.textContent = '';\n    }\n  }\n\n  private formatDps(dps: number): string {\n    return (Math.round(dps * 100) / 100).toFixed(2);\n  }\n\n  private formatDpsDelta(delta: number): string {\n    return ((delta >= 0) ? \"+\" : \"\") + this.formatDps(delta);\n  }\n\n  private itemSlotName(is: ItemSpecWithSlot): string {\n    return JSON.parse(ItemSpecWithSlot.toJsonString(is, { emitDefaultValues: true }))['slot'].replace('ItemSlot', '')\n  }\n}\n\nexport class BulkItemPicker extends Component {\n  private readonly itemElem: ItemRenderer;\n  readonly simUI: IndividualSimUI<Spec>;\n  readonly bulkUI: BulkTab;\n  readonly index: number;\n\n  protected item: EquippedItem;\n\n  constructor(parent: HTMLElement, simUI: IndividualSimUI<Spec>, bulkUI: BulkTab, item: EquippedItem, index: number) {\n    super(parent, 'bulk-item-picker');\n    this.simUI = simUI;\n    this.bulkUI = bulkUI;\n    this.index = index;\n    this.item = item;\n    this.itemElem = new ItemRenderer(this.rootElem, simUI.player);\n\n    this.simUI.sim.waitForInit().then(() => {\n      this.setItem(item);\n      const slot = getEligibleItemSlots(this.item.item)[0];\n      const eligibleEnchants = this.simUI.sim.db.getEnchants(slot);\n      const openEnchantGemSelector = (event: Event) => {\n        event.preventDefault();\n        const changeEvent = new TypedEvent<void>();\n        const modal = new SelectorModal(this.bulkUI.rootElem, this.simUI, this.simUI.player, {\n          selectedTab: SelectorModalTabs.Enchants,\n          slot: slot,\n          equippedItem: this.item,\n          eligibleItems: new Array<UIItem>(),\n          eligibleEnchants: eligibleEnchants,\n          gearData: {\n            equipItem: (eventID: EventID, equippedItem: EquippedItem | null) => {\n              if (equippedItem) {\n                const allItems = this.bulkUI.getItems();\n                allItems[this.index] = equippedItem.asSpec();\n                this.item = equippedItem;\n                this.bulkUI.setItems(allItems);\n                changeEvent.emit(TypedEvent.nextEventID());\n              }\n            },\n            getEquippedItem: () => this.item,\n            changeEvent: changeEvent,\n          }\n        });\n\n        if (eligibleEnchants.length > 0) {\n          modal.openTabName(\"Enchants\");\n        } else if (this.item._gems.length > 0) {\n          modal.openTabName(\"Gem1\");\n        }\n\n        const destroyItemButton = document.createElement('button');\n        destroyItemButton.textContent = 'Remove from Batch';\n        destroyItemButton.classList.add('btn', 'btn-danger');\n        destroyItemButton.onclick = () => {\n          bulkUI.setItems(bulkUI.getItems().filter((item, idx) => { return idx != this.index }));\n          modal.close();\n        };\n        const closeX = modal.header?.querySelector('.close-button');\n        if (closeX != undefined) {\n          modal.header?.insertBefore(destroyItemButton, closeX);\n        }\n      };\n\n      const onClickEnd = (event: Event) => {\n        event.preventDefault();\n      };\n\n      // Make icon open gear selector\n      this.itemElem.iconElem.addEventListener('click', openEnchantGemSelector);\n      this.itemElem.iconElem.addEventListener('touchstart', openEnchantGemSelector);\n      this.itemElem.iconElem.addEventListener('touchend', onClickEnd);\n\n      // Make item name open gear selector\n      this.itemElem.nameElem.addEventListener('click', openEnchantGemSelector);\n      this.itemElem.nameElem.addEventListener('touchstart', openEnchantGemSelector);\n      this.itemElem.nameElem.addEventListener('touchend', onClickEnd);\n\n      this.itemElem.enchantElem.addEventListener('click', openEnchantGemSelector);\n      this.itemElem.enchantElem.addEventListener('touchstart', openEnchantGemSelector);\n      this.itemElem.enchantElem.addEventListener('touchend', onClickEnd);\n    });\n  }\n\n  setItem(newItem: EquippedItem | null) {\n    this.itemElem.clear();\n    if (newItem != null) {\n      this.itemElem.update(newItem);\n      this.item = newItem;\n    } else {\n      this.itemElem.rootElem.style.opacity = '30%';\n      this.itemElem.iconElem.style.backgroundImage = `url('/wotlk/assets/item_slots/empty.jpg')`;\n      this.itemElem.nameElem.textContent = 'Add new item (not implemented)';\n      this.itemElem.rootElem.style.alignItems = 'center';\n    }\n  }\n}\n\nexport class BulkTab extends SimTab {\n  readonly simUI: IndividualSimUI<Spec>;\n\n  readonly itemsChangedEmitter = new TypedEvent<void>();\n\n  readonly leftPanel: HTMLElement;\n  readonly rightPanel: HTMLElement;\n\n  readonly column1: HTMLElement = this.buildColumn(1, 'raid-settings-col');\n\n  protected items: Array<ItemSpec> = new Array<ItemSpec>();\n\n  private pendingResults: ResultsViewer;\n  private pendingDiv: HTMLDivElement;\n\n  // TODO: Make a real options probably\n  private doCombos: boolean;\n  private fastMode: boolean;\n  private autoGem: boolean;\n  private autoEnchant: boolean;\n  private defaultGems: SimGem[];\n  private gemIconElements: HTMLImageElement[];\n\n  constructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n    super(parentElem, simUI, { identifier: 'bulk-tab', title: 'Batch' });\n    this.simUI = simUI;\n\n    this.leftPanel = document.createElement('div');\n    this.leftPanel.classList.add('bulk-tab-left', 'tab-panel-left');\n    this.leftPanel.appendChild(this.column1);\n\n    this.rightPanel = document.createElement('div');\n    this.rightPanel.classList.add('bulk-tab-right', 'tab-panel-right');\n\n    this.pendingDiv = document.createElement('div');\n    this.pendingDiv.classList.add(\"results-pending-overlay\");\n    this.pendingResults = new ResultsViewer(this.pendingDiv);\n    this.pendingResults.hideAll();\n\n    this.contentContainer.appendChild(this.leftPanel);\n    this.contentContainer.appendChild(this.rightPanel);\n    this.contentContainer.appendChild(this.pendingDiv);\n\n    this.doCombos = true;\n    this.fastMode = true;\n    this.autoGem = true;\n    this.autoEnchant = true;\n    this.defaultGems = [UIGem.create(), UIGem.create(), UIGem.create(), UIGem.create()];\n    this.gemIconElements = [];\n    this.buildTabContent();\n\n    this.simUI.sim.waitForInit().then(() => {\n      this.loadSettings();\n    });\n  }\n\n  private getSettingsKey(): string {\n    return this.simUI.getStorageKey(\"bulk-settings.v1\");\n  }\n\n  private loadSettings() {\n    const storedSettings = window.localStorage.getItem(this.getSettingsKey());\n    if (storedSettings != null) {\n      let settings = BulkSettings.fromJsonString(storedSettings, { ignoreUnknownFields: true })\n\n      this.doCombos = settings.combinations;\n      this.fastMode = settings.fastMode;\n      this.autoEnchant = settings.autoEnchant;\n      this.autoGem = settings.autoGem;\n      this.defaultGems = new Array<SimGem>(\n        SimGem.create({ id: settings.defaultRedGem }),\n        SimGem.create({ id: settings.defaultYellowGem }),\n        SimGem.create({ id: settings.defaultBlueGem }),\n        SimGem.create({ id: settings.defaultMetaGem }),\n      )\n\n      this.defaultGems.forEach((gem, idx) => {\n        ActionId.fromItemId(gem.id).fill().then(filledId => {\n          this.gemIconElements[idx].src = filledId.iconUrl;\n        });\n      });\n\n    }\n  }\n\n  private storeSettings() {\n    const settings = this.createBulkSettings();\n    const setStr = BulkSettings.toJsonString(settings, {enumAsInteger: true})\n    window.localStorage.setItem(this.getSettingsKey(), setStr);\n  }\n\n\n  protected createBulkSettings(): BulkSettings {\n\n    return BulkSettings.create({\n      items: this.items,\n      // TODO(Riotdog-GehennasEU): Make all of these configurable.\n      // For now, it's always constant iteration combinations mode for \"sim my bags\".\n      combinations: this.doCombos,\n      fastMode: this.fastMode,\n      autoEnchant: this.autoEnchant,\n      autoGem: this.autoGem,\n      defaultRedGem: this.defaultGems[0].id,\n      defaultYellowGem: this.defaultGems[1].id,\n      defaultBlueGem: this.defaultGems[2].id,\n      defaultMetaGem: this.defaultGems[3].id,\n      iterationsPerCombo: this.simUI.sim.getIterations(), // TODO(Riotdog-GehennasEU): Define a new UI element for the iteration setting.\n    });\n  }\n\n  protected createBulkItemsDatabase(): SimDatabase {\n    const itemsDb = SimDatabase.create();\n    for (const is of this.items) {\n      const item = this.simUI.sim.db.lookupItemSpec(is)\n      if (!item) {\n        throw new Error(`item with ID ${is.id} not found in database`);\n      }\n      itemsDb.items.push(SimItem.fromJson(UIItem.toJson(item.item), { ignoreUnknownFields: true }))\n      if (item.enchant) {\n        itemsDb.enchants.push(SimEnchant.fromJson(UIEnchant.toJson(item.enchant), { ignoreUnknownFields: true }));\n      }\n      for (const gem of item.gems) {\n        if (gem) {\n          itemsDb.gems.push(SimGem.fromJson(UIGem.toJson(gem), { ignoreUnknownFields: true }));\n        }\n      }\n    }\n    for (const gem of this.defaultGems) {\n      if (gem.id > 0) {\n        itemsDb.gems.push(gem);\n      }\n    }\n    return itemsDb;\n  }\n\n  addItems(items: Array<ItemSpec>) {\n    if (this.items.length == 0) {\n      this.items = items;\n    } else {\n      this.items = this.items.concat(items);\n    }\n    this.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n  }\n\n  setItems(items: Array<ItemSpec>) {\n    this.items = items;\n    this.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n  }\n\n  clearItems() {\n    this.items = new Array<ItemSpec>();\n    this.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n  }\n\n  getItems(): Array<ItemSpec> {\n    const result = new Array<ItemSpec>();\n    this.items.forEach((spec) => { result.push(ItemSpec.clone(spec)); });\n    return result;\n  }\n\n  setCombinations(doCombos: boolean) {\n    this.doCombos = doCombos;\n    this.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n  }\n\n  setFastMode(fastMode: boolean) {\n    this.fastMode = fastMode;\n    this.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n  }\n\n  protected async runBulkSim(onProgress: Function) {\n    this.pendingResults.setPending();\n\n    try {\n      await this.simUI.sim.runBulkSim(this.createBulkSettings(), this.createBulkItemsDatabase(), onProgress);\n    } catch (e) {\n      this.simUI.handleCrash(e);\n    }\n  }\n\n  protected buildTabContent() {\n    const itemsBlock = new ContentBlock(this.column1, 'bulk-items', {\n      header: { title: 'Items' }\n    });\n\n    itemsBlock.bodyElement.classList.add('gear-picker-root');\n\n    const noticeWorkInProgress = document.createElement('div');\n    noticeWorkInProgress.classList.add('bulk-items-text-line');\n    itemsBlock.bodyElement.appendChild(noticeWorkInProgress);\n    noticeWorkInProgress.innerHTML = '<i>Notice: This is under very early but active development and experimental. You may also need to update your WoW AddOn if you want to import your bags.</i>'\n\n    const itemTextIntro = document.createElement('div');\n    itemTextIntro.classList.add('bulk-items-text-line');\n    itemsBlock.bodyElement.appendChild(itemTextIntro);\n\n    const itemList = document.createElement('div');\n\n    itemList.classList.add('tab-panel-col', 'bulk-gear-combo');\n    itemsBlock.bodyElement.appendChild(itemList);\n\n    this.itemsChangedEmitter.on(() => {\n      itemList.innerHTML = '';\n      if (this.items.length > 0) {\n        itemTextIntro.textContent = 'The following items will be simmed together with your equipped gear.';\n        for (let i = 0; i < this.items.length; ++i) {\n          const spec = this.items[i];\n          const item = this.simUI.sim.db.lookupItemSpec(spec);\n          const bulkItemPicker = new BulkItemPicker(itemList, this.simUI, this, item!, i);\n        }\n      }\n    });\n\n    this.clearItems();\n\n    let resultsBlock = new ContentBlock(this.column1, 'bulk-results', {\n      header: {\n        title: 'Results',\n        extraCssClasses: ['bulk-results-header'],\n      },\n    });\n\n    resultsBlock.rootElem.hidden = true;\n    resultsBlock.bodyElement.classList.add('gear-picker-root', 'tab-panel-col');\n\n    this.simUI.sim.bulkSimStartEmitter.on(() => {\n      resultsBlock.rootElem.hidden = true;\n    });\n\n    this.simUI.sim.bulkSimResultEmitter.on((_, bulkSimResult) => {\n      resultsBlock.rootElem.hidden = bulkSimResult.results.length == 0;\n      resultsBlock.bodyElement.innerHTML = '';\n\n      for (const r of bulkSimResult.results) {\n        const resultBlock = new ContentBlock(resultsBlock.bodyElement, 'bulk-result', { header: { title: '' }, bodyClasses: ['bulk-results-body'] });\n        new BulkSimResultRenderer(resultBlock, this.simUI, r, bulkSimResult.equippedGearResult!);\n      }\n    });\n\n    const settingsBlock = new ContentBlock(this.rightPanel, 'bulk-settings', {\n      header: { title: 'Setup' }\n    });\n\n    const bulkSimButton = document.createElement('button');\n    bulkSimButton.classList.add('btn', 'btn-primary', 'w-100', 'bulk-settings-button');\n    bulkSimButton.textContent = 'Simulate Batch';\n    bulkSimButton.addEventListener('click', () => {\n\n      this.pendingDiv.style.display = \"flex\";\n      this.leftPanel.classList.add(\"blurred\");\n      this.rightPanel.classList.add(\"blurred\");\n\n      const previousContents = bulkSimButton.innerHTML;\n      bulkSimButton.disabled = true;\n      bulkSimButton.classList.add(\".disabled\");\n      bulkSimButton.innerHTML = `<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Running`;\n\n\n      let simStart = new Date().getTime();\n      let lastTotal = 0;\n      let rounds = 0;\n      let currentRound = 0;\n      let combinations = 0;\n\n      this.runBulkSim((progressMetrics: ProgressMetrics) => {\n        console.log(progressMetrics);\n\n        const msSinceStart = new Date().getTime() - simStart;\n        const iterPerSecond = progressMetrics.completedIterations / (msSinceStart / 1000);\n\n        if (combinations == 0) {\n          combinations = progressMetrics.totalSims;\n        }\n        if (this.fastMode) {\n          if (rounds == 0 && progressMetrics.totalSims > 0) {\n            rounds = Math.ceil(Math.log(progressMetrics.totalSims / 20) / Math.log(2)) + 1;\n            currentRound = 1;\n          }\n          if (progressMetrics.totalSims < lastTotal) {\n            currentRound += 1;\n            simStart = new Date().getTime();\n          }\n        }\n\n        this.setSimProgress(progressMetrics, iterPerSecond, currentRound, rounds, combinations);\n        lastTotal = progressMetrics.totalSims;\n\n        if (progressMetrics.finalBulkResult != null) {\n          // reset state\n          this.pendingDiv.style.display = \"none\";\n          this.leftPanel.classList.remove(\"blurred\");\n          this.rightPanel.classList.remove(\"blurred\");\n\n          this.pendingResults.hideAll();\n          bulkSimButton.disabled = false;\n          bulkSimButton.classList.remove(\".disabled\");\n          bulkSimButton.innerHTML = previousContents;\n        }\n      });\n    });\n\n    settingsBlock.bodyElement.appendChild(bulkSimButton);\n\n    const importButton = document.createElement('button');\n    importButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n    importButton.innerHTML = '<i class=\"fa fa-download\"></i> Import From Bags';\n    importButton.addEventListener('click', () => new BulkGearJsonImporter(this.simUI.rootElem, this.simUI, this));\n    settingsBlock.bodyElement.appendChild(importButton);\n\n    const importFavsButton = document.createElement('button');\n    importFavsButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n    importFavsButton.innerHTML = '<i class=\"fa fa-download\"></i> Import Favorites';\n    importFavsButton.addEventListener('click', () => {\n      const filters = this.simUI.player.sim.getFilters();\n      const items = filters.favoriteItems.map((itemID) => {\n        return ItemSpec.create({ id: itemID });\n      });\n      this.addItems(items);\n    });\n    settingsBlock.bodyElement.appendChild(importFavsButton);\n\n    const searchButton = document.createElement('button');\n    let searchText = document.createElement('input');\n    searchText.type = \"text\";\n    searchText.placeholder = \"search...\";\n    searchText.style.display = \"none\";\n\n    const searchResults = document.createElement('ul');\n    searchResults.classList.add(\"batch-search-results\");\n\n    let allItems = Array<UIItem>();\n\n    searchText.addEventListener(\"keyup\", ev => {\n      if (ev.key == \"Enter\") {\n        let toAdd = Array<ItemSpec>();\n        searchResults.childNodes.forEach((node) => {\n          const strID = (node as HTMLElement).getAttribute('data-item-id');\n          if (strID != null) {\n            toAdd.push(ItemSpec.create({ id: Number.parseInt(strID) }));\n          }\n        });\n        this.addItems(toAdd);\n      }\n    });\n\n    searchText.addEventListener(\"input\", (e) => {\n      const searchString = searchText.value;\n      searchResults.innerHTML = \"\";\n      if (searchString.length == 0) {\n        return;\n      }\n      var pieces = searchString.split(' ');\n\n      let displayCount = 0;\n      allItems.every((item) => {\n        let matched = true;\n        const lcName = item.name.toLowerCase();\n        const lcSetName = item.setName.toLowerCase();\n\n        pieces.forEach((piece) => {\n          var lcPiece = piece.toLowerCase();\n          if (!lcName.includes(lcPiece) && !lcSetName.includes(lcPiece)) {\n            matched = false;\n            return false;\n          }\n          return true;\n        })\n\n        if (matched) {\n          let itemElement = document.createElement('li');\n          itemElement.innerHTML = `<span>${item.name}</span>`;\n          itemElement.setAttribute(\"data-item-id\", item.id.toString());\n          itemElement.addEventListener(\"click\", (ev) => {\n            this.addItems(Array<ItemSpec>(ItemSpec.create({ id: item.id })));\n          })\n          if (item.heroic) {\n            let htxt = document.createElement(\"span\");\n            htxt.style.color = \"green\";\n            htxt.innerText = \"[H]\";\n            itemElement.appendChild(htxt);\n          }\n          if (item.factionRestriction == UIItem_FactionRestriction.HORDE_ONLY) {\n            let ftxt = document.createElement(\"span\");\n            ftxt.style.color = \"red\";\n            ftxt.innerText = \"(H)\";\n            itemElement.appendChild(ftxt);\n          }\n          if (item.factionRestriction == UIItem_FactionRestriction.ALLIANCE_ONLY) {\n            let ftxt = document.createElement(\"span\");\n            ftxt.style.color = \"blue\";\n            ftxt.innerText = \"(A)\";\n            itemElement.appendChild(ftxt);\n          }\n          searchResults.append(itemElement);\n          displayCount++;\n        }\n\n        return displayCount < 10;\n      });\n    });\n\n    searchButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n    const baseSearchHTML = '<i class=\"fa fa-search\"></i> Add Item';\n    searchButton.innerHTML = baseSearchHTML;\n    searchButton.addEventListener('click', () => {\n      if (searchText.style.display == \"none\") {\n        searchButton.innerHTML = 'Close Search Results';\n        allItems = this.simUI.sim.db.getAllItems().filter((item) => {\n          return canEquipItem(item, this.simUI.player.spec, undefined);\n        })\n        searchText.style.display = \"block\";\n        searchText.focus();\n      } else {\n        searchButton.innerHTML = baseSearchHTML;\n        searchText.style.display = \"none\";\n        searchResults.innerHTML = \"\";\n      }\n    });\n    settingsBlock.bodyElement.appendChild(searchButton);\n    settingsBlock.bodyElement.appendChild(searchText);\n    settingsBlock.bodyElement.appendChild(searchResults);\n\n    const clearButton = document.createElement('button');\n    clearButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n    clearButton.textContent = 'Clear All';\n    clearButton.addEventListener('click', () => {\n      this.clearItems();\n      resultsBlock.rootElem.hidden = true;\n      resultsBlock.bodyElement.innerHTML = '';\n    });\n    settingsBlock.bodyElement.appendChild(clearButton);\n\n    // Default Gem Options\n    const defaultGemDiv = document.createElement(\"div\");\n    if (this.autoGem) {\n      defaultGemDiv.style.display = \"flex\";\n    } else {\n      defaultGemDiv.style.display = \"none\";\n    }\n\n    defaultGemDiv.classList.add(\"default-gem-container\");\n    const gemLabel = document.createElement(\"label\");\n    gemLabel.innerText = \"Defaults for Auto Gem\";\n    defaultGemDiv.appendChild(gemLabel);\n\n    const gemSocketsDiv = document.createElement(\"div\");\n    gemSocketsDiv.classList.add(\"sockets-container\");\n\n    Array<GemColor>(GemColor.GemColorRed, GemColor.GemColorYellow, GemColor.GemColorBlue, GemColor.GemColorMeta).forEach((socketColor, socketIndex) => {\n      let gemFragment = document.createElement('fragment');\n      gemFragment.innerHTML = `\n          <div class=\"gem-socket-container\">\n            <img class=\"gem-icon\" />\n            <img class=\"socket-icon\" />\n          </div>\n        `;\n\n      const gemContainer = gemFragment.children[0] as HTMLElement;\n      this.gemIconElements.push(gemContainer.querySelector('.gem-icon') as HTMLImageElement);\n      const socketIconElem = gemContainer.querySelector('.socket-icon') as HTMLImageElement;\n      socketIconElem.src = getEmptyGemSocketIconUrl(socketColor);\n\n      let selector: GemSelectorModal;\n\n      let handleChoose = (itemData: ItemData<UIGem>) => {\n        this.defaultGems[socketIndex] = itemData.item;\n        this.storeSettings();\n        ActionId.fromItemId(itemData.id).fill().then(filledId => {\n          this.gemIconElements[socketIndex].src = filledId.iconUrl;\n        });\n        selector.close();\n      };\n\n      let openGemSelector = (color: GemColor, socketIndex: number) => {\n        return (event: Event) => {\n          if (selector == null) {\n            selector = new GemSelectorModal(this.simUI.rootElem, this.simUI, socketColor, handleChoose);\n          }\n          selector.show();\n        }\n      }\n\n      this.gemIconElements[socketIndex].addEventListener(\"click\", openGemSelector(socketColor, socketIndex));\n      gemContainer.addEventListener(\"click\", openGemSelector(socketColor, socketIndex));\n      gemSocketsDiv.appendChild(gemContainer);\n    });\n    defaultGemDiv.appendChild(gemSocketsDiv);\n\n    new BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n      label: \"Fast Mode\",\n      labelTooltip: \"Fast mode reduces accuracy but will run faster.\",\n      changedEvent: (obj: BulkTab) => this.itemsChangedEmitter,\n      getValue: (obj) => this.fastMode,\n      setValue: (id: EventID, obj: BulkTab, value: boolean) => { obj.fastMode = value }\n    });\n    new BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n      label: \"Combinations\",\n      labelTooltip: \"When checked bulk simulator will create all possible combinations of the items. When disabled trinkets and rings will still run all combinations becausee they have two slots to fill each.\",\n      changedEvent: (obj: BulkTab) => this.itemsChangedEmitter,\n      getValue: (obj) => this.doCombos,\n      setValue: (id: EventID, obj: BulkTab, value: boolean) => { obj.doCombos = value }\n    });\n    new BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n      label: \"Auto Enchant\",\n      labelTooltip: \"When checked bulk simulator apply the current enchant for a slot to each replacement item it can.\",\n      changedEvent: (obj: BulkTab) => this.itemsChangedEmitter,\n      getValue: (obj) => this.autoEnchant,\n      setValue: (id: EventID, obj: BulkTab, value: boolean) => {\n        obj.autoEnchant = value\n        if (value) {\n          defaultGemDiv.style.display = \"flex\";\n        } else {\n          defaultGemDiv.style.display = \"none\";\n        }\n      }\n    });\n    new BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n      label: \"Auto Gem\",\n      labelTooltip: \"When checked bulk simulator will fill any un-filled gem sockets with default gems.\",\n      changedEvent: (obj: BulkTab) => this.itemsChangedEmitter,\n      getValue: (obj) => this.autoGem,\n      setValue: (id: EventID, obj: BulkTab, value: boolean) => {\n        obj.autoGem = value\n        if (value) {\n          defaultGemDiv.style.display = \"flex\";\n        } else {\n          defaultGemDiv.style.display = \"none\";\n        }\n      }\n    });\n\n    settingsBlock.bodyElement.appendChild(defaultGemDiv);\n  }\n\n  private setSimProgress(progress: ProgressMetrics, iterPerSecond: number, currentRound: number, rounds: number, combinations: number) {\n    const secondsRemain = ((progress.totalIterations - progress.completedIterations) / iterPerSecond).toFixed();\n\n    let roundsText = \"\";\n    if (rounds > 0) {\n      roundsText = `${currentRound} / ${rounds} refining rounds`;\n    }\n\n    this.pendingResults.setContent(`\n      <div class=\"results-sim\">\n        <div class=\"\">${combinations} total combinations.</div>\n        <div class=\"\">${roundsText}</div>\n        <div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n        <div class=\"\">\n          ${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n        </div>\n        <div class=\"\">\n          ${secondsRemain} seconds remaining.\n        </div>\n      </div>\n    `);\n  }\n}\n\n\nclass GemSelectorModal extends BaseModal {\n  private readonly simUI: IndividualSimUI<Spec>;\n\n  private readonly contentElem: HTMLElement;\n  private ilist: ItemList<UIGem> | null;\n  private socketColor: GemColor;\n  private onSelect: (itemData: ItemData<UIGem>) => void;\n\n  constructor(parent: HTMLElement, simUI: IndividualSimUI<Spec>, socketColor: GemColor, onSelect: (itemData: ItemData<UIGem>) => void) {\n    super(parent, 'selector-modal');\n\n    this.simUI = simUI;\n    this.onSelect = onSelect;\n    this.socketColor = socketColor;\n    this.ilist = null;\n\n    window.scrollTo({ top: 0 });\n\n    this.header!.insertAdjacentHTML('afterbegin', `<span>Choose Default Gem</span>`);\n    this.body.innerHTML = `<div class=\"tab-content selector-modal-tab-content\"></div>`\n    this.contentElem = this.rootElem.querySelector('.selector-modal-tab-content') as HTMLElement;\n  }\n\n  show() {\n    // construct item list the first time its opened. \n    // This makes startup faster and also means we are sure to have item database loaded.\n    if (this.ilist == null) {\n      this.ilist = new ItemList<UIGem>(\n        this.body,\n        this.simUI,\n        {\n          selectedTab: SelectorModalTabs.Gem1,\n          slot: ItemSlot.ItemSlotHead,\n          equippedItem: null,\n          eligibleItems: new Array<UIItem>(),\n          eligibleEnchants: new Array<UIEnchant>(),\n          gearData: {\n            equipItem: (eventID: EventID, equippedItem: EquippedItem | null) => { },\n            getEquippedItem: () => null,\n            changeEvent: new TypedEvent(), // FIXME\n          },\n        },\n        this.simUI.player,\n        \"Gem1\",\n        this.simUI.player.getGems(this.socketColor).map((gem: UIGem) => {\n          return {\n            item: gem,\n            id: gem.id,\n            actionId: ActionId.fromItemId(gem.id),\n            name: gem.name,\n            quality: gem.quality,\n            phase: gem.phase,\n            heroic: false,\n            baseEP: 0,\n            ignoreEPFilter: true,\n            onEquip: (eventID, gem: UIGem) => {\n            },\n          };\n        }),\n        gem => {\n          return this.simUI.player.computeGemEP(gem);\n        },\n        () => { return null },\n        this.socketColor,\n        () => { },\n        this.onSelect\n      )\n\n      // let invokeUpdate = () => {this.ilist?.updateSelected()}\n      let applyFilter = () => { this.ilist?.applyFilters() }\n      // Add event handlers\n      // this.itemsChangedEmitter.on(invokeUpdate);\n\n      // this.addOnDisposeCallback(() => gearData.changeEvent.off(invokeUpdate));\n\n      this.simUI.sim.phaseChangeEmitter.on(applyFilter);\n      this.simUI.sim.filtersChangeEmitter.on(applyFilter);\n      // gearData.changeEvent.on(applyFilter);\n    }\n\n    this.open();\n  }\n}","import { IndividualSimUI } from \"../../individual_sim_ui\";\nimport { Player } from \"../../player\";\nimport { EventID, TypedEvent } from \"../../typed_event\";\n\nimport { EquipmentSpec, Spec, UnitStats } from \"../../proto/common\";\nimport { SavedGearSet } from \"../../proto/ui\";\nimport { Stats } from \"../../proto_utils/stats\";\n\nimport { GearPicker } from \"../gear_picker\";\nimport { SavedDataManager } from \"../saved_data_manager\";\nimport { SimTab } from \"../sim_tab\";\n\nexport class GearTab extends SimTab {\n  protected simUI: IndividualSimUI<Spec>;\n\n  readonly leftPanel: HTMLElement;\n  readonly rightPanel: HTMLElement;\n\n  constructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n    super(parentElem, simUI, {identifier: 'gear-tab', title: 'Gear'});\n    this.simUI = simUI;\n\n    this.leftPanel = document.createElement('div');\n    this.leftPanel.classList.add('gear-tab-left', 'tab-panel-left');\n\n    this.rightPanel = document.createElement('div');\n    this.rightPanel.classList.add('gear-tab-right', 'tab-panel-right');\n\n    this.contentContainer.appendChild(this.leftPanel);\n    this.contentContainer.appendChild(this.rightPanel);\n\n    this.buildTabContent();\n  }\n\n  protected buildTabContent() {\n    this.buildGearPickers();\n\n    this.buildSavedGearsetPicker();\n  }\n\n  private buildGearPickers() {\n    new GearPicker(this.leftPanel, this.simUI, this.simUI.player);\n  }\n\n  private buildSavedGearsetPicker() {\n    const savedGearManager = new SavedDataManager<Player<any>, SavedGearSet>(this.rightPanel, this.simUI, this.simUI.player, {\n      header: {title: \"Gear Sets\"},\n      label: 'Gear Set',\n      storageKey: this.simUI.getSavedGearStorageKey(),\n      getData: (player: Player<any>) => {\n        return SavedGearSet.create({\n          gear: player.getGear().asSpec(),\n          bonusStatsStats: player.getBonusStats().toProto(),\n        });\n      },\n      setData: (eventID: EventID, player: Player<any>, newSavedGear: SavedGearSet) => {\n        TypedEvent.freezeAllAndDo(() => {\n          player.setGear(eventID, this.simUI.sim.db.lookupEquipmentSpec(newSavedGear.gear || EquipmentSpec.create()));\n          if (newSavedGear.bonusStats && newSavedGear.bonusStats.some(s => s != 0)) {\n            player.setBonusStats(eventID, new Stats(newSavedGear.bonusStats));\n          } else {\n            player.setBonusStats(eventID, Stats.fromProto(newSavedGear.bonusStatsStats || UnitStats.create()));\n          }\n        });\n      },\n      changeEmitters: [this.simUI.player.changeEmitter],\n      equals: (a: SavedGearSet, b: SavedGearSet) => SavedGearSet.equals(a, b),\n      toJson: (a: SavedGearSet) => SavedGearSet.toJson(a),\n      fromJson: (obj: any) => SavedGearSet.fromJson(obj),\n    });\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedGearManager.loadUserData();\n\t\t\tthis.simUI.individualConfig.presets.gear.forEach(presetGear => {\n\t\t\t\tsavedGearManager.addSavedData({\n\t\t\t\t\tname: presetGear.name,\n\t\t\t\t\ttooltip: presetGear.tooltip,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: SavedGearSet.create({\n\t\t\t\t\t\t// Convert to gear and back so order is always the same.\n\t\t\t\t\t\tgear: this.simUI.sim.db.lookupEquipmentSpec(presetGear.gear).asSpec(),\n\t\t\t\t\t\tbonusStatsStats: new Stats().toProto(),\n\t\t\t\t\t}),\n\t\t\t\t\tenableWhen: presetGear.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n  }\n}\n","import { Tooltip } from 'bootstrap';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { swap } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface ListPickerConfig<ModObject, ItemType> extends InputConfig<ModObject, Array<ItemType>> {\n\ttitle?: string,\n\ttitleTooltip?: string,\n\titemLabel: string,\n\tnewItem: () => ItemType,\n\tcopyItem: (oldItem: ItemType) => ItemType,\n\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<ModObject, ItemType>, index: number, config: ListItemPickerConfig<ModObject, ItemType>) => Input<ModObject, ItemType>,\n\tinlineMenuBar?: boolean,\n\thideUi?: boolean,\n}\n\nexport interface ListItemPickerConfig<ModObject, ItemType> extends InputConfig<ModObject, ItemType> {\n}\n\ninterface ItemPickerPair<ItemType> {\n\telem: HTMLElement,\n\tpicker: Input<any, ItemType>,\n}\n\nexport class ListPicker<ModObject, ItemType> extends Input<ModObject, Array<ItemType>> {\n\treadonly config: ListPickerConfig<ModObject, ItemType>;\n\tprivate readonly itemsDiv: HTMLElement;\n\n\tprivate itemPickerPairs: Array<ItemPickerPair<ItemType>>;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: ListPickerConfig<ModObject, ItemType>) {\n\t\tsuper(parent, 'list-picker-root', modObject, config);\n\t\tthis.config = config;\n\t\tthis.itemPickerPairs = [];\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t${config.title ? `\n\t\t\t\t<label\n\t\t\t\t\tclass=\"list-picker-title form-label\"\n\t\t\t\t\t${this.config.titleTooltip ? 'data-bs-toggle=\"tooltip\"' : ''}\n\t\t\t\t\t${this.config.titleTooltip ? `data-bs-title=\"${this.config.titleTooltip}\"` : ''}\n\t\t\t\t>${config.title}</label>` : ''\n\t\t\t}\n\t\t\t<div class=\"list-picker-items\"></div>\n\t\t\t<button class=\"list-picker-new-button btn btn-primary\">New ${config.itemLabel}</button>\n\t\t`;\n\n\t\tif (this.config.hideUi) {\n\t\t\tthis.rootElem.classList.add('hide-ui');\n\t\t}\n\n\t\tif (this.config.titleTooltip)\n\t\t\tTooltip.getOrCreateInstance(this.rootElem.querySelector('.list-picker-title') as HTMLElement);\n\n\t\tthis.itemsDiv = this.rootElem.getElementsByClassName('list-picker-items')[0] as HTMLElement;\n\n\t\tconst newItemButton = this.rootElem.getElementsByClassName('list-picker-new-button')[0] as HTMLElement;\n\t\tnewItemButton.addEventListener('click', event => {\n\t\t\tconst newItem = this.config.newItem();\n\t\t\tconst newList = this.config.getValue(this.modObject).concat([newItem]);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): Array<ItemType> {\n\t\treturn this.itemPickerPairs.map(pair => pair.picker.getInputValue());\n\t}\n\n\tsetInputValue(newValue: Array<ItemType>): void {\n\t\t// Add/remove pickers to make the lengths match.\n\t\tif (newValue.length < this.itemPickerPairs.length) {\n\t\t\tthis.itemPickerPairs.slice(newValue.length).forEach(ipp => ipp.elem.remove());\n\t\t\tthis.itemPickerPairs = this.itemPickerPairs.slice(0, newValue.length);\n\t\t} else if (newValue.length > this.itemPickerPairs.length) {\n\t\t\tconst numToAdd = newValue.length - this.itemPickerPairs.length;\n\t\t\tfor (let i = 0; i < numToAdd; i++) {\n\t\t\t\tthis.addNewPicker();\n\t\t\t}\n\t\t}\n\n\t\t// Set all the values.\n\t\tnewValue.forEach((val, i) => this.itemPickerPairs[i].picker.setInputValue(val))\n\t}\n\n\tprivate addNewPicker() {\n\t\tconst index = this.itemPickerPairs.length;\n\t\tconst itemContainer = document.createElement('div');\n\t\titemContainer.classList.add('list-picker-item-container');\n\t\tif (this.config.inlineMenuBar) {\n\t\t\titemContainer.classList.add('inline');\n\t\t}\n\n\t\tconst itemHTML = '<div class=\"list-picker-item\"></div>';\n\t\titemContainer.innerHTML = `\n\t\t\t${this.config.inlineMenuBar ? itemHTML : ''}\n\t\t\t<div class=\"list-picker-item-header\">\n\t\t\t\t${this.config.itemLabel && !this.config.inlineMenuBar ? `<h6 class=\"list-picker-item-title\">${this.config.itemLabel} ${this.itemPickerPairs.length + 1}</h6>` : ''}\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"list-picker-item-action list-picker-item-up\" role=\"button\" data-bs-toggle=\"tooltip\" data-bs-title=\"Move Up\">\n\t\t\t\t\t<i class=\"fa fa-angle-up fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"list-picker-item-action list-picker-item-down\" role=\"button\" data-bs-toggle=\"tooltip\" data-bs-title=\"Move Down\">\n\t\t\t\t\t<i class=\"fa fa-angle-down fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"list-picker-item-action list-picker-item-copy\" role=\"button\" data-bs-toggle=\"tooltip\" data-bs-title=\"Copy to New ${this.config.itemLabel}\">\n\t\t\t\t\t<i class=\"fa fa-copy fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"list-picker-item-action list-picker-item-delete link-danger\" role=\"button\" data-bs-toggle=\"tooltip\" data-bs-title=\"Delete ${this.config.itemLabel}\">\n\t\t\t\t\t<i class=\"fa fa-times fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t${!this.config.inlineMenuBar ? itemHTML : ''}\n\t\t`;\n\n\t\tconst upButton = itemContainer.getElementsByClassName('list-picker-item-up')[0] as HTMLElement;\n\t\tconst upButtonTooltip = Tooltip.getOrCreateInstance(upButton);\n\n\t\tupButton.addEventListener('click', event => {\n\t\t\tif (index == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index - 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\tupButtonTooltip.hide();\n\t\t});\n\n\t\tconst downButton = itemContainer.getElementsByClassName('list-picker-item-down')[0] as HTMLElement;\n\t\tconst downButtonTooltip = Tooltip.getOrCreateInstance(downButton);\n\n\t\tdownButton.addEventListener('click', event => {\n\t\t\tif (index == this.itemPickerPairs.length - 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tswap(newList, index, index + 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\tdownButtonTooltip.hide();\n\t\t});\n\n\t\tconst copyButton = itemContainer.getElementsByClassName('list-picker-item-copy')[0] as HTMLElement;\n\t\tconst copyButtonTooltip = Tooltip.getOrCreateInstance(copyButton);\n\n\t\tcopyButton.addEventListener('click', event => {\n\t\t\tconst newList = this.config.getValue(this.modObject)\n\t\t\tnewList.push(this.config.copyItem(newList[index]));\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\tcopyButtonTooltip.hide();\n\t\t});\n\n\t\tconst deleteButton = itemContainer.getElementsByClassName('list-picker-item-delete')[0] as HTMLElement;\n\t\tconst deleteButtonTooltip = Tooltip.getOrCreateInstance(deleteButton);\n\n\t\tdeleteButton.addEventListener('click', event => {\n\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\tnewList.splice(index, 1);\n\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\tdeleteButtonTooltip.hide();\n\t\t});\n\n\t\tconst itemElem = itemContainer.getElementsByClassName('list-picker-item')[0] as HTMLElement;\n\t\tconst itemPicker = this.config.newItemPicker(itemElem, this, index, {\n\t\t\tchangedEvent: this.config.changedEvent,\n\t\t\tgetValue: (modObj: ModObject) => this.getSourceValue()[index],\n\t\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: ItemType) => {\n\t\t\t\tconst newList = this.getSourceValue();\n\t\t\t\tnewList[index] = newValue;\n\t\t\t\tthis.config.setValue(eventID, modObj, newList);\n\t\t\t},\n\t\t});\n\t\tthis.itemsDiv.appendChild(itemContainer);\n\n\t\tthis.itemPickerPairs.push({ elem: itemContainer, picker: itemPicker });\n\t}\n}\n","import {\n\tInputType,\n\tMobType,\n\tSpellSchool,\n\tStat,\n\tTarget as TargetProto,\n\tTargetInput,\n\tTarget,\n } from '../proto/common.js';\nimport { Encounter } from '../encounter.js';\nimport { Raid } from '../raid.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { ListItemPickerConfig, ListPicker } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { isHealingSpec, isTankSpec } from '../proto_utils/utils.js';\nimport { statNames } from '../proto_utils/names.js';\n\nimport { Component } from './component.js';\n\nimport * as Mechanics from '../constants/mechanics.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { SimUI } from '../sim_ui.js';\nimport { Input } from './input.js';\nimport { BaseModal } from './base_modal.js';\n\nexport interface EncounterPickerConfig {\n\tshowExecuteProportion: boolean,\n}\n\nexport class EncounterPicker extends Component {\n\tconstructor(parent: HTMLElement, modEncounter: Encounter, config: EncounterPickerConfig, simUI: SimUI) {\n\t\tsuper(parent, 'encounter-picker-root');\n\n\t\taddEncounterFieldPickers(this.rootElem, modEncounter, config.showExecuteProportion);\n\n\t\t// Need to wait so that the encounter and target presets will be loaded.\n\t\tmodEncounter.sim.waitForInit().then(() => {\n\t\t\tconst presetTargets = modEncounter.sim.db.getAllPresetTargets();\n\n\t\t\tnew EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t\textraCssClasses: ['damage-metrics', 'npc-picker'],\n\t\t\t\tlabel: 'NPC',\n\t\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\t\tvalues: [\n\t\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t};\n\t\t\t\t})),\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => presetTargets.findIndex(pe => equalTargetsIgnoreInputs(encounter.primaryTarget, pe.target)),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\tif (newValue != -1) {\n\t\t\t\t\t\tencounter.applyPresetTarget(eventID, presetTargets[newValue], 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t//new EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Target Level',\n\t\t\t//\tvalues: [\n\t\t\t//\t\t{ name: '83', value: 83 },\n\t\t\t//\t\t{ name: '82', value: 82 },\n\t\t\t//\t\t{ name: '81', value: 81 },\n\t\t\t//\t\t{ name: '80', value: 80 },\n\t\t\t//\t],\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getLevel(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setLevel(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t//new EnumPicker(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Mob Type',\n\t\t\t//\tvalues: mobTypeEnumValues,\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMobType(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setMobType(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t// Leaving this commented in case we want it later. But it takes up a lot of\n\t\t\t// screen space and none of these fields get changed much.\n\t\t\t//if (config.simpleTargetStats) {\n\t\t\t//\tconfig.simpleTargetStats.forEach(stat => {\n\t\t\t//\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t//\t\t\tlabel: statNames[stat],\n\t\t\t//\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getStats().getStat(stat),\n\t\t\t//\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\t\t\tencounter.primaryTarget.setStats(eventID, encounter.primaryTarget.getStats().withStat(stat, newValue));\n\t\t\t//\t\t\t},\n\t\t\t//\t\t});\n\t\t\t//\t});\n\t\t\t//}\n\n\t\t\tif (simUI.isIndividualSim() && isHealingSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, simUI.sim.raid, {\n\t\t\t\t\tlabel: 'Num Allies',\n\t\t\t\t\tlabelTooltip: 'Number of allied players in the raid.',\n\t\t\t\t\tchangedEvent: (raid: Raid) => raid.targetDummiesChangeEmitter,\n\t\t\t\t\tgetValue: (raid: Raid) => raid.getTargetDummies(),\n\t\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\n\t\t\t\t\t\traid.setTargetDummies(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (simUI.isIndividualSim() && isTankSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t\t\tlabel: 'Min Base Damage',\n\t\t\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.minBaseDamage,\n\t\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\t\tencounter.primaryTarget.minBaseDamage = newValue;\n\t\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Transfer Target Inputs from target Id if they dont match (possible when custom AI is selected)\n\t\t\tlet targetIndex = presetTargets.findIndex(pe => modEncounter.primaryTarget.id == pe.target?.id);\n\t\t\tlet targetInputs = presetTargets[targetIndex]?.target?.targetInputs || [];\n\n\t\t\tif (targetInputs.length != modEncounter.primaryTarget.targetInputs.length\n\t\t\t\t|| modEncounter.primaryTarget.targetInputs.some((ti, i) => ti.label != targetInputs[i].label)) {\n\t\t\t\tmodEncounter.primaryTarget.targetInputs = targetInputs;\n\t\t\t\tmodEncounter.targetsChangeEmitter.emit(TypedEvent.nextEventID());\n\t\t\t}\n\n\t\t\tmakeTargetInputsPicker(this.rootElem, modEncounter, 0);\n\n\t\t\tconst advancedButton = document.createElement('button');\n\t\t\tadvancedButton.classList.add('advanced-button', 'btn', 'btn-primary');\n\t\t\tadvancedButton.textContent = 'Advanced';\n\t\t\tadvancedButton.addEventListener('click', () => new AdvancedEncounterModal(simUI.rootElem, simUI, modEncounter));\n\t\t\tthis.rootElem.appendChild(advancedButton);\n\t\t});\n\t}\n}\n\nclass AdvancedEncounterModal extends BaseModal {\n\tprivate readonly encounter: Encounter;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, encounter: Encounter) {\n\t\tsuper(parent, 'advanced-encounter-picker-modal');\n\n\t\tthis.encounter = encounter;\n\n\t\tthis.addHeader();\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"encounter-header\"></div>\n\t\t\t<div class=\"encounter-targets\"></div>\n\t\t`;\n\n\t\tconst header = this.rootElem.getElementsByClassName('encounter-header')[0] as HTMLElement;\n\t\tconst targetsElem = this.rootElem.getElementsByClassName('encounter-targets')[0] as HTMLElement;\n\n\t\taddEncounterFieldPickers(header, this.encounter, true);\n\t\tif (!simUI.isIndividualSim()) {\n\t\t\tnew BooleanPicker<Encounter>(header, encounter, {\n\t\t\t\tlabel: 'Use Health',\n\t\t\t\tlabelTooltip: 'Uses a damage limit in place of a duration limit. Damage limit is equal to sum of all targets health.',\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => encounter.getUseHealth(),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: boolean) => {\n\t\t\t\t\tencounter.setUseHealth(eventID, newValue);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tnew ListPicker<Encounter, TargetProto>(targetsElem, this.encounter, {\n\t\t\textraCssClasses: ['targets-picker', 'mb-0'],\n\t\t\titemLabel: 'Target',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.targets,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<TargetProto>) => {\n\t\t\t\tencounter.targets = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tnewItem: () => Encounter.defaultTargetProto(),\n\t\t\tcopyItem: (oldItem: TargetProto) => TargetProto.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Encounter, TargetProto>, index: number, config: ListItemPickerConfig<Encounter, TargetProto>) => new TargetPicker(parent, encounter, index, config),\n\t\t});\n\t}\n\n\tprivate addHeader() {\n\t\tconst presetEncounters = this.encounter.sim.db.getAllPresetEncounters();\n\n\t\tnew EnumPicker<Encounter>(this.header as HTMLElement, this.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\textraCssClasses: ['encounter-picker', 'mb-0', 'pe-2'],\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetEncounters.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => presetEncounters.findIndex(pe => encounter.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPreset(eventID, presetEncounters[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass TargetPicker extends Input<Encounter, TargetProto> {\n\tprivate readonly encounter: Encounter;\n\tprivate readonly targetIndex: number;\n\n\tprivate readonly aiPicker: Input<null, number>;\n\tprivate readonly levelPicker: Input<null, number>;\n\tprivate readonly mobTypePicker: Input<null, number>;\n\tprivate readonly tankIndexPicker: Input<null, number>;\n\tprivate readonly statPickers: Array<Input<null, number>>;\n\tprivate readonly swingSpeedPicker: Input<null, number>;\n\tprivate readonly minBaseDamagePicker: Input<null, number>;\n\tprivate readonly dualWieldPicker: Input<null, boolean>;\n\tprivate readonly dwMissPenaltyPicker: Input<null, boolean>;\n\tprivate readonly parryHastePicker: Input<null, boolean>;\n\tprivate readonly spellSchoolPicker: Input<null, number>;\n\tprivate readonly suppressDodgePicker: Input<null, boolean>;\n\tprivate readonly tightDamageRangePicker: Input<null, boolean>;\n\tprivate readonly targetInputPickers: ListPicker<Encounter, TargetInput>;\n\n\tprivate getTarget(): TargetProto {\n\t\treturn this.encounter.targets[this.targetIndex] || Target.create();\n\t}\n\n\tconstructor(parent: HTMLElement, encounter: Encounter, targetIndex: number, config: ListItemPickerConfig<Encounter, TargetProto>) {\n\t\tsuper(parent, 'target-picker-root', encounter, config)\n\t\tthis.encounter = encounter;\n\t\tthis.targetIndex = targetIndex;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"target-picker-section target-picker-section1\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section2\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section3 threat-metrics\"></div>\n\t\t`;\n\n\t\tconst section1 = this.rootElem.getElementsByClassName('target-picker-section1')[0] as HTMLElement;\n\t\tconst section2 = this.rootElem.getElementsByClassName('target-picker-section2')[0] as HTMLElement;\n\t\tconst section3 = this.rootElem.getElementsByClassName('target-picker-section3')[0] as HTMLElement;\n\n\t\tconst presetTargets = encounter.sim.db.getAllPresetTargets();\n\t\tnew EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['npc-picker'],\n\t\t\tlabel: 'NPC',\n\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Custom', value: -1 },\n\t\t\t].concat(presetTargets.map((pe, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => presetTargets.findIndex(pe => equalTargetsIgnoreInputs(this.getTarget(), pe.target)),\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPresetTarget(eventID, presetTargets[newValue], this.targetIndex);\n\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.aiPicker = new EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['ai-picker'],\n\t\t\tlabel: 'AI',\n\t\t\tlabelTooltip: `\n\t\t\t\t<p>Determines the target\\'s ability rotation.</p>\n\t\t\t\t<p>Note that most rotations are not yet implemented.</p>\n\t\t\t`,\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: 0 },\n\t\t\t].concat(presetTargets.map(pe => {\n\t\t\t\treturn {\n\t\t\t\t\tname: pe.path,\n\t\t\t\t\tvalue: pe.target!.id,\n\t\t\t\t};\n\t\t\t})),\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().id,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tconst target = this.getTarget();\n\t\t\t\ttarget.id = newValue;\n\n\t\t\t\t// Transfer Target Inputs from the AI of the selected target\n\t\t\t\ttarget.targetInputs = (presetTargets.find(pe => target.id == pe.target?.id)?.target?.targetInputs || []).map(ti => TargetInput.clone(ti));\n\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.levelPicker = new EnumPicker<null>(section1, null, {\n\t\t\tlabel: 'Level',\n\t\t\tvalues: [\n\t\t\t\t{ name: '83', value: 83 },\n\t\t\t\t{ name: '82', value: 82 },\n\t\t\t\t{ name: '81', value: 81 },\n\t\t\t\t{ name: '80', value: 80 },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().level,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().level = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.mobTypePicker = new EnumPicker(section1, null, {\n\t\t\tlabel: 'Mob Type',\n\t\t\tvalues: mobTypeEnumValues,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().mobType,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().mobType = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.tankIndexPicker = new EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['threat-metrics'],\n\t\t\tlabel: 'Tanked By',\n\t\t\tlabelTooltip: 'Determines which player in the raid this enemy will attack. If no player is assigned to the specified tank slot, this enemy will not attack.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: -1 },\n\t\t\t\t{ name: 'Main Tank', value: 0 },\n\t\t\t\t{ name: 'Tank 2', value: 1 },\n\t\t\t\t{ name: 'Tank 3', value: 2 },\n\t\t\t\t{ name: 'Tank 4', value: 3 },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().tankIndex,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().tankIndex = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.targetInputPickers = makeTargetInputsPicker(section1, encounter, this.targetIndex);\n\n\t\tthis.statPickers = ALL_TARGET_STATS.map(statData => {\n\t\t\tconst stat = statData.stat;\n\t\t\treturn new NumberPicker(section2, null, {\n\t\t\t\tinline: true,\n\t\t\t\textraCssClasses: statData.extraCssClasses,\n\t\t\t\tlabel: statNames[stat],\n\t\t\t\tlabelTooltip: statData.tooltip,\n\t\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTarget().stats[stat],\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\t\tthis.getTarget().stats[stat] = newValue;\n\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tthis.swingSpeedPicker = new NumberPicker(section3, null, {\n\t\t\tlabel: 'Swing Speed',\n\t\t\tlabelTooltip: 'Time in seconds between auto attacks. Set to 0 to disable auto attacks.',\n\t\t\tfloat: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().swingSpeed,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().swingSpeed = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.minBaseDamagePicker = new NumberPicker(section3, null, {\n\t\t\tlabel: 'Min Base Damage',\n\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().minBaseDamage,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().minBaseDamage = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.dualWieldPicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Dual Wield',\n\t\t\tlabelTooltip: 'Uses 2 separate weapons to attack.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().dualWield,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().dualWield = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.dwMissPenaltyPicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'DW Miss Penalty',\n\t\t\tlabelTooltip: 'Enables the Dual Wield Miss Penalty (+19% chance to miss) if dual wielding. Bosses in Hyjal/BT/SWP usually have this disabled to stop tanks from avoidance stacking.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().dualWieldPenalty,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().dualWieldPenalty = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tenableWhen: () => this.getTarget().dualWield,\n\t\t});\n\t\tthis.parryHastePicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Parry Haste',\n\t\t\tlabelTooltip: 'Whether this enemy will gain parry haste when parrying attacks.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().parryHaste,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().parryHaste = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.spellSchoolPicker = new EnumPicker<null>(section3, null, {\n\t\t\tlabel: 'Spell School',\n\t\t\tlabelTooltip: 'Type of damage caused by auto attacks. This is usually Physical, but some enemies have elemental attacks.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Physical', value: SpellSchool.SpellSchoolPhysical },\n\t\t\t\t{ name: 'Arcane', value: SpellSchool.SpellSchoolArcane },\n\t\t\t\t{ name: 'Fire', value: SpellSchool.SpellSchoolFire },\n\t\t\t\t{ name: 'Frost', value: SpellSchool.SpellSchoolFrost },\n\t\t\t\t{ name: 'Holy', value: SpellSchool.SpellSchoolHoly },\n\t\t\t\t{ name: 'Nature', value: SpellSchool.SpellSchoolNature },\n\t\t\t\t{ name: 'Shadow', value: SpellSchool.SpellSchoolShadow },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().spellSchool,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().spellSchool = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.suppressDodgePicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Chill of the Throne',\n\t\t\tlabelTooltip: 'Reduces the chance for this enemy\\'s attacks to be dodged by 20%. Active in Icecrown Citadel.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().suppressDodge,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().suppressDodge = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tenableWhen: () => this.getTarget().level == Mechanics.BOSS_LEVEL,\n\t\t});\n\t\tthis.tightDamageRangePicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Tightened Damage Range',\n\t\t\tlabelTooltip: 'Reduces the damage range of this enemy\\'s auto-attacks. Observed behavior for Patchwerk.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().tightEnemyDamage,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().tightEnemyDamage = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tenableWhen: () => this.getTarget().level == Mechanics.BOSS_LEVEL,\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement|null {\n\t\treturn null;\n\t}\n\tgetInputValue(): TargetProto {\n\t\treturn TargetProto.create({\n\t\t\tid: this.aiPicker.getInputValue(),\n\t\t\tlevel: this.levelPicker.getInputValue(),\n\t\t\tmobType: this.mobTypePicker.getInputValue(),\n\t\t\ttankIndex: this.tankIndexPicker.getInputValue(),\n\t\t\tswingSpeed: this.swingSpeedPicker.getInputValue(),\n\t\t\tminBaseDamage: this.minBaseDamagePicker.getInputValue(),\n\t\t\tsuppressDodge: this.suppressDodgePicker.getInputValue(),\n\t\t\tdualWield: this.dualWieldPicker.getInputValue(),\n\t\t\tdualWieldPenalty: this.dwMissPenaltyPicker.getInputValue(),\n\t\t\tparryHaste: this.parryHastePicker.getInputValue(),\n\t\t\tspellSchool: this.spellSchoolPicker.getInputValue(),\n\t\t\ttightEnemyDamage: this.tightDamageRangePicker.getInputValue(),\n\t\t\tstats: this.statPickers\n\t\t\t\t.map(picker => picker.getInputValue())\n\t\t\t\t.map((statValue, i) => new Stats().withStat(ALL_TARGET_STATS[i].stat, statValue))\n\t\t\t\t.reduce((totalStats, curStats) => totalStats.add(curStats)).asArray(),\n\t\t\ttargetInputs: this.targetInputPickers.getInputValue(),\n\t\t});\n\t}\n\tsetInputValue(newValue: TargetProto) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.aiPicker.setInputValue(newValue.id);\n\t\tthis.levelPicker.setInputValue(newValue.level);\n\t\tthis.mobTypePicker.setInputValue(newValue.mobType);\n\t\tthis.tankIndexPicker.setInputValue(newValue.tankIndex);\n\t\tthis.swingSpeedPicker.setInputValue(newValue.swingSpeed);\n\t\tthis.minBaseDamagePicker.setInputValue(newValue.minBaseDamage);\n\t\tthis.suppressDodgePicker.setInputValue(newValue.suppressDodge);\n\t\tthis.dualWieldPicker.setInputValue(newValue.dualWield);\n\t\tthis.dwMissPenaltyPicker.setInputValue(newValue.dualWieldPenalty);\n\t\tthis.parryHastePicker.setInputValue(newValue.parryHaste);\n\t\tthis.spellSchoolPicker.setInputValue(newValue.spellSchool);\n\t\tthis.tightDamageRangePicker.setInputValue(newValue.tightEnemyDamage);\n\t\tALL_TARGET_STATS.forEach((statData, i) => this.statPickers[i].setInputValue(newValue.stats[statData.stat]));\n\t\tthis.targetInputPickers.setInputValue(newValue.targetInputs);\n\t}\n}\n\nclass TargetInputPicker extends Input<Encounter, TargetInput> {\n\tprivate readonly encounter: Encounter;\n\tprivate readonly targetIndex: number;\n\tprivate readonly targetInputIndex: number;\n\n\tprivate boolPicker: Input<null, boolean>|null;\n\tprivate numberPicker: Input<null, number>|null;\n\n\tprivate getTargetInput(): TargetInput {\n\t\treturn this.encounter.targets[this.targetIndex].targetInputs[this.targetInputIndex] || TargetInput.create();\n\t}\n\n\tconstructor(parent: HTMLElement, encounter: Encounter, targetIndex: number, targetInputIndex: number, config: ListItemPickerConfig<Encounter, TargetInput>) {\n\t\tsuper(parent, 'target-input-picker-root', encounter, config)\n\t\tthis.encounter = encounter;\n\t\tthis.targetIndex = targetIndex;\n\t\tthis.targetInputIndex = targetInputIndex;\n\n\t\tthis.boolPicker = null;\n\t\tthis.numberPicker = null;\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement|null {\n\t\treturn this.rootElem;\n\t}\n\tgetInputValue(): TargetInput {\n\t\treturn TargetInput.create({\n\t\t\tboolValue: this.boolPicker ? this.boolPicker.getInputValue() : undefined,\n\t\t\tnumberValue: this.numberPicker ? this.numberPicker.getInputValue() : undefined,\n\t\t});\n\t}\n\tsetInputValue(newValue: TargetInput) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tif (newValue.inputType == InputType.Number && !this.numberPicker) {\n\t\t\tif (this.boolPicker) {\n\t\t\t\tthis.boolPicker.rootElem.remove();\n\t\t\t\tthis.boolPicker = null;\n\t\t\t}\n\t\t\tthis.numberPicker = new NumberPicker(this.rootElem, null, {\n\t\t\t\tlabel: newValue.label,\n\t\t\t\tlabelTooltip: newValue.tooltip,\n\t\t\t\tchangedEvent: () => this.encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTargetInput().numberValue,\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\t\tthis.getTargetInput().numberValue = newValue;\n\t\t\t\t\tthis.encounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (newValue.inputType == InputType.Bool && !this.boolPicker) {\n\t\t\tif (this.numberPicker) {\n\t\t\t\tthis.numberPicker.rootElem.remove();\n\t\t\t\tthis.numberPicker = null;\n\t\t\t}\n\t\t\tthis.boolPicker = new BooleanPicker(this.rootElem, null, {\n\t\t\t\tlabel: newValue.label,\n\t\t\t\tlabelTooltip: newValue.tooltip,\n\t\t\t\tchangedEvent: () => this.encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTargetInput().boolValue,\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\t\tthis.getTargetInput().boolValue = newValue;\n\t\t\t\t\tthis.encounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction addEncounterFieldPickers(rootElem: HTMLElement, encounter: Encounter, showExecuteProportion: boolean) {\n\tlet durationGroup = Input.newGroupContainer();\n\trootElem.appendChild(durationGroup);\n\n\tnew NumberPicker(durationGroup, encounter, {\n\t\tlabel: 'Duration',\n\t\tlabelTooltip: 'The fight length for each sim iteration, in seconds.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDuration(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDuration(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\tnew NumberPicker(durationGroup, encounter, {\n\t\tlabel: 'Duration +/-',\n\t\tlabelTooltip: 'Adds a random amount of time, in seconds, between [value, -1 * value] to each sim iteration. For example, setting Duration to 180 and Duration +/- to 10 will result in random durations between 170s and 190s.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDurationVariation(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDurationVariation(eventID, newValue);\n\t\t},\n\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t});\n\n\tif (showExecuteProportion) {\n\t\tlet executeGroup = Input.newGroupContainer();\n\t\texecuteGroup.classList.add('execute-group');\n\t\trootElem.appendChild(executeGroup);\n\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 20 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 20% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion20() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion20(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 25 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 25% HP) for the purpose of effects like Warlock\\'s Drain Soul.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion25() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion25(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 35 (%)',\n\t\t\tlabelTooltip: 'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 35% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion35() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion35(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: (obj) => { return !encounter.getUseHealth() },\n\t\t});\n\t}\n}\n\nfunction makeTargetInputsPicker(parent: HTMLElement, encounter: Encounter, targetIndex: number): ListPicker<Encounter, TargetInput> {\n\treturn new ListPicker<Encounter, TargetInput>(parent, encounter, {\n\t\titemLabel: 'Target Input',\n\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.targets[targetIndex].targetInputs,\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<TargetInput>) => {\n\t\t\tencounter.targets[targetIndex].targetInputs = newValue;\n\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t},\n\t\tnewItem: () => TargetInput.create(),\n\t\tcopyItem: (oldItem: TargetInput) => TargetInput.clone(oldItem),\n\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Encounter, TargetInput>, index: number, config: ListItemPickerConfig<Encounter, TargetInput>) => new TargetInputPicker(parent, encounter, targetIndex, index, config),\n\t\thideUi: true,\n\t});\n}\n\nfunction equalTargetsIgnoreInputs(target1: TargetProto|undefined, target2: TargetProto|undefined): boolean {\n\tif ((target1 == null) != (target2 == null)) {\n\t\treturn false;\n\t}\n\tif (target1 == null) {\n\t\treturn true;\n\t}\n\tconst modTarget2 = TargetProto.clone(target2!);\n\tmodTarget2.targetInputs = target1.targetInputs;\n\treturn TargetProto.equals(target1, modTarget2);\n}\n\nconst ALL_TARGET_STATS: Array<{ stat: Stat, tooltip: string, extraCssClasses: Array<string> }> = [\n\t{ stat: Stat.StatHealth, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArmor, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArcaneResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFireResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFrostResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatNatureResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatShadowResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatAttackPower, tooltip: '', extraCssClasses: ['threat-metrics'] },\n\t{ stat: Stat.StatBlockValue, tooltip: '', extraCssClasses: ['threat-metrics'] },\n];\n\nconst mobTypeEnumValues = [\n\t{ name: 'None', value: MobType.MobTypeUnknown },\n\t{ name: 'Beast', value: MobType.MobTypeBeast },\n\t{ name: 'Demon', value: MobType.MobTypeDemon },\n\t{ name: 'Dragonkin', value: MobType.MobTypeDragonkin },\n\t{ name: 'Elemental', value: MobType.MobTypeElemental },\n\t{ name: 'Giant', value: MobType.MobTypeGiant },\n\t{ name: 'Humanoid', value: MobType.MobTypeHumanoid },\n\t{ name: 'Mechanical', value: MobType.MobTypeMechanical },\n\t{ name: 'Undead', value: MobType.MobTypeUndead },\n];\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\n// Data for creating an icon-based input component.\n// \n// E.g. one of these for arcane brilliance, another for kings, etc.\n// ModObject is the object being modified (Sim, Player, or Target).\n// ValueType is either number or boolean.\nexport interface IconPickerConfig<ModObject, ValueType> extends InputConfig<ModObject, ValueType> {\n\tid: ActionId;\n\n\t// The number of possible 'states' this icon can have. Most inputs will use 2\n\t// for a bi-state icon (on or off). 0 indicates an unlimited number of states.\n\tstates: number;\n\n\t// Only used if states >= 3.\n\timprovedId?: ActionId;\n\n\t// Only used if states >= 4.\n\timprovedId2?: ActionId;\n};\n\n// Icon-based UI for picking buffs / consumes / etc\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconPicker<ModObject, ValueType> extends Input<ModObject, ValueType> {\n\tactive: Boolean;\n\n\tprivate readonly config: IconPickerConfig<ModObject, ValueType>;\n\n\tprivate readonly rootAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor2: HTMLAnchorElement;\n\tprivate readonly counterElem: HTMLElement;\n\n\tprivate currentValue: number;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconPickerConfig<ModObject, ValueType>) {\n\t\tsuper(parent, 'icon-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('icon-picker');\n\t\tthis.active = false;\n\t\tthis.config = config;\n\t\tthis.currentValue = 0;\n\n\t\tthis.rootAnchor = document.createElement('a');\n\t\tthis.rootAnchor.classList.add('icon-picker-button');\n\t\tthis.rootAnchor.target = '_blank';\n\t\tthis.rootElem.prepend(this.rootAnchor);\n\n\t\tconst useImprovedIcons = Boolean(this.config.improvedId);\n\t\tif (useImprovedIcons) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons');\n\t\t}\n\t\tif (this.config.improvedId2) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons2');\n\t\t}\n\t\tif (!useImprovedIcons && this.config.states > 2) {\n\t\t\tthis.rootAnchor.classList.add('use-counter');\n\t\t}\n\n\t\tconst levelContainer = document.createElement('div');\n\t\tlevelContainer.classList.add('icon-input-level-container');\n\t\tthis.rootAnchor.appendChild(levelContainer);\n\t\tlevelContainer.innerHTML = `\n      <a class=\"icon-picker-button icon-input-improved icon-input-improved1\"></a>\n      <a class=\"icon-picker-button icon-input-improved icon-input-improved2\"></a>\n      <span class=\"icon-picker-label ${this.config.states > 2 ? '' : 'hide'}\"></span>\n    `;\n\n\t\tthis.improvedAnchor = this.rootAnchor.getElementsByClassName('icon-input-improved1')[0] as HTMLAnchorElement;\n\t\tthis.improvedAnchor2 = this.rootAnchor.getElementsByClassName('icon-input-improved2')[0] as HTMLAnchorElement;\n\t\tthis.counterElem = this.rootAnchor.getElementsByClassName('icon-picker-label')[0] as HTMLElement;\n\n\t\tthis.config.id.fillAndSet(this.rootAnchor, true, true);\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tthis.config.improvedId.fillAndSet(this.improvedAnchor, true, true);\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tthis.config.improvedId2.fillAndSet(this.improvedAnchor2, true, true);\n\t\t}\n\n\t\tthis.init();\n\n\t\tthis.rootAnchor.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\n\t\t\tif (rightClick) {\n\t\t\t\tthis.handleRightClick(event)\n\t\t\t} else {\n\t\t\t\tthis.handleLeftClick(event)\n\t\t\t}\n\t\t});\n\n\t\tthis.rootAnchor.addEventListener('touchstart', event => {\n\t\t\tthis.handleLeftClick(event)\n\t\t});\n\t\tthis.rootAnchor.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t}\n\n\thandleLeftClick = (event: UIEvent) => {\n\t\tif (this.config.states == 0 || (this.currentValue + 1) < this.config.states) {\n\t\t\tthis.currentValue++;\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t} else if (this.currentValue > 0) { // roll over\n\t\t\tthis.currentValue = 0;\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t}\n\t\tevent.preventDefault();\n\t}\n\n\thandleRightClick = (event: UIEvent) => {\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.currentValue--;\n\t\t} else { // roll over\n\t\t\tif (this.config.states === 0) {\n\t\t\t\tthis.currentValue = 1\n\t\t\t} else {\n\t\t\t\tthis.currentValue = this.config.states - 1\n\t\t\t}\n\t\t}\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootAnchor;\n\t}\n\n\tgetInputValue(): ValueType {\n\t\tif (this.config.states == 2) {\n\t\t\treturn Boolean(this.currentValue) as unknown as ValueType;\n\t\t} else {\n\t\t\treturn this.currentValue as unknown as ValueType;\n\t\t}\n\t}\n\n\t// Returns the ActionId of the currently selected value, or null if none selected.\n\tgetActionId(): ActionId | null {\n\n\t\t// Go directly to source because during event propogation \n\t\t//  the internal `this.currentValue` may not yet have been updated.\n\t\tconst v = Number(this.config.getValue(this.modObject));\n\t\tif (v == 0) {\n\t\t\treturn null;\n\t\t} else if (v == 1) {\n\t\t\treturn this.config.id;\n\t\t} else if (v == 2 && this.config.improvedId) {\n\t\t\treturn this.config.improvedId;\n\t\t} else if (v == 3 && this.config.improvedId2) {\n\t\t\treturn this.config.improvedId2;\n\t\t} else {\n\t\t\treturn this.config.id;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: ValueType) {\n\t\tthis.currentValue = Number(newValue);\n\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.active = true;\n\t\t\tthis.rootAnchor.classList.add('active');\n\t\t\tthis.counterElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.active = false;\n\t\t\tthis.rootAnchor.classList.remove('active');\n\t\t\tthis.counterElem.classList.remove('active');\n\t\t}\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tif (this.currentValue > 1) {\n\t\t\t\tthis.improvedAnchor.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor.classList.remove('active');\n\t\t\t}\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tif (this.currentValue > 2) {\n\t\t\t\tthis.improvedAnchor2.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor2.classList.remove('active');\n\t\t\t}\n\t\t}\n\n\t\tif (!this.config.improvedId && (this.config.states > 3 || this.config.states == 0)) {\n\t\t\tthis.counterElem.textContent = String(this.currentValue);\n\t\t}\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SimUI } from '../sim_ui.js';\nimport { isRightClick } from '../utils.js';\n\nimport { Component } from './component.js';\nimport { IconPicker, IconPickerConfig } from './icon_picker.js';\nimport { Input, InputConfig } from './input.js';\n\nexport interface MultiIconPickerItemConfig<ModObject> extends IconPickerConfig<ModObject, any> {\n}\n\nexport interface MultiIconPickerConfig<ModObject> {\n\tinputs: Array<MultiIconPickerItemConfig<ModObject>>,\n\tnumColumns: number,\n\tlabel?: string,\n\tcategoryId?: ActionId,\n}\n\n// Icon-based UI for a dropdown with multiple icon pickers.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class MultiIconPicker<ModObject> extends Component {\n\tprivate readonly config: MultiIconPickerConfig<ModObject>;\n\n\tprivate currentValue: ActionId | null;\n\n\tprivate readonly dropdownRootElem: HTMLElement;\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly dropdownMenu: HTMLElement;\n\n\tprivate readonly pickers: Array<IconPicker<ModObject, any>>;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: MultiIconPickerConfig<ModObject>, simUI: SimUI) {\n\t\tsuper(parent, 'multi-icon-picker-root');\n\t\tthis.rootElem.classList.add('icon-picker');\n\t\tthis.config = config;\n\t\tthis.currentValue = null;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"dropend\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"icon-picker-button\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tdata-bs-toggle=\"dropdown\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t></a>\n\t\t\t\t<ul class=\"dropdown-menu\"></ul>\n\t\t\t</div>\n\t\t\t<label class=\"multi-icon-picker-label form-label\"></label>\n    `;\n\t\tthis.dropdownRootElem = this.rootElem.querySelector('.dropdown') as HTMLElement;\n\n\t\tconst labelElem = this.rootElem.querySelector('.multi-icon-picker-label') as HTMLElement;\n\t\tif (config.label) {\n\t\t\tlabelElem.textContent = config.label;\n\t\t} else {\n\t\t\tlabelElem.remove();\n\t\t}\n\n\t\tthis.buttonElem = this.rootElem.querySelector('.icon-picker-button') as HTMLAnchorElement;\n\t\tthis.dropdownMenu = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('hide.bs.dropdown', event => {\n\t\t\tif (event.hasOwnProperty('clickEvent'))\n\t\t\t\tevent.preventDefault();\t\n\t\t})\n\n\t\tthis.buttonElem.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tthis.buttonElem.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\n\t\t\tif (rightClick) {\n\t\t\t\tthis.clearPicker();\n\t\t\t}\n\t\t});\n\n\t\tthis.buildBlankOption();\n\n\t\tthis.pickers = config.inputs.map((pickerConfig, i) => {\n\t\t\tconst optionContainer = document.createElement('li');\n\t\t\toptionContainer.classList.add('icon-picker-option', 'dropdown-option');\n\t\t\tthis.dropdownMenu.appendChild(optionContainer);\n\n\t\t\treturn new IconPicker(optionContainer, modObj, pickerConfig);\n\t\t});\n\t\tsimUI.sim.waitForInit().then(() => this.updateButtonImage());\n\t\tsimUI.changeEmitter.on(() => this.updateButtonImage());\n\t}\n\n\tprivate buildBlankOption() {\n\t\tconst listItem = document.createElement('li');\n\t\tthis.dropdownMenu.appendChild(listItem);\n\n\t\tconst option = document.createElement('a');\n\t\toption.classList.add('icon-dropdown-option', 'dropdown-option');\n\t\tlistItem.appendChild(option);\n\n\t\toption.addEventListener('click', () => this.clearPicker());\n\t}\n\n\tprivate clearPicker() {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.pickers.forEach((picker) => {\n\t\t\t\tpicker.setInputValue(null)\n\t\t\t\tpicker.inputChanged(TypedEvent.nextEventID());\n\t\t\t});\n\t\t\tthis.updateButtonImage();\n\t\t})\n\t}\n\n\tprivate updateButtonImage() {\n\t\tthis.currentValue = this.getMaxValue();\n\n\t\tif (this.currentValue) {\n\t\t\tthis.buttonElem.classList.add('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.currentValue.fillAndSet(this.buttonElem, false, true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.buttonElem.classList.remove('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.buttonElem.style.backgroundImage = '';\n\t\t\t}\n\t\t\tthis.buttonElem.removeAttribute(\"href\");\n\t\t}\n\t}\n\n\tprivate getMaxValue(): ActionId | null {\n\t\treturn this.pickers.map(picker => picker.getActionId()).filter(id => id != null)[0] || null;\n\t}\n}\n","import { Spec } from '../../proto/common.js';\nimport { CustomRotation, CustomSpell } from '../../proto/common.js';\nimport { EventID } from '../../typed_event.js';\nimport { Player } from '../../player.js';\nimport { IconEnumPicker, IconEnumValueConfig } from '../icon_enum_picker.js';\nimport { ListItemPickerConfig, ListPicker } from '../list_picker.js';\nimport { NumberPicker } from '../number_picker.js';\n\nimport { Component } from '../component.js';\nimport { Input } from '../input.js';\nimport { SimUI } from 'ui/core/sim_ui.js';\n\nexport interface CustomRotationPickerConfig<SpecType extends Spec, T> {\n\tgetValue: (player: Player<SpecType>) => CustomRotation,\n\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\textraCssClasses?: string[];\n\tshowCastsPerMinute?: boolean,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\n\nexport class CustomRotationPicker<SpecType extends Spec, T> extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI, modPlayer: Player<SpecType>, config: CustomRotationPickerConfig<SpecType, T>) {\n\t\tsuper(parent, 'custom-rotation-picker-root');\n\n\t\tif (config.extraCssClasses)\n\t\t\tthis.rootElem.classList.add(...config.extraCssClasses);\n\n\t\tnew ListPicker<Player<SpecType>, CustomSpell>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: ['custom-spells-picker'],\n\t\t\ttitle: 'Spell Priority',\n\t\t\ttitleTooltip: 'Spells at the top of the list are prioritized first. Safely ignores untalented options.',\n\t\t\titemLabel: 'Spell',\n\t\t\tchangedEvent: (player: Player<SpecType>) => player.changeEmitter,\n\t\t\tgetValue: (player: Player<SpecType>) => config.getValue(player).spells,\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: Array<CustomSpell>) => {\n\t\t\t\tconfig.setValue(eventID, player, CustomRotation.create({\n\t\t\t\t\tspells: newValue,\n\t\t\t\t}));\n\t\t\t},\n\t\t\tnewItem: () => CustomSpell.create(),\n\t\t\tcopyItem: (oldItem: CustomSpell) => CustomSpell.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Player<SpecType>, CustomSpell>, index: number, itemConfig: ListItemPickerConfig<Player<SpecType>, CustomSpell>) => new CustomSpellPicker(parent, modPlayer, index, itemConfig, listPicker, config),\n\t\t\tinlineMenuBar: true,\n\t\t\tshowWhen: config.showWhen,\n\t\t});\n\t}\n}\n\nclass CustomSpellPicker<SpecType extends Spec, T> extends Input<Player<SpecType>, CustomSpell> {\n\tprivate readonly player: Player<SpecType>;\n\tprivate readonly listPicker: ListPicker<Player<SpecType>, CustomSpell>;\n\tprivate readonly spellIndex: number;\n\n\tprivate readonly spellPicker: Input<null, number>;\n\tprivate readonly cpmPicker: Input<null, number>|null;\n\n\tgetSpell(): CustomSpell {\n\t\treturn this.listPicker.config.getValue(this.player)[this.spellIndex] || CustomSpell.create();\n\t}\n\n\tconstructor(parent: HTMLElement, player: Player<SpecType>, spellIndex: number, config: ListItemPickerConfig<Player<SpecType>, CustomSpell>, listPicker: ListPicker<Player<SpecType>, CustomSpell>, crConfig: CustomRotationPickerConfig<SpecType, T>) {\n\t\tsuper(parent, 'custom-spell-picker-root', player, config);\n\t\tthis.player = player;\n\t\tthis.listPicker = listPicker;\n\t\tthis.spellIndex = spellIndex;\n\n\t\tthis.spellPicker = new IconEnumPicker<null, number>(this.rootElem, null, {\n\t\t\tnumColumns: crConfig.numColumns,\n\t\t\tvalues: crConfig.values.map(value => {\n\t\t\t\tif (value.showWhen) {\n\t\t\t\t\tconst oldShowWhen = value.showWhen;\n\t\t\t\t\tvalue.showWhen = (() => oldShowWhen(player)) as unknown as ((player: Player<SpecType>) => boolean);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}) as unknown as Array<IconEnumValueConfig<null, number>>,\n\t\t\tequals: (a: number, b: number) => a == b,\n\t\t\tzeroValue: 0,\n\t\t\tchangedEvent: () => player.changeEmitter,\n\t\t\tgetValue: () => this.getSpell().spell,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tconst spell = this.getSpell();\n\t\t\t\tspell.spell = newValue;\n\t\t\t\tthis.setSpell(eventID, spell);\n\t\t\t},\n\t\t});\n\n\t\tthis.cpmPicker = null;\n\t\tif (crConfig.showCastsPerMinute) {\n\t\t\tthis.cpmPicker = new NumberPicker<null>(this.rootElem, null, {\n\t\t\t\tlabel: 'CPM',\n\t\t\t\tlabelTooltip: 'Desired Casts-Per-Minute for this spell.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: () => player.changeEmitter,\n\t\t\t\tgetValue: () => this.getSpell().castsPerMinute,\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\t\tconst spell = this.getSpell();\n\t\t\t\t\tspell.castsPerMinute = newValue;\n\t\t\t\t\tthis.setSpell(eventID, spell);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): CustomSpell {\n\t\treturn CustomSpell.create({\n\t\t\tspell: this.spellPicker.getInputValue(),\n\t\t\tcastsPerMinute: this.cpmPicker?.getInputValue(),\n\t\t});\n\t}\n\n\tsetInputValue(newValue: CustomSpell) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.spellPicker.setInputValue(newValue.spell);\n\t\tif (this.cpmPicker) {\n\t\t\tthis.cpmPicker.setInputValue(newValue.castsPerMinute);\n\t\t}\n\t}\n\n\tprivate setSpell(eventID: EventID, spell: CustomSpell) {\n\t\tconst customSpells = this.listPicker.config.getValue(this.player);\n\t\tcustomSpells[this.spellIndex] = CustomSpell.clone(spell);\n\t\tthis.listPicker.config.setValue(eventID, this.player, customSpells);\n\t}\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number list picker.\n */\nexport interface NumberListPickerConfig<ModObject> extends InputConfig<ModObject, Array<number>> {\n\tplaceholder?: string,\n}\n\n// UI element for picking an arbitrary number list field.\nexport class NumberListPicker<ModObject> extends Input<ModObject, Array<number>> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberListPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-list-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.placeholder = config.placeholder || '';\n\t\tthis.inputElem.classList.add('number-list-picker-input', 'form-control');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): Array<number> {\n\t\tconst str = this.inputElem.value;\n\t\tif (!str) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn str.split(',').map(parseFloat).filter(val => !isNaN(val));\n\t}\n\n\tsetInputValue(newValue: Array<number>) {\n\t\tif (arrayEquals(this.getInputValue(), newValue)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputElem.value = newValue.map(v => String(v)).join(',');\n\t}\n}\n","import { Component } from '../component.js';\nimport { IconEnumPicker, IconEnumValueConfig } from '../icon_enum_picker.js';\nimport { Input, InputConfig } from '../input.js';\nimport { NumberListPicker } from '../number_list_picker.js';\nimport { Player } from '../../player.js';\nimport { EventID, TypedEvent } from '../../typed_event.js';\nimport { ActionID as ActionIdProto, ItemSlot } from '../../proto/common.js';\nimport { Cooldowns } from '../../proto/common.js';\nimport { Cooldown } from '../../proto/common.js';\nimport { ActionId } from '../../proto_utils/action_id.js';\nimport { Class } from '../../proto/common.js';\nimport { Spec } from '../../proto/common.js';\nimport { getEnumValues } from '../../utils.js';\nimport { wait } from '../../utils.js';\nimport { Tooltip } from 'bootstrap';\nimport { NumberPicker } from '../number_picker.js';\nimport { Sim } from 'ui/core/sim.js';\n\nexport class CooldownsPicker extends Component {\n\treadonly player: Player<any>;\n\n\tprivate cooldownPickers: Array<HTMLElement>;\n\n\tconstructor(parentElem: HTMLElement, player: Player<any>) {\n\t\tsuper(parentElem, 'cooldowns-picker-root');\n\t\tthis.player = player;\n\t\tthis.cooldownPickers = [];\n\n\t\tTypedEvent.onAny([this.player.currentStatsEmitter]).on(eventID => {\n\t\t\tthis.update();\n\t\t});\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tthis.rootElem.innerHTML = '';\n\t\tconst cooldowns = this.player.getCooldowns().cooldowns;\n\n\t\tthis.cooldownPickers = [];\n\t\tfor (let i = 0; i < cooldowns.length + 1; i++) {\n\t\t\tconst cooldown = cooldowns[i];\n\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('cooldown-picker');\n\t\t\tif (i == cooldowns.length) {\n\t\t\t\trow.classList.add('add-cooldown-picker');\n\t\t\t}\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\tconst actionPicker = this.makeActionPicker(row, i);\n\n\t\t\tconst label = document.createElement('label');\n\t\t\tlabel.classList.add('cooldown-picker-label', 'form-label');\n\t\t\tif (cooldown && cooldown.id) {\n\t\t\t\tActionId.fromProto(cooldown.id).fill(this.player.getRaidIndex()).then(filledId => label.textContent = filledId.name);\n\t\t\t}\n\t\t\trow.appendChild(label);\n\n\t\t\tconst timingsPicker = this.makeTimingsPicker(row, i);\n\n\t\t\tlet deleteButtonFragment = document.createElement('fragment');\n\t\t\tdeleteButtonFragment.innerHTML = `\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"delete-cooldown link-danger\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\tdata-bs-title=\"Delete Cooldown\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"fa fa-times fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t`\n\t\t\tconst deleteButton = deleteButtonFragment.children[0] as HTMLElement;\n\t\t\tconst deleteButtonTooltip = Tooltip.getOrCreateInstance(deleteButton);\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tconst newCooldowns = this.player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns.splice(i, 1);\n\t\t\t\tthis.player.setCooldowns(TypedEvent.nextEventID(), newCooldowns);\n\t\t\t\tdeleteButtonTooltip.hide();\n\t\t\t});\n\t\t\trow.appendChild(deleteButton);\n\n\t\t\tthis.cooldownPickers.push(row);\n\t\t}\n\n\t\tthis.addTrinketDesyncPicker(ItemSlot.ItemSlotTrinket1);\n\t\tthis.addTrinketDesyncPicker(ItemSlot.ItemSlotTrinket2);\n\t}\n\n\tprivate addTrinketDesyncPicker(slot: ItemSlot) {\n\t\tconst index = slot - ItemSlot.ItemSlotTrinket1 + 1;\n\t\tconst picker = new NumberPicker(this.rootElem, this.player.sim, {\n\t\t\tlabel: `Desync Proc Trinket ${index}`,\n\t\t\tlabelTooltip: ' Put the trinket on a cooldown before pull by re-equipping it. Must be between 0 and 30 seconds.',\n\t\t\textraCssClasses: [\n\t\t\t\t'within-raid-sim-hide',\n\t\t\t],\n\t\t\tinline: true,\n\t\t\tchangedEvent: (_: Sim) => this.player.cooldownsChangeEmitter,\n\t\t\tgetValue: (_: Sim) => {\n\t\t\t\tconst cooldowns = this.player.getCooldowns();\n\t\t\t\treturn (slot == ItemSlot.ItemSlotTrinket1) ? cooldowns.desyncProcTrinket1Seconds : cooldowns.desyncProcTrinket2Seconds;\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, _: Sim, newValue: number) => {\n\t\t\t\tif (newValue >= 0) {\n\t\t\t\t\tconst newCooldowns = this.player.getCooldowns();\n\t\t\t\t\tif (slot == ItemSlot.ItemSlotTrinket1) {\n\t\t\t\t\t\tnewCooldowns.desyncProcTrinket1Seconds = newValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewCooldowns.desyncProcTrinket2Seconds = newValue\n\t\t\t\t\t}\n\t\t\t\t\tthis.player.setCooldowns(eventID, newCooldowns);\n\t\t\t\t}\n\t\t\t},\n\t\t\tenableWhen: (sim: Sim) => {\n\t\t\t\t// TODO(Riotdog-GehennasEU): Only show if the slot is non-empty and the\n\t\t\t\t// trinket has a proc effect?\n\t\t\t\treturn true;\n\t\t\t},\n\t\t});\n\n\t\tconst pickerInput = picker.rootElem.querySelector('.number-picker-input') as HTMLInputElement;\n\t\tpickerInput.type = 'number';\n\t\tpickerInput.min = \"0\";\n\n\t\tconst validator = () => {\n\t\t\tif (!pickerInput.checkValidity()) {\n\t\t\t\tpickerInput.reportValidity();\n\t\t\t}\n\t\t};\n\t\tpickerInput.addEventListener('change', validator);\n\t\tpickerInput.addEventListener('focusout', validator);\n\t}\n\n\tprivate makeActionPicker(parentElem: HTMLElement, cooldownIndex: number): IconEnumPicker<Player<any>, ActionIdProto> {\n\t\tconst availableCooldowns = this.player.getCurrentStats().cooldowns;\n\n\t\tconst actionPicker = new IconEnumPicker<Player<any>, ActionIdProto>(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-action-picker',\n\t\t\t],\n\t\t\tnumColumns: 3,\n\t\t\tvalues: ([\n\t\t\t\t{ color: '#grey', value: ActionIdProto.create() },\n\t\t\t] as Array<IconEnumValueConfig<Player<any>, ActionIdProto>>).concat(availableCooldowns.map(cooldownAction => {\n\t\t\t\treturn { actionId: ActionId.fromProto(cooldownAction), value: cooldownAction };\n\t\t\t})),\n\t\t\tequals: (a: ActionIdProto, b: ActionIdProto) => ActionIdProto.equals(a, b),\n\t\t\tzeroValue: ActionIdProto.create(),\n\t\t\tbackupIconUrl: (value: ActionIdProto) => ActionId.fromProto(value),\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getCooldowns().cooldowns[cooldownIndex]?.id || ActionIdProto.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: ActionIdProto) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\n\t\t\t\twhile (newCooldowns.cooldowns.length < cooldownIndex) {\n\t\t\t\t\tnewCooldowns.cooldowns.push(Cooldown.create());\n\t\t\t\t}\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex] = Cooldown.create({\n\t\t\t\t\tid: newValue,\n\t\t\t\t\ttimings: [],\n\t\t\t\t});\n\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n\n\tprivate makeTimingsPicker(parentElem: HTMLElement, cooldownIndex: number): NumberListPicker<Player<any>> {\n\t\tconst actionPicker = new NumberListPicker(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-timings-picker',\n\t\t\t],\n\t\t\tplaceholder: '20, 40, ...',\n\t\t\tchangedEvent: (player: Player<any>) => player.cooldownsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => {\n\t\t\t\treturn player.getCooldowns().cooldowns[cooldownIndex]?.timings || [];\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<number>) => {\n\t\t\t\tconst newCooldowns = player.getCooldowns();\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex].timings = newValue;\n\t\t\t\tplayer.setCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t\tenableWhen: (player: Player<any>) => {\n\t\t\t\tconst curCooldown = player.getCooldowns().cooldowns[cooldownIndex];\n\t\t\t\treturn curCooldown && !ActionIdProto.equals(curCooldown.id, ActionIdProto.create());\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { CustomRotation, ItemSwap, ItemSlot } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { Player } from '../player.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { SpecOptions, SpecRotation } from '../proto_utils/utils.js';\nimport { ItemSwapPickerConfig } from './item_swap_picker.js'\nimport { CustomRotationPickerConfig } from './individual_sim_ui/custom_rotation_picker.js';\nimport { IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { EnumPickerConfig, EnumValueConfig } from './enum_picker.js';\nimport { BooleanPickerConfig } from './boolean_picker.js';\nimport { NumberPickerConfig } from './number_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\n\nexport function makeMultiIconInput<ModObject>(inputs: Array<IconPickerConfig<ModObject, any>>, label: string, numColumns?: number): MultiIconPickerConfig<ModObject> {\n\treturn {\n\t\tinputs: inputs,\n\t\tnumColumns: numColumns || 1,\n\t\tlabel: label,\n\t};\n}\n\n// Extend this to add player callbacks as optional config fields.\ninterface BasePlayerConfig<SpecType extends Spec, T> {\n\tgetValue?: (player: Player<SpecType>) => T,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newVal: T) => void,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    BOOLEAN\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedBooleanPickerConfig<ModObject> extends BooleanPickerConfig<ModObject> {\n\ttype: 'boolean',\n}\n\ninterface WrappedBooleanInputConfig<SpecType extends Spec, ModObject> extends BooleanPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedBooleanInput<SpecType extends Spec, ModObject>(config: WrappedBooleanInputConfig<SpecType, ModObject>): TypedBooleanPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'boolean',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: boolean) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerBooleanInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, boolean> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeSpecOptionsBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecOptions<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationBooleanInput<SpecType extends Spec>(config: PlayerBooleanInputConfig<SpecType, SpecRotation<SpecType>>): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as boolean),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    NUMBER\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedNumberPickerConfig<ModObject> extends NumberPickerConfig<ModObject> {\n\ttype: 'number',\n}\n\ninterface WrappedNumberInputConfig<SpecType extends Spec, ModObject> extends NumberPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedNumberInput<SpecType extends Spec, ModObject>(config: WrappedNumberInputConfig<SpecType, ModObject>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'number',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\nexport interface PlayerNumberInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, number> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tpercent?: boolean,\n\tfloat?: boolean,\n\tpositive?: boolean,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\nexport function makeSpecOptionsNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecOptions<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\nexport function makeRotationNumberInput<SpecType extends Spec>(config: PlayerNumberInputConfig<SpecType, SpecRotation<SpecType>>): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    ENUM\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedEnumPickerConfig<ModObject> extends EnumPickerConfig<ModObject> {\n\ttype: 'enum',\n}\n\ninterface WrappedEnumInputConfig<SpecType extends Spec, ModObject> extends EnumPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumInput<SpecType extends Spec, ModObject>(config: WrappedEnumInputConfig<SpecType, ModObject>): TypedEnumPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'enum',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t}\n}\n\nexport interface PlayerEnumInputConfig<SpecType extends Spec, Message> {\n\tfieldName: keyof Message,\n\tlabel: string,\n\tlabelTooltip?: string,\n\tvalues: Array<EnumValueConfig>;\n\tgetValue?: (player: Player<SpecType>) => number,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: number) => void,\n\tenableWhen?: (player: Player<SpecType>) => boolean,\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>,\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeSpecOptionsEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecOptions<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeRotationEnumInput<SpecType extends Spec, T>(config: PlayerEnumInputConfig<SpecType, SpecRotation<SpecType>>): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as number),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                  ICON\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedIconPickerConfig<ModObject, T> extends IconPickerConfig<ModObject, T> {\n\ttype: 'icon',\n}\n\ninterface WrappedIconInputConfig<SpecType extends Spec, ModObject, T> extends IconPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedIconInput<SpecType extends Spec, ModObject, T>(config: WrappedIconInputConfig<SpecType, ModObject, T>): TypedIconPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'icon',\n\t\tid: config.id,\n\t\tstates: config.states,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\ninterface WrappedTypedInputConfig<Message, ModObject, T> {\n\tgetModObject: (player: Player<any>) => ModObject,\n\tgetValue: (modObj: ModObject) => Message,\n\tsetValue: (eventID: EventID, modObj: ModObject, messageVal: Message) => void,\n\tchangeEmitter: (modObj: ModObject) => TypedEvent<any>,\n\textraCssClasses?: Array<string>,\n\n\tgetFieldValue?: (modObj: ModObject) => T,\n\tsetFieldValue?: (eventID: EventID, modObj: ModObject, newValue: T) => void,\n}\n\nexport function makeBooleanIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, boolean>, id: ActionId, fieldName: keyof Message, value?: number): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeWrappedIconInput<SpecType, ModObject, boolean>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 2,\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: config.getFieldValue || ((modObj: ModObject) => value ? (config.getValue(modObj)[fieldName] as unknown as number) == value : (config.getValue(modObj)[fieldName] as unknown as boolean)),\n\t\tsetValue: config.setFieldValue || ((eventID: EventID, modObj: ModObject, newValue: boolean) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (value) {\n\t\t\t\tif (newValue) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = value;\n\t\t\t\t} else if ((newMessage[fieldName] as unknown as number) == value) {\n\t\t\t\t\t(newMessage[fieldName] as unknown as number) = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t(newMessage[fieldName] as unknown as boolean) = newValue;\n\t\t\t}\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t}),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface PlayerBooleanIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tid: ActionId,\n\tvalue?: number,\n}\nexport function makeSpecOptionsBooleanIconInput<SpecType extends Spec>(config: PlayerBooleanIconInputConfig<SpecType, SpecOptions<SpecType>, boolean>): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeBooleanIconInput<SpecType, SpecOptions<SpecType>, Player<SpecType>>({\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: (player: Player<SpecType>) => player.getSpecOptions(),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecOptions<SpecType>) => player.setSpecOptions(eventID, newVal),\n\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t\tgetFieldValue: config.getValue,\n\t\tsetFieldValue: config.setValue,\n\t}, config.id, config.fieldName, config.value);\n}\n\nfunction makeNumberIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn makeWrappedIconInput<SpecType, ModObject, number>({\n\t\tgetModObject: config.getModObject,\n\t\tid: id,\n\t\tstates: 0, // Must be assigned externally.\n\t\tchangedEvent: config.changeEmitter,\n\t\tgetValue: (modObj: ModObject) => config.getValue(modObj)[fieldName] as unknown as number,\n\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: number) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (multiplier) {\n\t\t\t\tconst sign = newValue - (newMessage[fieldName] as unknown as number)\n\t\t\t\tnewValue += (multiplier - 1) * sign\n\t\t\t}\n\t\t\tif (newValue < 0) {\n\t\t\t\tnewValue = 0\n\t\t\t}\n\t\t\t(newMessage[fieldName] as unknown as number) = newValue;\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t},\n\t});\n}\nexport function makeTristateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 3;\n\tinput.improvedId = impId;\n\treturn input;\n}\nexport function makeQuadstateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Message): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName);\n\tinput.states = 4;\n\tinput.improvedId = impId;\n\tinput.improvedId2 = impId2;\n\treturn input;\n}\nexport function makeMultistateIconInput<SpecType extends Spec, Message, ModObject>(config: WrappedTypedInputConfig<Message, ModObject, number>, id: ActionId, numStates: number, fieldName: keyof Message, multiplier?: number): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, id, fieldName, multiplier);\n\tinput.states = numStates;\n\treturn input;\n}\n\n\nexport interface TypedIconEnumPickerConfig<ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\ttype: 'iconEnum',\n}\n\ninterface WrappedEnumIconInputConfig<SpecType extends Spec, ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject,\n}\nfunction makeWrappedEnumIconInput<SpecType extends Spec, ModObject, T>(config: WrappedEnumIconInputConfig<SpecType, ModObject, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'iconEnum',\n\t\tnumColumns: config.numColumns,\n\t\tvalues: config.values.map(value => {\n\t\t\tif (value.showWhen) {\n\t\t\t\tconst showWhen = value.showWhen;\n\t\t\t\tvalue.showWhen = ((player: Player<SpecType>) => showWhen(getModObject(player))) as any;\n\t\t\t}\n\t\t\treturn value as unknown as IconEnumValueConfig<Player<SpecType>, T>;\n\t\t}),\n\t\tequals: config.equals,\n\t\tshowWhen: (player: Player<SpecType>): boolean => !config.showWhen || config.showWhen(getModObject(player)) as any,\n\t\tzeroValue: config.zeroValue,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t}\n}\n\nexport interface PlayerEnumIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\tnumColumns?: number,\n}\nexport function makeSpecOptionsEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecOptions<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tshowWhen: config.showWhen,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationEnumIconInput<SpecType extends Spec, T>(config: PlayerEnumIconInputConfig<SpecType, SpecRotation<SpecType>, T>): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, Player<SpecType>, T>({\n\t\tnumColumns: config.numColumns || 1,\n\t\tvalues: config.values,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tshowWhen: config.showWhen,\n\t\tzeroValue: 0 as unknown as T,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getRotation()[config.fieldName] as unknown as T),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newVal: T) => {\n\t\t\tconst newMessage = player.getRotation();\n\t\t\t(newMessage[config.fieldName] as unknown as T) = newVal;\n\t\t\tplayer.setRotation(eventID, newMessage);\n\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface TypedCustomRotationPickerConfig<SpecType extends Spec, T> extends CustomRotationPickerConfig<SpecType, T> {\n\ttype: 'customRotation',\n}\n\ninterface WrappedCustomRotationInputConfig<SpecType extends Spec, T> {\n\tfieldName: keyof SpecRotation<SpecType>,\n\tgetValue?: (player: Player<SpecType>) => CustomRotation,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => void,\n\n\tnumColumns: number,\n\tshowCastsPerMinute?: boolean,\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\n\tshowWhen?: (player: Player<SpecType>) => boolean,\n}\nexport function makeCustomRotationInput<SpecType extends Spec, T>(config: WrappedCustomRotationInputConfig<SpecType, T>): TypedCustomRotationPickerConfig<SpecType, T> {\n\treturn {\n\t\ttype: 'customRotation',\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => (player.getRotation()[config.fieldName] as unknown as CustomRotation) || CustomRotation.create()),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newValue: CustomRotation) => {\n\t\t\tconst rotation = player.getRotation();\n\t\t\t(rotation[config.fieldName] as unknown as CustomRotation) = newValue;\n\t\t\tplayer.setRotation(eventID, rotation);\n\t\t}),\n\t\tshowWhen: config.showWhen,\n\t\tnumColumns: config.numColumns,\n\t\tshowCastsPerMinute: config.showCastsPerMinute || false,\n\t\tvalues: config.values,\n\t}\n}\n\n\nexport interface TypedItemSwapPickerConfig<SpecType extends Spec, T> extends ItemSwapPickerConfig<SpecType, T> {\n\ttype: 'itemSwap',\n}\n\ninterface WrappedItemSwapInputConfig<SpecType extends Spec> {\n\tfieldName: keyof SpecRotation<SpecType>,\n\tvalues: Array<ItemSlot>,\n\tlabelTooltip?: string,\n\tgetValue?: (player: Player<SpecType>) => ItemSwap,\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: ItemSwap) => void,\n\tshowWhen?: (player: Player<SpecType>) => boolean\n}\n\nexport function MakeItemSwapInput<SpecType extends Spec>(config: WrappedItemSwapInputConfig<SpecType>): TypedItemSwapPickerConfig<SpecType, ItemSwap> {\n\treturn {\n\t\ttype: 'itemSwap',\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) =>  (player.getRotation()[config.fieldName] as unknown as ItemSwap) || ItemSwap.create()),\n\t\tsetValue: config.setValue || ((eventID: EventID, player: Player<SpecType>, newValue: ItemSwap) => {\n\t\t\tconst options = player.getRotation();\n\t\t\t(options[config.fieldName] as unknown as ItemSwap) = newValue;\n\t\t\tplayer.setRotation(eventID, options);\n\t\t}),\n\t\titemSlots: config.values,\n\t\tchangedEvent: (player: Player<SpecType>) => player.rotationChangeEmitter,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tshowWhen: config.showWhen,\n\t}\n}\n","import { ActionId } from '../proto_utils/action_id.js';\nimport { BattleElixir } from '../proto/common.js';\nimport { Explosive } from '../proto/common.js';\nimport { Flask } from '../proto/common.js';\nimport { Food } from '../proto/common.js';\nimport { GuardianElixir } from '../proto/common.js';\nimport { RaidBuffs } from '../proto/common.js';\nimport { PartyBuffs } from '../proto/common.js';\nimport { IndividualBuffs } from '../proto/common.js';\nimport { Conjured } from '../proto/common.js';\nimport { Consumes } from '../proto/common.js';\nimport { Debuffs } from '../proto/common.js';\n\nimport { PetFood } from '../proto/common.js';\nimport { Potions } from '../proto/common.js';\nimport { Spec } from '../proto/common.js';\nimport { TristateEffect } from '../proto/common.js';\nimport { Party } from '../party.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { IconPicker, IconPickerConfig } from './icon_picker.js';\nimport { IconEnumPicker, IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\n\nimport * as InputHelpers from './input_helpers.js';\nimport { Tooltip } from 'bootstrap';\n\n// Component Functions\n\nexport type IconInputConfig<ModObject, T> = (\n\tInputHelpers.TypedIconPickerConfig<ModObject, T> |\n\tInputHelpers.TypedIconEnumPickerConfig<ModObject, T>\n);\n\nexport const buildIconInput = (parent: HTMLElement, player: Player<Spec>, inputConfig: IconInputConfig<Player<Spec>, any>) => {\n\tif (inputConfig.type == 'icon') {\n\t\treturn new IconPicker<Player<Spec>, any>(parent, player, inputConfig);\n\t} else if (inputConfig.type == 'iconEnum') {\n\t\treturn new IconEnumPicker<Player<Spec>, any>(parent, player, inputConfig);\n\t}\n};\n\n// Raid Buffs\n\nexport const AllStatsBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48470), ActionId.fromSpellId(17051), 'giftOfTheWild'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49634), 'drumsOfTheWild'),\n], 'Stats');\n\nexport const AllStatsPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25898), 'blessingOfKings'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(49633), 'drumsOfForgottenKings'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n], 'Stats %');\n\nexport const ArmorBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48942), ActionId.fromSpellId(20140), 'devotionAura'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58753), ActionId.fromSpellId(16293), 'stoneskinTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43468), 'scrollOfProtection'),\n], 'Armor');\n\nexport const StaminaBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(48161), ActionId.fromSpellId(14767), 'powerWordFortitude'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37094), 'scrollOfStamina'),\n], 'Stamina');\n\nexport const StrengthAndAgilityBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58643), ActionId.fromSpellId(52456), 'strengthOfEarthTotem'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57623), 'hornOfWinter'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43464), 'scrollOfAgility'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(43466), 'scrollOfStrength'),\n], 'Str/Agi');\n\nexport const IntellectBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(43002), 'arcaneBrilliance'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37092), 'scrollOfIntellect'),\n], 'Int');\n\nexport const SpiritBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48073), 'divineSpirit'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(57567), ActionId.fromSpellId(54038), 'felIntelligence'),\n\tmakeBooleanRaidBuffInput(ActionId.fromItemId(37098), 'scrollOfSpirit'),\n], 'Spirit');\n\nexport const AttackPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48934), ActionId.fromSpellId(20045), 'blessingOfMight'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47436), ActionId.fromSpellId(12861), 'battleShout'),\n], 'AP');\n\nexport const AttackPowerPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53138), 'abominationsMight'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(30809), 'unleashedRage'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(19506), 'trueshotAura'),\n], 'Atk Pwr %');\n\nexport const DamagePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31869), 'sanctifiedRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(31583), 'arcaneEmpowerment'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(34460), 'ferociousInspiration'),\n], 'Dmg %');\n\nexport const DamageReductionPercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(57472), 'renewedHope'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(25899), 'blessingOfSanctuary'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(50720), 'vigilance'),\n], 'Mit %');\n\nexport const HastePercentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(53648), 'swiftRetribution'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(48396), 'moonkinAura', TristateEffect.TristateEffectImproved),\n], 'Haste %');\n\nexport const HealthBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47440), ActionId.fromSpellId(12861), 'commandingShout'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(47982), ActionId.fromSpellId(18696), 'bloodPact'),\n], 'Health');\n\nexport const MP5Buff = InputHelpers.makeMultiIconInput([\n\tmakeTristateIndividualBuffInput(ActionId.fromSpellId(48938), ActionId.fromSpellId(20245), 'blessingOfWisdom'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(58774), ActionId.fromSpellId(16206), 'manaSpringTotem'),\n], 'MP5');\n\nexport const MeleeCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(17007), ActionId.fromSpellId(34300), 'leaderOfThePack'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(29801), 'rampage'),\n], 'Melee Crit');\n\nexport const MeleeHasteBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(55610), 'icyTalons'),\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(65990), ActionId.fromSpellId(29193), 'windfuryTotem'),\n], 'Melee Haste');\n\nexport const ReplenishmentBuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(48160), 'vampiricTouch'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(31878), 'judgementsOfTheWise'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(53292), 'huntingParty'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(54118), 'improvedSoulLeech'),\n\tmakeBooleanIndividualBuffInput(ActionId.fromSpellId(44561), 'enduringWinter'),\n], 'Replen', 2);\n\nexport const SpellCritBuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateRaidBuffInput(ActionId.fromSpellId(24907), ActionId.fromSpellId(48396), 'moonkinAura'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(51470), 'elementalOath'),\n], 'Spell Crit');\n\nexport const SpellHasteBuff = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(3738), 'wrathOfAirTotem'), 'Spell Haste');\n\nexport const SpellPowerBuff = InputHelpers.makeMultiIconInput([\n\tmakeMultistateRaidBuffInput(ActionId.fromSpellId(47240), 2000, 'demonicPactSp', 20),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(57722), 'totemOfWrath'),\n\tmakeBooleanRaidBuffInput(ActionId.fromSpellId(58656), 'flametongueTotem'),\n], 'Spell Power');\n\nexport const Bloodlust = withLabel(makeBooleanRaidBuffInput(ActionId.fromSpellId(2825), 'bloodlust'), 'Lust');\n\nexport const DefensiveCooldownBuff = InputHelpers.makeMultiIconInput([\n\tmakeMultistateIndividualBuffInput(ActionId.fromSpellId(53530), 11, 'divineGuardians'),\n\tmakeMultistateIndividualBuffInput(ActionId.fromSpellId(33206), 11, 'painSuppressions'),\n], 'Defensive CDs');\n\n// Misc Buffs\nexport const RetributionAura = makeBooleanRaidBuffInput(ActionId.fromSpellId(54043), 'retributionAura');\nexport const ShadowProtection = makeBooleanRaidBuffInput(ActionId.fromSpellId(48170), 'shadowProtection');\nexport const BraidedEterniumChain = makeBooleanPartyBuffInput(ActionId.fromSpellId(31025), 'braidedEterniumChain');\nexport const ChainOfTheTwilightOwl = makeBooleanPartyBuffInput(ActionId.fromSpellId(31035), 'chainOfTheTwilightOwl');\nexport const HeroicPresence = makeBooleanPartyBuffInput(ActionId.fromSpellId(6562), 'heroicPresence');\nexport const EyeOfTheNight = makeBooleanPartyBuffInput(ActionId.fromSpellId(31033), 'eyeOfTheNight');\nexport const Thorns = makeTristateRaidBuffInput(ActionId.fromSpellId(53307), ActionId.fromSpellId(16840), 'thorns');\nexport const ManaTideTotem = makeMultistatePartyBuffInput(ActionId.fromSpellId(16190), 5, 'manaTideTotems');\nexport const Innervate = makeMultistateIndividualBuffInput(ActionId.fromSpellId(29166), 11, 'innervates');\nexport const PowerInfusion = makeMultistateIndividualBuffInput(ActionId.fromSpellId(10060), 11, 'powerInfusions');\nexport const FocusMagic = makeBooleanIndividualBuffInput(ActionId.fromSpellId(54648), 'focusMagic');\nexport const TricksOfTheTrade = makeMultistateIndividualBuffInput(ActionId.fromSpellId(57933), 20, 'tricksOfTheTrades');\nexport const UnholyFrenzy = makeMultistateIndividualBuffInput(ActionId.fromSpellId(49016), 11, 'unholyFrenzy');\nexport const RevitalizeRejuvination = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(26982), 101, 10, 'revitalizeRejuvination');\nexport const RevitalizeWildGrowth = makeMultistateMultiplierIndividualBuffInput(ActionId.fromSpellId(53251), 101, 10, 'revitalizeWildGrowth');\n\n// Debuffs\n\nexport const MajorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(47467), 'sunderArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(8647), 'exposeArmor'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(55754), 'acidSpit'),\n], 'Major ArP');\n\nexport const MinorArmorDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(770), ActionId.fromSpellId(33602), 'faerieFire'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(56631), 'sting'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53598), 'sporeCloud'),\n], 'Minor ArP');\n\nexport const AttackPowerDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(26016), 'vindication'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47437), ActionId.fromSpellId(12879), 'demoralizingShout'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(48560), ActionId.fromSpellId(16862), 'demoralizingRoar'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(50511), ActionId.fromSpellId(18180), 'curseOfWeakness'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(55487), 'demoralizingScreech'),\n], 'Atk Pwr');\n\nexport const BleedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33876), 'mangle'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(46855), 'trauma'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(57393), 'stampede'),\n], 'Bleed');\n\nexport const CritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(30706), 'totemOfWrath'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(20337), 'heartOfTheCrusader'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58410), 'masterPoisoner'),\n], 'Crit');\n\nexport const MeleeAttackSpeedDebuff = InputHelpers.makeMultiIconInput([\n\tmakeTristateDebuffInput(ActionId.fromSpellId(47502), ActionId.fromSpellId(12666), 'thunderClap'),\n\tmakeTristateDebuffInput(ActionId.fromSpellId(55095), ActionId.fromSpellId(51456), 'frostFever'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(53696), 'judgementsOfTheJust'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48485), 'infectedWounds'),\n], 'Atk Speed');\n\nexport const MeleeHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(65855), 'insectSwarm'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(3043), 'scorpidSting'),\n], 'Miss');\n\nexport const PhysicalDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(29859), 'bloodFrenzy'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(58413), 'savageCombat'),\n], 'Phys Vuln');\n\nexport const SpellCritDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(17803), 'shadowMastery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(12873), 'improvedScorch'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(28593), 'wintersChill'),\n], 'Spell Crit');\n\nexport const SpellHitDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33198), 'misery'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(33602), 'faerieFire', TristateEffect.TristateEffectImproved),\n], 'Spell Hit');\n\nexport const SpellDamageDebuff = InputHelpers.makeMultiIconInput([\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(51161), 'ebonPlaguebringer'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(48511), 'earthAndMoon'),\n\tmakeBooleanDebuffInput(ActionId.fromSpellId(47865), 'curseOfElements'),\n], 'Spell Dmg');\n\nexport const HuntersMark = withLabel(makeQuadstateDebuffInput(ActionId.fromSpellId(53338), ActionId.fromSpellId(19423), ActionId.fromItemId(42907), 'huntersMark'), 'Mark');\nexport const JudgementOfWisdom = withLabel(makeBooleanDebuffInput(ActionId.fromSpellId(53408), 'judgementOfWisdom'), 'JoW');\nexport const JudgementOfLight = makeBooleanDebuffInput(ActionId.fromSpellId(20271), 'judgementOfLight');\nexport const ShatteringThrow = makeMultistateIndividualBuffInput(ActionId.fromSpellId(64382), 20, 'shatteringThrows');\nexport const GiftOfArthas = makeBooleanDebuffInput(ActionId.fromSpellId(11374), 'giftOfArthas');\n\n// Consumes\nexport const ThermalSapper = makeBooleanConsumeInput(ActionId.fromItemId(42641), 'thermalSapper');\nexport const ExplosiveDecoy = makeBooleanConsumeInput(ActionId.fromItemId(40536), 'explosiveDecoy');\n\nexport const SpicedMammothTreats = makeBooleanConsumeInput(ActionId.fromItemId(43005), 'petFood', PetFood.PetFoodSpicedMammothTreats);\nexport const PetScrollOfAgilityV = makeBooleanConsumeInput(ActionId.fromItemId(27498), 'petScrollOfAgility', 5);\nexport const PetScrollOfStrengthV = makeBooleanConsumeInput(ActionId.fromItemId(27503), 'petScrollOfStrength', 5);\n\nfunction withLabel<ModObject, T>(config: InputHelpers.TypedIconPickerConfig<ModObject, T>, label: string): InputHelpers.TypedIconPickerConfig<ModObject, T> {\n\tconfig.label = label;\n\treturn config;\n}\n\nfunction makeBooleanRaidBuffInput(id: ActionId, fieldName: keyof RaidBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanPartyBuffInput(id: ActionId, fieldName: keyof PartyBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanIndividualBuffInput(id: ActionId, fieldName: keyof IndividualBuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanConsumeInput(id: ActionId, fieldName: keyof Consumes, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Consumes, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getConsumes(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: Consumes) => player.setConsumes(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.consumesChangeEmitter,\n\t}, id, fieldName, value);\n}\nfunction makeBooleanDebuffInput(id: ActionId, fieldName: keyof Debuffs, value?: number): InputHelpers.TypedIconPickerConfig<Player<any>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, fieldName, value);\n}\n\nfunction makeTristateRaidBuffInput(id: ActionId, impId: ActionId, fieldName: keyof RaidBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateIndividualBuffInput(id: ActionId, impId: ActionId, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeTristateDebuffInput(id: ActionId, impId: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, fieldName);\n}\nfunction makeQuadstateDebuffInput(id: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeQuadstateIconInput<any, Debuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t}, id, impId, impId2, fieldName);\n}\nfunction makeMultistateRaidBuffInput(id: ActionId, numStates: number, fieldName: keyof RaidBuffs, multiplier?: number): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, RaidBuffs, Raid>({\n\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\tgetValue: (raid: Raid) => raid.getBuffs(),\n\t\tsetValue: (eventID: EventID, raid: Raid, newVal: RaidBuffs) => raid.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (raid: Raid) => raid.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\nfunction makeMultistatePartyBuffInput(id: ActionId, numStates: number, fieldName: keyof PartyBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, PartyBuffs, Party>({\n\t\tgetModObject: (player: Player<any>) => player.getParty()!,\n\t\tgetValue: (party: Party) => party.getBuffs(),\n\t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateIndividualBuffInput(id: ActionId, numStates: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName);\n}\nfunction makeMultistateMultiplierIndividualBuffInput(id: ActionId, numStates: number, multiplier: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<any>>({\n\t\tgetModObject: (player: Player<any>) => player,\n\t\tgetValue: (player: Player<any>) => player.getBuffs(),\n\t\tsetValue: (eventID: EventID, player: Player<any>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\tchangeEmitter: (player: Player<any>) => player.buffsChangeEmitter,\n\t}, id, numStates, fieldName, multiplier);\n}\n\n\n//////////////////////////////////////////////////////////////////////\n// Custom buffs that don't fit into any of the helper functions above.\n//////////////////////////////////////////////////////////////////////\n\nfunction makePotionInputFactory(consumesFieldName: keyof Consumes): (options: Array<Potions>, tooltip?: string) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, Potions> {\n\treturn makeConsumeInputFactory({\n\t\tconsumesFieldName: consumesFieldName,\n\t\tallOptions: [\n\t\t\t{ actionId: ActionId.fromItemId(33447), value: Potions.RunicHealingPotion },\n\t\t\t{ actionId: ActionId.fromItemId(41166), value: Potions.RunicHealingInjector },\n\t\t\t{ actionId: ActionId.fromItemId(33448), value: Potions.RunicManaPotion },\n\t\t\t{ actionId: ActionId.fromItemId(42545), value: Potions.RunicManaInjector },\n\t\t\t{ actionId: ActionId.fromItemId(40093), value: Potions.IndestructiblePotion },\n\t\t\t{ actionId: ActionId.fromItemId(40211), value: Potions.PotionOfSpeed },\n\t\t\t{ actionId: ActionId.fromItemId(40212), value: Potions.PotionOfWildMagic },\n\n\t\t\t{ actionId: ActionId.fromItemId(22839), value: Potions.DestructionPotion },\n\t\t\t{ actionId: ActionId.fromItemId(22838), value: Potions.HastePotion },\n\t\t\t{ actionId: ActionId.fromItemId(13442), value: Potions.MightyRagePotion },\n\t\t\t{ actionId: ActionId.fromItemId(22832), value: Potions.SuperManaPotion },\n\t\t\t{ actionId: ActionId.fromItemId(31677), value: Potions.FelManaPotion },\n\t\t\t{ actionId: ActionId.fromItemId(22828), value: Potions.InsaneStrengthPotion },\n\t\t\t{ actionId: ActionId.fromItemId(22849), value: Potions.IronshieldPotion },\n\t\t\t{ actionId: ActionId.fromItemId(22837), value: Potions.HeroicPotion },\n\t\t] as Array<IconEnumValueConfig<Player<any>, Potions>>,\n\t});\n}\nexport const makePotionsInput = makePotionInputFactory('defaultPotion');\nexport const makePrepopPotionsInput = makePotionInputFactory('prepopPotion');\n\nexport const makeConjuredInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'defaultConjured',\n\tallOptions: [\n\t\t{ actionId: ActionId.fromItemId(12662), value: Conjured.ConjuredDarkRune },\n\t\t{ actionId: ActionId.fromItemId(22788), value: Conjured.ConjuredFlameCap },\n\t\t{ actionId: ActionId.fromItemId(22105), value: Conjured.ConjuredHealthstone },\n\t\t{ actionId: ActionId.fromItemId(7676), value: Conjured.ConjuredRogueThistleTea },\n\t] as Array<IconEnumValueConfig<Player<any>, Conjured>>\n});\n\nexport const makeFlasksInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'flask',\n\tallOptions: [\n\t\t{ actionId: ActionId.fromItemId(46376), value: Flask.FlaskOfTheFrostWyrm },\n\t\t{ actionId: ActionId.fromItemId(46377), value: Flask.FlaskOfEndlessRage },\n\t\t{ actionId: ActionId.fromItemId(46378), value: Flask.FlaskOfPureMojo },\n\t\t{ actionId: ActionId.fromItemId(46379), value: Flask.FlaskOfStoneblood },\n\t\t{ actionId: ActionId.fromItemId(40079), value: Flask.LesserFlaskOfToughness },\n\t\t{ actionId: ActionId.fromItemId(44939), value: Flask.LesserFlaskOfResistance },\n\t\t{ actionId: ActionId.fromItemId(22861), value: Flask.FlaskOfBlindingLight },\n\t\t{ actionId: ActionId.fromItemId(22853), value: Flask.FlaskOfMightyRestoration },\n\t\t{ actionId: ActionId.fromItemId(22866), value: Flask.FlaskOfPureDeath },\n\t\t{ actionId: ActionId.fromItemId(22854), value: Flask.FlaskOfRelentlessAssault },\n\t\t{ actionId: ActionId.fromItemId(13512), value: Flask.FlaskOfSupremePower },\n\t\t{ actionId: ActionId.fromItemId(22851), value: Flask.FlaskOfFortification },\n\t\t{ actionId: ActionId.fromItemId(33208), value: Flask.FlaskOfChromaticWonder },\n\t] as Array<IconEnumValueConfig<Player<any>, Flask>>,\n\tonSet: (eventID: EventID, player: Player<any>, newValue: Flask) => {\n\t\tif (newValue) {\n\t\t\tconst newConsumes = player.getConsumes();\n\t\t\tnewConsumes.battleElixir = BattleElixir.BattleElixirUnknown;\n\t\t\tnewConsumes.guardianElixir = GuardianElixir.GuardianElixirUnknown;\n\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t}\n\t}\n});\n\nexport const makeBattleElixirsInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'battleElixir',\n\tallOptions: [\n\t\t{ actionId: ActionId.fromItemId(44325), value: BattleElixir.ElixirOfAccuracy },\n\t\t{ actionId: ActionId.fromItemId(44330), value: BattleElixir.ElixirOfArmorPiercing },\n\t\t{ actionId: ActionId.fromItemId(44327), value: BattleElixir.ElixirOfDeadlyStrikes },\n\t\t{ actionId: ActionId.fromItemId(44329), value: BattleElixir.ElixirOfExpertise },\n\t\t{ actionId: ActionId.fromItemId(44331), value: BattleElixir.ElixirOfLightningSpeed },\n\t\t{ actionId: ActionId.fromItemId(39666), value: BattleElixir.ElixirOfMightyAgility },\n\t\t{ actionId: ActionId.fromItemId(40073), value: BattleElixir.ElixirOfMightyStrength },\n\t\t{ actionId: ActionId.fromItemId(40076), value: BattleElixir.GurusElixir },\n\t\t{ actionId: ActionId.fromItemId(40070), value: BattleElixir.SpellpowerElixir },\n\t\t{ actionId: ActionId.fromItemId(40068), value: BattleElixir.WrathElixir },\n\t\t{ actionId: ActionId.fromItemId(28103), value: BattleElixir.AdeptsElixir },\n\t\t{ actionId: ActionId.fromItemId(9224), value: BattleElixir.ElixirOfDemonslaying },\n\t\t{ actionId: ActionId.fromItemId(22831), value: BattleElixir.ElixirOfMajorAgility },\n\t\t{ actionId: ActionId.fromItemId(22833), value: BattleElixir.ElixirOfMajorFirePower },\n\t\t{ actionId: ActionId.fromItemId(22827), value: BattleElixir.ElixirOfMajorFrostPower },\n\t\t{ actionId: ActionId.fromItemId(22835), value: BattleElixir.ElixirOfMajorShadowPower },\n\t\t{ actionId: ActionId.fromItemId(22824), value: BattleElixir.ElixirOfMajorStrength },\n\t\t{ actionId: ActionId.fromItemId(28104), value: BattleElixir.ElixirOfMastery },\n\t\t{ actionId: ActionId.fromItemId(13452), value: BattleElixir.ElixirOfTheMongoose },\n\t\t{ actionId: ActionId.fromItemId(31679), value: BattleElixir.FelStrengthElixir },\n\t\t{ actionId: ActionId.fromItemId(13454), value: BattleElixir.GreaterArcaneElixir },\n\t] as Array<IconEnumValueConfig<Player<any>, BattleElixir>>,\n\tonSet: (eventID: EventID, player: Player<any>, newValue: BattleElixir) => {\n\t\tif (newValue) {\n\t\t\tconst newConsumes = player.getConsumes();\n\t\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t}\n\t}\n});\n\nexport const makeGuardianElixirsInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'guardianElixir',\n\tallOptions: [\n\t\t{ actionId: ActionId.fromItemId(44328), value: GuardianElixir.ElixirOfMightyDefense },\n\t\t{ actionId: ActionId.fromItemId(40078), value: GuardianElixir.ElixirOfMightyFortitude },\n\t\t{ actionId: ActionId.fromItemId(40109), value: GuardianElixir.ElixirOfMightyMageblood },\n\t\t{ actionId: ActionId.fromItemId(44332), value: GuardianElixir.ElixirOfMightyThoughts },\n\t\t{ actionId: ActionId.fromItemId(40097), value: GuardianElixir.ElixirOfProtection },\n\t\t{ actionId: ActionId.fromItemId(40072), value: GuardianElixir.ElixirOfSpirit },\n\t\t{ actionId: ActionId.fromItemId(9088), value: GuardianElixir.GiftOfArthas },\n\t\t{ actionId: ActionId.fromItemId(32067), value: GuardianElixir.ElixirOfDraenicWisdom },\n\t\t{ actionId: ActionId.fromItemId(32068), value: GuardianElixir.ElixirOfIronskin },\n\t\t{ actionId: ActionId.fromItemId(22834), value: GuardianElixir.ElixirOfMajorDefense },\n\t\t{ actionId: ActionId.fromItemId(32062), value: GuardianElixir.ElixirOfMajorFortitude },\n\t\t{ actionId: ActionId.fromItemId(22840), value: GuardianElixir.ElixirOfMajorMageblood },\n\t] as Array<IconEnumValueConfig<Player<any>, GuardianElixir>>,\n\tonSet: (eventID: EventID, player: Player<any>, newValue: GuardianElixir) => {\n\t\tif (newValue) {\n\t\t\tconst newConsumes = player.getConsumes();\n\t\t\tnewConsumes.flask = Flask.FlaskUnknown;\n\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t}\n\t}\n});\n\nexport const makeFoodInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'food',\n\tallOptions: [\n\t\t{ actionId: ActionId.fromItemId(43015), value: Food.FoodFishFeast },\n\t\t{ actionId: ActionId.fromItemId(34753), value: Food.FoodGreatFeast },\n\t\t{ actionId: ActionId.fromItemId(42999), value: Food.FoodBlackenedDragonfin },\n\t\t{ actionId: ActionId.fromItemId(42995), value: Food.FoodHeartyRhino },\n\t\t{ actionId: ActionId.fromItemId(34754), value: Food.FoodMegaMammothMeal },\n\t\t{ actionId: ActionId.fromItemId(34756), value: Food.FoodSpicedWormBurger },\n\t\t{ actionId: ActionId.fromItemId(42994), value: Food.FoodRhinoliciousWormsteak },\n\t\t{ actionId: ActionId.fromItemId(34769), value: Food.FoodImperialMantaSteak },\n\t\t{ actionId: ActionId.fromItemId(42996), value: Food.FoodSnapperExtreme },\n\t\t{ actionId: ActionId.fromItemId(34758), value: Food.FoodMightyRhinoDogs },\n\t\t{ actionId: ActionId.fromItemId(34767), value: Food.FoodFirecrackerSalmon },\n\t\t{ actionId: ActionId.fromItemId(42998), value: Food.FoodCuttlesteak },\n\t\t{ actionId: ActionId.fromItemId(43000), value: Food.FoodDragonfinFilet },\n\n\t\t{ actionId: ActionId.fromItemId(27657), value: Food.FoodBlackenedBasilisk },\n\t\t{ actionId: ActionId.fromItemId(27664), value: Food.FoodGrilledMudfish },\n\t\t{ actionId: ActionId.fromItemId(27655), value: Food.FoodRavagerDog },\n\t\t{ actionId: ActionId.fromItemId(27658), value: Food.FoodRoastedClefthoof },\n\t\t{ actionId: ActionId.fromItemId(33872), value: Food.FoodSpicyHotTalbuk },\n\t\t{ actionId: ActionId.fromItemId(33825), value: Food.FoodSkullfishSoup },\n\t\t{ actionId: ActionId.fromItemId(33052), value: Food.FoodFishermansFeast },\n\t] as Array<IconEnumValueConfig<Player<any>, Food>>\n});\n\nexport const FillerExplosiveInput = makeConsumeInput('fillerExplosive', [\n\t{ actionId: ActionId.fromItemId(41119), value: Explosive.ExplosiveSaroniteBomb },\n\t{ actionId: ActionId.fromItemId(40771), value: Explosive.ExplosiveCobaltFragBomb },\n] as Array<IconEnumValueConfig<Player<any>, Explosive>>);\n\nexport interface ConsumeInputFactoryArgs<T extends number> {\n\tconsumesFieldName: keyof Consumes,\n\tallOptions: Array<IconEnumValueConfig<Player<any>, T>>,\n\tonSet?: (eventID: EventID, player: Player<any>, newValue: T) => void\n}\nfunction makeConsumeInputFactory<T extends number>(args: ConsumeInputFactoryArgs<T>): (options: Array<T>, tooltip?: string) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\treturn (options: Array<T>, tooltip?: string) => {\n\t\treturn {\n\t\t\ttype: 'iconEnum',\n\t\t\ttooltip: tooltip,\n\t\t\tnumColumns: options.length > 5 ? 2 : 1,\n\t\t\tvalues: [\n\t\t\t\t{ value: 0 } as unknown as IconEnumValueConfig<Player<any>, T>,\n\t\t\t].concat(options.map(option => args.allOptions.find(allOption => allOption.value == option)!)),\n\t\t\tequals: (a: T, b: T) => a == b,\n\t\t\tzeroValue: 0 as T,\n\t\t\tchangedEvent: (player: Player<any>) => player.consumesChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getConsumes()[args.consumesFieldName] as T,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst newConsumes = player.getConsumes();\n\t\t\t\t(newConsumes[args.consumesFieldName] as number) = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t\t\t\tif (args.onSet) {\n\t\t\t\t\t\targs.onSet(eventID, player, newValue as T);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t};\n}\n\nfunction makeConsumeInput<T extends number>(consumesFieldName: keyof Consumes, allOptions: Array<IconEnumValueConfig<Player<any>, T>>, onSet?: (eventID: EventID, player: Player<any>, newValue: T) => void): InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\tconst factory = makeConsumeInputFactory({\n\t\tconsumesFieldName: consumesFieldName,\n\t\tallOptions: allOptions,\n\t\tonSet: onSet\n\t});\n\treturn factory(allOptions.map(option => option.value));\n}\n","import { IndividualSimUI } from \"../../individual_sim_ui\";\nimport {\n  BattleElixir,\n  Class,\n  Conjured,\n  Flask,\n  Food,\n  GuardianElixir,\n  Potions,\n  Profession,\n  Spec,\n  Stat\n} from \"../../proto/common\";\nimport { Component } from \"../component\";\nimport { IconEnumPicker } from \"../icon_enum_picker\";\n\nimport * as IconInputs from '../icon_inputs.js';\nimport { buildIconInput } from \"../icon_inputs.js\";\nimport { SettingsTab } from \"./settings_tab\";\n\nexport class ConsumesPicker extends Component {\n  protected settingsTab: SettingsTab;\n  protected simUI: IndividualSimUI<Spec>;\n\n  constructor(parentElem: HTMLElement, settingsTab: SettingsTab, simUI: IndividualSimUI<Spec>) {\n    super(parentElem, 'consumes-picker-root');\n    this.settingsTab = settingsTab;\n    this.simUI = simUI;\n\n    this.buildPotionsPicker();\n    this.buildElixirsPicker();\n    this.buildFoodPicker();\n    this.buildEngPicker();\n    this.buildPetPicker();\n  }\n\n  private buildPotionsPicker() {\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <div class=\"consumes-row input-root input-inline\">\n        <label class=\"form-label\">Potions</label>\n        <div class=\"consumes-row-inputs\">\n          <div class=\"consumes-prepot\"></div>\n          <div class=\"consumes-potions\"></div>\n          <div class=\"consumes-conjured\"></div>\n        </div>\n      </div>\n    `;\n\n    this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\n    const prepopPotionOptions = this.simUI.splitRelevantOptions([\n\t\t\t// This list is smaller because some potions don't make sense to use as prepot.\n\t\t\t// E.g. healing/mana potions.\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.InsaneStrengthPotion, stats: [Stat.StatStrength] },\n\t\t\t{ item: Potions.HeroicPotion, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (prepopPotionOptions.length) {\n\t\t\tconst elem = this.rootElem.querySelector('.consumes-prepot') as HTMLElement;\n\t\t\tnew IconEnumPicker(\n        elem,\n        this.simUI.player,\n        IconInputs.makePrepopPotionsInput(prepopPotionOptions, 'Prepop Potion (1s before combat)')\n      );\n    }\n\n\t\tconst potionOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: Potions.RunicHealingPotion, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.RunicHealingInjector, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.RunicManaPotion, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Potions.RunicManaInjector, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Potions.IndestructiblePotion, stats: [Stat.StatArmor] },\n\t\t\t{ item: Potions.InsaneStrengthPotion, stats: [Stat.StatStrength] },\n\t\t\t{ item: Potions.HeroicPotion, stats: [Stat.StatStamina] },\n\t\t\t{ item: Potions.PotionOfSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Potions.PotionOfWildMagic, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit, Stat.StatSpellPower] },\n\t\t]);\n\t\tif (potionOptions.length) {\n\t\t\tconst elem = this.rootElem.querySelector('.consumes-potions') as HTMLElement;\n\t\t\tnew IconEnumPicker(\n        elem,\n        this.simUI.player,\n        IconInputs.makePotionsInput(potionOptions, 'Combat Potion')\n      );\n\t\t}\n\n\t\tconst conjuredOptions = this.simUI.splitRelevantOptions([\n\t\t\tthis.simUI.player.getClass() == Class.ClassRogue ? { item: Conjured.ConjuredRogueThistleTea, stats: [] } : null,\n\t\t\t{ item: Conjured.ConjuredHealthstone, stats: [Stat.StatStamina] },\n\t\t\t{ item: Conjured.ConjuredDarkRune, stats: [Stat.StatIntellect] },\n\t\t\t{ item: Conjured.ConjuredFlameCap, stats: [] },\n\t\t]);\n\t\tif (conjuredOptions.length) {\n\t\t\tconst elem = this.rootElem.querySelector('.consumes-conjured') as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.simUI.player, IconInputs.makeConjuredInput(conjuredOptions));\n\t\t}\n  }\n\n  private buildElixirsPicker() {\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <div class=\"consumes-row input-root input-inline\">\n        <label class=\"form-label\">Elixirs</label>\n        <div class=\"consumes-row-inputs\">\n          <div class=\"consumes-flasks\"></div>\n          <span class=\"elixir-space\">or</span>\n          <div class=\"consumes-battle-elixirs\"></div>\n          <div class=\"consumes-guardian-elixirs\"></div>\n        </div>\n      </div>\n    `;\n\n    this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\n    const flaskOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: Flask.FlaskOfTheFrostWyrm, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Flask.FlaskOfEndlessRage, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: Flask.FlaskOfPureMojo, stats: [Stat.StatMP5] },\n\t\t\t{ item: Flask.FlaskOfStoneblood, stats: [Stat.StatStamina] },\n\t\t\t{ item: Flask.LesserFlaskOfToughness, stats: [Stat.StatResilience] },\n\t\t\t{ item: Flask.LesserFlaskOfResistance, stats: [Stat.StatArcaneResistance, Stat.StatFireResistance, Stat.StatFrostResistance, Stat.StatNatureResistance, Stat.StatShadowResistance] },\n\t\t]);\n\t\tif (flaskOptions.length) {\n\t\t\tconst elem = this.rootElem.querySelector('.consumes-flasks') as HTMLElement;\n\t\t\tnew IconEnumPicker(\n        elem,\n        this.simUI.player,\n        IconInputs.makeFlasksInput(flaskOptions, 'Flask')\n      );\n\t\t}\n\n\t\tconst battleElixirOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: BattleElixir.ElixirOfAccuracy, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: BattleElixir.ElixirOfArmorPiercing, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: BattleElixir.ElixirOfDeadlyStrikes, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: BattleElixir.ElixirOfExpertise, stats: [Stat.StatExpertise] },\n\t\t\t{ item: BattleElixir.ElixirOfLightningSpeed, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyAgility, stats: [Stat.StatAgility] },\n\t\t\t{ item: BattleElixir.ElixirOfMightyStrength, stats: [Stat.StatStrength] },\n\t\t\t{ item: BattleElixir.GurusElixir, stats: [Stat.StatStamina, Stat.StatAgility, Stat.StatStrength, Stat.StatSpirit, Stat.StatIntellect] },\n\t\t\t{ item: BattleElixir.SpellpowerElixir, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: BattleElixir.WrathElixir, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t]);\n\n    const battleElixirsContainer = this.rootElem.querySelector('.consumes-battle-elixirs') as HTMLElement;\n\t\tif (battleElixirOptions.length) {\n\t\t\tnew IconEnumPicker(\n        battleElixirsContainer,\n        this.simUI.player,\n        IconInputs.makeBattleElixirsInput(battleElixirOptions, 'Battle Elixir')\n      );\n\t\t} else {\n      battleElixirsContainer.remove();\n    }\n\n\t\tconst guardianElixirOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: GuardianElixir.ElixirOfMightyDefense, stats: [Stat.StatDefense] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyFortitude, stats: [Stat.StatStamina] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyMageblood, stats: [Stat.StatMP5] },\n\t\t\t{ item: GuardianElixir.ElixirOfMightyThoughts, stats: [Stat.StatIntellect] },\n\t\t\t{ item: GuardianElixir.ElixirOfProtection, stats: [Stat.StatArmor] },\n\t\t\t{ item: GuardianElixir.ElixirOfSpirit, stats: [Stat.StatSpirit] },\n\t\t\t{ item: GuardianElixir.GiftOfArthas, stats: [Stat.StatStamina] },\n\t\t]);\n\n    const guardianElixirsContainer = this.rootElem.querySelector('.consumes-guardian-elixirs') as HTMLElement;\n\t\tif (guardianElixirOptions.length) {\n\t\t\tconst guardianElixirsContainer = this.rootElem.querySelector('.consumes-guardian-elixirs') as HTMLElement;\n\t\t\tnew IconEnumPicker(\n        guardianElixirsContainer,\n        this.simUI.player,\n        IconInputs.makeGuardianElixirsInput(guardianElixirOptions, 'Guardian Elixir')\n      );\n\t\t} else {\n      guardianElixirsContainer.remove();\n    }\n  }\n\n  private buildFoodPicker() {\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <div class=\"consumes-row input-root input-inline\">\n        <label class=\"form-label\">Food</label>\n        <div class=\"consumes-row-inputs\">\n          <div class=\"consumes-food\"></div>\n        </div>\n      </div>\n    `;\n\n    this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\n    const foodOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: Food.FoodFishFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodGreatFeast, stats: [Stat.StatStamina, Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodBlackenedDragonfin, stats: [Stat.StatAgility] },\n\t\t\t{ item: Food.FoodDragonfinFilet, stats: [Stat.StatStrength] },\n\t\t\t{ item: Food.FoodCuttlesteak, stats: [Stat.StatSpirit] },\n\t\t\t{ item: Food.FoodMegaMammothMeal, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: Food.FoodHeartyRhino, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: Food.FoodRhinoliciousWormsteak, stats: [Stat.StatExpertise] },\n\t\t\t{ item: Food.FoodFirecrackerSalmon, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: Food.FoodSnapperExtreme, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: Food.FoodSpicedWormBurger, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: Food.FoodImperialMantaSteak, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: Food.FoodMightyRhinoDogs, stats: [Stat.StatMP5] },\n\t\t]);\n\t\tif (foodOptions.length) {\n\t\t\tconst elem = this.rootElem.querySelector('.consumes-food') as HTMLElement;\n\t\t\tnew IconEnumPicker(elem, this.simUI.player, IconInputs.makeFoodInput(foodOptions));\n\t\t}\n  }\n\n  private buildEngPicker() {\n    let fragment = document.createElement('fragment');\n    fragment.innerHTML = `\n      <div class=\"consumes-row input-root input-inline\">\n        <label class=\"form-label\">Engineering</label>\n        <div class=\"consumes-row-inputs consumes-trade\"></div>\n      </div>\n    `;\n\n    this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\n    const tradeConsumesElem = this.rootElem.querySelector('.consumes-trade') as HTMLElement;\n\n\t\tbuildIconInput(tradeConsumesElem, this.simUI.player, IconInputs.ThermalSapper);\n\t\tbuildIconInput(tradeConsumesElem, this.simUI.player, IconInputs.ExplosiveDecoy);\n\t\tbuildIconInput(tradeConsumesElem, this.simUI.player, IconInputs.FillerExplosiveInput);\n\n\t\tconst updateProfession = () => {\n\t\t\tif (this.simUI.player.hasProfession(Profession.Engineering))\n\t\t\t\ttradeConsumesElem.parentElement!.classList.remove('hide');\n\t\t\telse\n\t\t\t\ttradeConsumesElem.parentElement!.classList.add('hide');\n\t\t};\n\t\tthis.simUI.player.professionChangeEmitter.on(updateProfession);\n\t\tupdateProfession();\n  }\n\n  private buildPetPicker() {\n    if (this.simUI.individualConfig.petConsumeInputs?.length) {\n      let fragment = document.createElement('fragment');\n      fragment.innerHTML = `\n        <div class=\"consumes-row input-root input-inline\">\n          <label class=\"form-label\">Pet</label>\n          <div class=\"consumes-row-inputs consumes-pet\"></div>\n        </div>\n      `;\n\n      this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\n      const petConsumesElem = this.rootElem.querySelector('.consumes-pet') as HTMLElement;\n\t\t\tthis.simUI.individualConfig.petConsumeInputs.map(iconInput => buildIconInput(petConsumesElem, this.simUI.player, iconInput));\n\t\t}\n  }\n}\n","export const BUFFS_SECTION = 'Buffs provided by other party/raid members.';\nexport const DEBUFFS_SECTION = 'Debuffs applied by other raid members.';\nexport const COOLDOWNS_SECTION = 'Specify cooldown timings, in seconds. Cooldowns will be used as soon as possible after their specified timings. When not specified, cooldowns will be used when ready and it is sensible to do so.<br><br>Multiple timings can be provided by separating with commas. Any cooldown usages after the last provided timing will use the default logic.';\nexport const BLESSINGS_SECTION = 'Specify Paladin Blessings for each role, in order of priority. Blessings in the 1st column will be used if there is at least 1 Paladin in the raid, 2nd column if at least 2, etc.';\n\nexport const BASIC_BIS_DISCLAIMER = '<p>Preset gear lists are intended as rough approximations of BIS, and will often not be the absolute highest-DPS setup for you. Your optimal gear setup will depend on many factors; that\\'s why we have a sim!</p><p>Items may also be omitted from the presets if they are highly contested and clearly better utilized on other classes, to encourage equitable gearing for the raid as a whole.</p>';\n\nexport const HEALING_SIM_DISCLAIMER = '*** WARNING - USE AT YOUR OWN RISK ***\\n\\nThe entire concept of a healing sim is EXPERIMENTAL. All results should be taken with an EXTREMELY large grain of salt.\\n\\nThis tool is currently more similar to a spreadsheet than a true sim. Options for specifying incoming damage profiles in order to have proper reactive rotations have not yet been added.';\n","import { Spec, ItemSlot, ItemSwap } from '../proto/common.js';\nimport { Player } from '../player.js';\nimport { Component } from './component.js';\nimport { IconItemSwapPicker } from './gear_picker.js'\nimport { Input, InputConfig } from './input.js'\nimport { SimUI } from '../sim_ui.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { mapToStyles } from '@popperjs/core/lib/modifiers/computeStyles.js';\n\nexport interface ItemSwapPickerConfig<SpecType extends Spec, T> extends InputConfig<Player<SpecType>, T>{\n\titemSlots: Array<ItemSlot>;\n}\n\ndeclare var tippy: any;\n\nexport class ItemSwapPicker<SpecType extends Spec, T> extends Component {\n\n\tconstructor(parentElem: HTMLElement, simUI: SimUI, player: Player<SpecType>, config: ItemSwapPickerConfig<SpecType, T>) {\n\t\tsuper(parentElem, 'item-swap-picker-root');\n\n\t\tthis.rootElem.classList.add('input-root', 'input-inline')\n\n\t\tconst label = document.createElement(\"label\")\n\t\tlabel.classList.add('form-label')\n\t\tlabel.textContent = \"Item Swap\"\n\t\tthis.rootElem.appendChild(label);\n\n\t\tif (config.labelTooltip) {\n\t\t\ttippy(label, {\n\t\t\t\t'content': config.labelTooltip,\n\t\t\t\t'allowHTML': true,\n\t\t\t});\n\t\t}\n\n\t\tlet itemSwapContainer = Input.newGroupContainer();\n\t\titemSwapContainer.classList.add('icon-group')\n\t\tthis.rootElem.appendChild(itemSwapContainer);\n\n\t\tlet swapButtonFragment = document.createElement('fragment');\n\t\tswapButtonFragment.innerHTML = `\n\t\t\t<a\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\tclass=\"gear-swap-icon\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\tdata-bs-title=\"Swap Items with Main Gear\"\n\t\t\t>\n\t\t\t\t<i class=\"fas fa-arrows-rotate me-1\"></i>\n\t\t\t</a>\n\t\t`\n\n\t\tconst swapButton = swapButtonFragment.children[0] as HTMLElement;\n\t\titemSwapContainer.appendChild(swapButton)\n\n\t\tswapButton.addEventListener('click', event => { this.swapWithGear(player, config) });\n\n\t\tconfig.changedEvent(player).on(eventID => {\n\t\t\tconst show = !config.showWhen || config.showWhen(player);\n\t\t\tif (show) {\n\t\t\t\tthis.rootElem.classList.remove('hide');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide');\n\t\t\t}\n\t\t});\n\n\t\tconfig.itemSlots.forEach(itemSlot => {\n\t\t\tnew IconItemSwapPicker(itemSwapContainer, simUI, player,itemSlot, config);\n\t\t});\n\t}\n\n\tswapWithGear(player : Player<SpecType>, config: ItemSwapPickerConfig<SpecType, T> ) {\n\t\tlet gear = player.getGear()\n\n\t\tconst gearMap = new Map();\n\t\tconst itemSwapMap = new Map();\n\n\t\tconfig.itemSlots.forEach(slot => {\n\t\t\tconst gearItem = player.getGear().getEquippedItem(slot)\n\t\t\tconst swapItem = player.getItemSwapGear().getEquippedItem(slot)\n\n\t\t\tgearMap.set(slot, gearItem)\n\t\t\titemSwapMap.set(slot, swapItem)\n\t\t})\n\n\t\titemSwapMap.forEach((item, slot) => {\n\t\t\tgear = gear.withEquippedItem(slot, item, player.canDualWield2H())\n\t\t})\n\n\t\tgearMap.forEach((item, slot) => {\n\t\t\tplayer.getItemSwapGear().equipItem(slot, item, player.canDualWield2H())\n\t\t})\n\n\t\tlet eventID = TypedEvent.nextEventID()\n\t\tplayer.setGear(eventID, gear)\n\n\t\tconst itemSwap = player.getItemSwapGear().toProto() as unknown as T\n\t\tconfig.setValue(eventID, player, itemSwap)\n\t}\n\t\n}\n\n\n\n","import { IndividualSimUI, InputSection, StatOption } from \"../../individual_sim_ui\";\nimport {\n\tConsumes,\n\tCooldowns,\n\tDebuffs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tProfession,\n\tRaidBuffs,\n\tSpec,\n\tStat\n} from \"../../proto/common\";\nimport { ActionId } from \"../../proto_utils/action_id\";\nimport { professionNames, raceNames } from \"../../proto_utils/names\";\nimport { specToEligibleRaces } from \"../../proto_utils/utils\";\nimport { Encounter } from '../../encounter';\nimport { SavedEncounter, SavedSettings } from \"../../proto/ui\";\nimport { EventID, TypedEvent } from \"../../typed_event\";\nimport { getEnumValues } from \"../../utils\";\nimport { Player } from \"../../player\";\n\nimport { ContentBlock } from \"../content_block\";\nimport { EncounterPicker } from '../encounter_picker.js';\nimport { SavedDataManager } from \"../saved_data_manager\";\nimport { SimTab } from \"../sim_tab\";\nimport { NumberPicker } from \"../number_picker\";\nimport { BooleanPicker } from \"../boolean_picker\";\nimport { EnumPicker } from \"../enum_picker\";\nimport { Input } from \"../input\";\nimport { MultiIconPicker } from \"../multi_icon_picker\";\nimport { IconPickerConfig } from \"../icon_picker\";\nimport { TypedIconPickerConfig } from \"../input_helpers\";\n\nimport { CustomRotationPicker } from \"./custom_rotation_picker\";\nimport { CooldownsPicker } from \"./cooldowns_picker\";\nimport { ConsumesPicker } from \"./consumes_picker\";\n\nimport * as IconInputs from '../icon_inputs.js';\nimport * as Tooltips from '../../constants/tooltips.js';\nimport { ItemSwapPicker } from \"../item_swap_picker\";\n\nexport class SettingsTab extends SimTab {\n  protected simUI: IndividualSimUI<Spec>;\n\n  readonly leftPanel: HTMLElement;\n  readonly rightPanel: HTMLElement;\n\n\treadonly column1: HTMLElement = this.buildColumn(1, 'settings-left-col');\n\treadonly column2: HTMLElement = this.buildColumn(2, 'settings-left-col');\n\treadonly column3: HTMLElement = this.buildColumn(3, 'settings-left-col');\n\treadonly column4?: HTMLElement;\n\n  constructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n    super(parentElem, simUI, {identifier: 'settings-tab', title: 'Settings'});\n    this.simUI = simUI;\n\n    this.leftPanel = document.createElement('div');\n    this.leftPanel.classList.add('settings-tab-left', 'tab-panel-left');\n\n\t\tthis.leftPanel.appendChild(this.column1);\n\t\tthis.leftPanel.appendChild(this.column2);\n\t\tthis.leftPanel.appendChild(this.column3);\n\n\t\t// The 4th column is only used in the raid sim player editor to spread out player settings\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tthis.column4 = this.buildColumn(4, 'settings-left-col');\n\t\t\tthis.leftPanel.appendChild(this.column4);\n\t\t}\n\n\t\tthis.rightPanel = document.createElement('div');\n    this.rightPanel.classList.add('settings-tab-right', 'tab-panel-right', 'within-raid-sim-hide');\n\n    this.contentContainer.appendChild(this.leftPanel);\n    this.contentContainer.appendChild(this.rightPanel);\n\n    this.buildTabContent();\n  }\n\n  protected buildTabContent() {\n\t\tif (!this.simUI.isWithinRaidSim) {\n    \tthis.buildEncounterSettings();\n\t\t}\n\n\t\tthis.buildRotationSettings();\n\n\t\tthis.buildPlayerSettings();\n\t\tthis.buildCustomSettingsSections();\n\t\tthis.buildConsumesSection();\n\t\tthis.buildCooldownSettings();\n\t\tthis.buildOtherSettings();\n\n\t\tif (!this.simUI.isWithinRaidSim) {\n\t\t\tthis.buildBuffsSettings();\n\t\t\tthis.buildDebuffsSettings();\n\t\t}\n\n\t\tif (!this.simUI.isWithinRaidSim) {\n    \tthis.buildSavedDataPickers();\n\t\t}\n  }\n\n  private buildEncounterSettings() {\n    const contentBlock = new ContentBlock(this.column1, 'encounter-settings', {\n      header: {title: 'Encounter'}\n    });\n\n    new EncounterPicker(contentBlock.bodyElement, this.simUI.sim.encounter, this.simUI.individualConfig.encounterPicker, this.simUI);\n  }\n\n\tprivate buildRotationSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column1, 'rotation-settings', {\n      header: {title: 'Rotation'}\n    });\n\n\t\tconst rotationIconGroup = Input.newGroupContainer();\n\t\trotationIconGroup.classList.add('rotation-icon-group', 'icon-group');\n\t\tcontentBlock.bodyElement.appendChild(rotationIconGroup);\n\n\t\tif (this.simUI.individualConfig.rotationIconInputs?.length) {\n\t\t\tthis.configureIconSection(\n\t\t\t\trotationIconGroup,\n\t\t\t\tthis.simUI.individualConfig.rotationIconInputs.map(iconInput => IconInputs.buildIconInput(rotationIconGroup, this.simUI.player, iconInput)),\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\n\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.rotationInputs);\n\n\t\tcontentBlock.bodyElement.querySelectorAll('.input-root').forEach(elem => {\n\t\t\telem.classList.add('input-inline');\n\t\t})\n\t}\n\n\tprivate buildPlayerSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column2, 'player-settings', {\n\t\t\theader: {title: 'Player'}\n\t\t});\n\n\t\tconst playerIconGroup = Input.newGroupContainer();\n\t\tplayerIconGroup.classList.add('player-icon-group', 'icon-group');\n\t\tcontentBlock.bodyElement.appendChild(playerIconGroup);\n\n\t\tthis.configureIconSection(\n\t\t\tplayerIconGroup,\n\t\t\tthis.simUI.individualConfig.playerIconInputs.map(iconInput => IconInputs.buildIconInput(playerIconGroup, this.simUI.player, iconInput)),\n\t\t\ttrue\n\t\t);\n\n\t\tconst races = specToEligibleRaces[this.simUI.player.spec];\n\t\tconst racePicker = new EnumPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\tlabel: 'Race',\n\t\t\tvalues: races.map(race => {\n\t\t\t\treturn {\n\t\t\t\t\tname: raceNames[race],\n\t\t\t\t\tvalue: race,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.raceChangeEmitter,\n\t\t\tgetValue: sim => sim.getRace(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setRace(eventID, newValue),\n\t\t});\n\n\t\tif (this.simUI.individualConfig.playerInputs?.inputs.length) {\n\t\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.playerInputs);\n\t\t}\n\n\t\tlet professionGroup = Input.newGroupContainer();\n\t\tcontentBlock.bodyElement.appendChild(professionGroup);\n\n\t\tconst professions = getEnumValues(Profession) as Array<Profession>;\n\t\tconst profession1Picker = new EnumPicker(professionGroup, this.simUI.player, {\n\t\t\tlabel: 'Profession 1',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession1(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession1(eventID, newValue),\n\t\t});\n\n\t\tconst profession2Picker = new EnumPicker(professionGroup, this.simUI.player, {\n\t\t\tlabel: 'Profession 2',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames[p],\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.professionChangeEmitter,\n\t\t\tgetValue: sim => sim.getProfession2(),\n\t\t\tsetValue: (eventID, sim, newValue) => sim.setProfession2(eventID, newValue),\n\t\t});\n\t}\n\n\tprivate buildCustomSettingsSections() {\n\t\t(this.simUI.individualConfig.customSections || []).forEach(customSection => {\n\t\t\tlet section = customSection(this.column2, this.simUI);\n\t\t\tsection.rootElem.classList.add('custom-section');\n\t\t});\n\t}\n\n\tprivate buildConsumesSection() {\n\t\tconst column = this.simUI.isWithinRaidSim ? this.column3 : this.column2;\n\t\tconst contentBlock = new ContentBlock(column, 'consumes-settings', {\n\t\t\theader: {title: 'Consumables'}\n\t\t});\n\n\t\tnew ConsumesPicker(contentBlock.bodyElement, this, this.simUI);\n\t}\n\n\tprivate buildCooldownSettings() {\n\t\tconst column = (this.simUI.isWithinRaidSim ? this.column4 : this.column2) as HTMLElement;\n\t\tconst contentBlock = new ContentBlock(column, 'cooldown-settings', {\n\t\t\theader: {title: 'Cooldowns', tooltip: Tooltips.COOLDOWNS_SECTION}\n\t\t});\n\n\t\tnew CooldownsPicker(contentBlock.bodyElement, this.simUI.player);\n\t}\n\n\tprivate buildOtherSettings() {\n\t\tconst column = this.simUI.isWithinRaidSim ? this.column4 : this.column2;\n\t\tconst settings = this.simUI.individualConfig.otherInputs?.inputs.filter(inputs =>\n\t\t\t!inputs.extraCssClasses?.includes('within-raid-sim-hide') || true\n\t\t)\n\n\t\tif (settings.length > 0) {\n\t\t\tconst contentBlock = new ContentBlock(this.column2, 'other-settings', {\n\t\t\t\theader: {title: 'Other'}\n\t\t\t});\n\n\t\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.otherInputs);\n\n\t\t\tcontentBlock.bodyElement.querySelectorAll('.input-root').forEach(elem => {\n\t\t\t\telem.classList.add('input-inline');\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate buildBuffsSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column3, 'buffs-settings', {\n\t\t\theader: {title: 'Raid Buffs', tooltip: Tooltips.BUFFS_SECTION}\n\t\t});\n\n\t\tconst buffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.AllStatsBuff, stats: [] },\n\t\t\t{ item: IconInputs.AllStatsPercentBuff, stats: [] },\n\t\t\t{ item: IconInputs.HealthBuff, stats: [Stat.StatHealth] },\n\t\t\t{ item: IconInputs.ArmorBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.StaminaBuff, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.StrengthAndAgilityBuff, stats: [Stat.StatStrength, Stat.StatAgility] },\n\t\t\t{ item: IconInputs.IntellectBuff, stats: [Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.SpiritBuff, stats: [Stat.StatSpirit] },\n\t\t\t{ item: IconInputs.AttackPowerBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.AttackPowerPercentBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.MeleeCritBuff, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.MeleeHasteBuff, stats: [Stat.StatMeleeHaste] },\n\t\t\t{ item: IconInputs.SpellPowerBuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellCritBuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.HastePercentBuff, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste] },\n\t\t\t{ item: IconInputs.DamagePercentBuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.DamageReductionPercentBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.DefensiveCooldownBuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MP5Buff, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.ReplenishmentBuff, stats: [Stat.StatMP5] },\n\t\t]);\n\n\t\tthis.configureIconSection(\n\t\t\tcontentBlock.bodyElement,\n\t\t\tbuffOptions.map(multiIconInput => new MultiIconPicker(contentBlock.bodyElement, this.simUI.player, multiIconInput, this.simUI))\n\t\t);\n\n\t\tconst otherBuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.Bloodlust, stats: [Stat.StatMeleeHaste, Stat.StatSpellHaste], inline: true, },\n\t\t\t{ item: IconInputs.SpellHasteBuff, stats: [Stat.StatSpellHaste] },\n\t\t] as Array<StatOption<IconInputs.IconInputConfig<Player<any>, any>>>);\n\t\totherBuffOptions.forEach(iconInput => IconInputs.buildIconInput(contentBlock.bodyElement, this.simUI.player, iconInput));\n\n\t\tconst revitalizeBuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.RevitalizeRejuvination, stats: [] },\n\t\t\t{ item: IconInputs.RevitalizeWildGrowth, stats: [] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (revitalizeBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\t\tinputs: revitalizeBuffOptions,\n\t\t\t\tnumColumns: 1,\n\t\t\t\tlabel: 'Revit',\n\t\t\t\tcategoryId: ActionId.fromSpellId(48545),\n\t\t\t}, this.simUI);\n\t\t}\n\n\t\tconst miscBuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.HeroicPresence, stats: [Stat.StatMeleeHit, Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.BraidedEterniumChain, stats: [Stat.StatMeleeCrit] },\n\t\t\t{ item: IconInputs.ChainOfTheTwilightOwl, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.FocusMagic, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.EyeOfTheNight, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.Thorns, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.RetributionAura, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.ShadowProtection, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ManaTideTotem, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.Innervate, stats: [Stat.StatMP5] },\n\t\t\t{ item: IconInputs.PowerInfusion, stats: [Stat.StatMP5, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.TricksOfTheTrade, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower, Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.UnholyFrenzy, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscBuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\t\tinputs: miscBuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this.simUI);\n\t\t}\n\t}\n\n\tprivate buildDebuffsSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column3, 'debuffs-settings', {\n\t\t\theader: {title: 'Debuffs', tooltip: Tooltips.DEBUFFS_SECTION}\n\t\t});\n\n\t\tconst debuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.MajorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.MinorArmorDebuff, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.PhysicalDamageDebuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.BleedDebuff, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t\t{ item: IconInputs.SpellDamageDebuff, stats: [Stat.StatSpellPower] },\n\t\t\t{ item: IconInputs.SpellHitDebuff, stats: [Stat.StatSpellHit] },\n\t\t\t{ item: IconInputs.SpellCritDebuff, stats: [Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.CritDebuff, stats: [Stat.StatMeleeCrit, Stat.StatSpellCrit] },\n\t\t\t{ item: IconInputs.AttackPowerDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeAttackSpeedDebuff, stats: [Stat.StatArmor] },\n\t\t\t{ item: IconInputs.MeleeHitDebuff, stats: [Stat.StatDodge] },\n\t\t]);\n\n\t\tthis.configureIconSection(\n\t\t\tcontentBlock.bodyElement,\n\t\t\tdebuffOptions.map(multiIconInput => new MultiIconPicker(contentBlock.bodyElement, this.simUI.player, multiIconInput, this.simUI))\n\t\t);\n\n\t\tconst otherDebuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfWisdom, stats: [Stat.StatMP5, Stat.StatIntellect] },\n\t\t\t{ item: IconInputs.HuntersMark, stats: [Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<TypedIconPickerConfig<Player<any>, any>>>);\n\t\totherDebuffOptions.forEach(iconInput => IconInputs.buildIconInput(contentBlock.bodyElement, this.simUI.player, iconInput));\n\n\t\tconst miscDebuffOptions = this.simUI.splitRelevantOptions([\n\t\t\t{ item: IconInputs.JudgementOfLight, stats: [Stat.StatStamina] },\n\t\t\t{ item: IconInputs.ShatteringThrow, stats: [Stat.StatArmorPenetration] },\n\t\t\t{ item: IconInputs.GiftOfArthas, stats: [Stat.StatAttackPower, Stat.StatRangedAttackPower] },\n\t\t] as Array<StatOption<IconPickerConfig<Player<any>, any>>>);\n\t\tif (miscDebuffOptions.length > 0) {\n\t\t\tnew MultiIconPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\t\tinputs: miscDebuffOptions,\n\t\t\t\tnumColumns: 3,\n\t\t\t\tlabel: 'Misc',\n\t\t\t}, this.simUI);\n\t\t}\n\t}\n\n\tprivate buildSavedDataPickers() {\n    const savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rightPanel, this.simUI, this.simUI.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n      header: {title: 'Saved Encounters'},\n\t\t\tstorageKey: this.simUI.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.simUI.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\n    const savedSettingsManager = new SavedDataManager<IndividualSimUI<any>, SavedSettings>(this.rightPanel, this.simUI, this.simUI, {\n\t\t\tlabel: 'Settings',\n      header: {title: 'Saved Settings'},\n\t\t\tstorageKey: this.simUI.getSavedSettingsStorageKey(),\n\t\t\tgetData: (simUI: IndividualSimUI<any>) => {\n\t\t\t\tconst player = simUI.player;\n\t\t\t\treturn SavedSettings.create({\n\t\t\t\t\traidBuffs: simUI.sim.raid.getBuffs(),\n\t\t\t\t\tpartyBuffs: player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\t\t\tplayerBuffs: player.getBuffs(),\n\t\t\t\t\tdebuffs: simUI.sim.raid.getDebuffs(),\n\t\t\t\t\tconsumes: player.getConsumes(),\n\t\t\t\t\trace: player.getRace(),\n\t\t\t\t\tcooldowns: player.getCooldowns(),\n\t\t\t\t\trotationJson: JSON.stringify(player.specTypeFunctions.rotationToJson(player.getRotation())),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, simUI: IndividualSimUI<any>, newSettings: SavedSettings) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tsimUI.sim.raid.setBuffs(eventID, newSettings.raidBuffs || RaidBuffs.create());\n\t\t\t\t\tsimUI.sim.raid.setDebuffs(eventID, newSettings.debuffs || Debuffs.create());\n\t\t\t\t\tconst party = simUI.player.getParty();\n\t\t\t\t\tif (party) {\n\t\t\t\t\t\tparty.setBuffs(eventID, newSettings.partyBuffs || PartyBuffs.create());\n\t\t\t\t\t}\n\t\t\t\t\tsimUI.player.setBuffs(eventID, newSettings.playerBuffs || IndividualBuffs.create());\n\t\t\t\t\tsimUI.player.setConsumes(eventID, newSettings.consumes || Consumes.create());\n\t\t\t\t\tsimUI.player.setRace(eventID, newSettings.race);\n\t\t\t\t\tsimUI.player.setCooldowns(eventID, newSettings.cooldowns || Cooldowns.create());\n\t\t\t\t\tif (newSettings.rotationJson) {\n\t\t\t\t\t\tsimUI.player.setRotation(eventID, simUI.player.specTypeFunctions.rotationFromJson(JSON.parse(newSettings.rotationJson)));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [\n\t\t\t\tthis.simUI.sim.raid.buffsChangeEmitter,\n\t\t\t\tthis.simUI.sim.raid.debuffsChangeEmitter,\n\t\t\t\tthis.simUI.player.getParty()!.buffsChangeEmitter,\n\t\t\t\tthis.simUI.player.buffsChangeEmitter,\n\t\t\t\tthis.simUI.player.consumesChangeEmitter,\n\t\t\t\tthis.simUI.player.raceChangeEmitter,\n\t\t\t\tthis.simUI.player.cooldownsChangeEmitter,\n\t\t\t\tthis.simUI.player.rotationChangeEmitter,\n\t\t\t],\n\t\t\tequals: (a: SavedSettings, b: SavedSettings) => SavedSettings.equals(a, b),\n\t\t\ttoJson: (a: SavedSettings) => SavedSettings.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedSettings.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t\tsavedSettingsManager.loadUserData();\n\t\t});\n  }\n\n\tprivate configureInputSection(sectionElem: HTMLElement, sectionConfig: InputSection) {\n\t\tsectionConfig.inputs.forEach(inputConfig => {\n\t\t\tif (inputConfig.type == 'number') {\n\t\t\t\tnew NumberPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'boolean') {\n\t\t\t\tnew BooleanPicker(sectionElem, this.simUI.player, {...inputConfig, ...{cssScheme: this.simUI.cssScheme}});\n\t\t\t} else if (inputConfig.type == 'enum') {\n\t\t\t\tnew EnumPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'customRotation') {\n\t\t\t\tnew CustomRotationPicker(sectionElem, this.simUI, this.simUI.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'itemSwap'){\n\t\t\t\tnew ItemSwapPicker(sectionElem, this.simUI, this.simUI.player, inputConfig)\n\t\t\t}\n\t\t});\n\t};\n\n\tprivate configureIconSection(sectionElem: HTMLElement, iconPickers: Array<any>, adjustColumns?: boolean) {\n\t\tif (iconPickers.length == 0) {\n\t\t\tsectionElem.classList.add('hide');\n\t\t} else if (adjustColumns) {\n\t\t\tif (iconPickers.length <= 4) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${iconPickers.length}, 1fr)`;\n\t\t\t} else if (iconPickers.length > 4 && iconPickers.length < 8) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${Math.ceil(iconPickers.length / 2)}, 1fr)`;\n\t\t\t}\n\t\t}\n\t};\n}\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface DropdownValueConfig<T> {\n\tvalue: T,\n}\n\nexport interface DropdownPickerConfig<ModObject, T> extends InputConfig<ModObject, T> {\n\tvalues: Array<DropdownValueConfig<T>>;\n    equals: (a: T|undefined, b: T|undefined) => boolean,\n    setOptionContent: (button: HTMLButtonElement, valueConfig: DropdownValueConfig<T>) => void,\n    defaultLabel: string,\n}\n\n/** UI Input that uses a dropdown menu. */\nexport class DropdownPicker<ModObject, T> extends Input<ModObject, T> {\n    private readonly config: DropdownPickerConfig<ModObject, T>;\n    private valueConfigs: Array<DropdownValueConfig<T>>;\n\n\tprivate readonly buttonElem: HTMLButtonElement;\n\tprivate readonly listElem: HTMLUListElement;\n\n    private currentSelection: DropdownValueConfig<T>|null;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: DropdownPickerConfig<ModObject, T>) {\n\t\tsuper(parent, 'dropdown-picker-root', modObject, config);\n        this.config = config;\n        this.valueConfigs = this.config.values;\n        this.currentSelection = null;\n\n        this.rootElem.classList.add('dropdown');\n\n\t\tthis.buttonElem = document.createElement('button');\n\t\tthis.buttonElem.classList.add('dropdown-picker-button', 'btn', 'dropdown-toggle', 'hidden-arrow');\n        this.buttonElem.setAttribute('data-bs-toggle', 'dropdown');\n        this.buttonElem.textContent = config.defaultLabel;\n\t\tthis.rootElem.appendChild(this.buttonElem);\n\n\t\tthis.listElem = document.createElement('ul');\n\t\tthis.listElem.classList.add('dropdown-picker-list', 'dropdown-menu');\n\t\tthis.rootElem.appendChild(this.listElem);\n\n        this.buildDropdown(this.valueConfigs);\n\t\tthis.init();\n\t}\n\n    setOptions(newValueConfigs: Array<DropdownValueConfig<T>>) {\n        this.valueConfigs = newValueConfigs;\n        this.buildDropdown(this.valueConfigs);\n        this.setInputValue(this.getSourceValue());\n    }\n\n    private buildDropdown(valueConfigs: Array<DropdownValueConfig<T>>) {\n        this.listElem.innerHTML = '';\n\t\tvalueConfigs.forEach(valueConfig => {\n            const itemElem = document.createElement('li');\n            itemElem.classList.add('dropdown-picker-item');\n\n            const buttonElem = document.createElement('button');\n            buttonElem.classList.add('dropdown-item');\n            buttonElem.type = 'button';\n            this.config.setOptionContent(buttonElem, valueConfig);\n\n            itemElem.appendChild(buttonElem);\n\n            buttonElem.addEventListener('click', event => {\n                this.updateValue(valueConfig);\n                this.inputChanged(TypedEvent.nextEventID());\n            });\n            this.listElem.appendChild(itemElem);\n\t\t});\n    }\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.listElem;\n\t}\n\n\tgetInputValue(): T {\n\t\treturn this.currentSelection?.value as T;\n\t}\n\n\tsetInputValue(newValue: T) {\n        const newSelection = this.valueConfigs.find(v => this.config.equals(v.value, newValue))!;\n        this.updateValue(newSelection);\n\t}\n\n    private updateValue(newValue: DropdownValueConfig<T>|null) {\n        this.currentSelection = newValue;\n\n        // Update button\n        if (newValue) {\n            this.buttonElem.innerHTML = '';\n            this.config.setOptionContent(this.buttonElem, newValue);\n        } else {\n            this.buttonElem.textContent = this.config.defaultLabel;\n        }\n    }\n}\n\nexport interface TextDropdownValueConfig<T> extends DropdownValueConfig<T> {\n    label: string,\n}\n\nexport interface TextDropdownPickerConfig<ModObject, T> extends Omit<DropdownPickerConfig<ModObject, T>, 'values' | 'setOptionContent'> {\n\tvalues: Array<TextDropdownValueConfig<T>>,\n}\n\nexport class TextDropdownPicker<ModObject, T> extends DropdownPicker<ModObject, T> {\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: TextDropdownPickerConfig<ModObject, T>) {\n\t\tsuper(parent, modObject, {\n\t\t\t...config,\n            setOptionContent: (button: HTMLButtonElement, valueConfig: DropdownValueConfig<T>) => {\n                button.textContent = (valueConfig as TextDropdownValueConfig<T>).label;\n            }\n\t\t});\n\t}\n}","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a string picker.\n */\nexport interface StringPickerConfig<ModObject> extends InputConfig<ModObject, string> {\n}\n\n// UI element for picking an arbitrary string field.\nexport class StringPicker<ModObject> extends Input<ModObject, string> {\n\tprivate readonly inputElem: HTMLSpanElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: StringPickerConfig<ModObject>) {\n\t\tsuper(parent, 'string-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('span');\n\t\tthis.inputElem.setAttribute('contenteditable', '');\n\t\tthis.inputElem.classList.add('string-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('input', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): string {\n\t\treturn this.inputElem.textContent || '';\n\t}\n\n\tsetInputValue(newValue: string) {\n\t\tthis.inputElem.textContent = newValue;\n\t}\n}\n","import { ActionId } from '../../proto_utils/action_id.js';\nimport { Player } from '../../player.js';\nimport { DropdownPicker, DropdownPickerConfig, TextDropdownPicker } from '../dropdown_picker.js';\n\n\nexport interface APLActionIDPickerConfig<ModObject> extends Omit<DropdownPickerConfig<ModObject, ActionId>, 'equals' | 'setOptionContent'> {\n}\n\nexport class APLActionIDPicker extends DropdownPicker<Player<any>, ActionId> {\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLActionIDPickerConfig<Player<any>>) {\n\t\tsuper(parent, player, {\n\t\t\t...config,\n\t\t\tequals: (a, b) => ((a == null) == (b == null)) && (!a || a.equals(b!)),\n            setOptionContent: (button, valueConfig) => {\n\t\t\t\tconst actionId = valueConfig.value;\n\n\t\t\t\tconst iconElem = document.createElement('a');\n\t\t\t\ticonElem.classList.add('apl-actionid-item-icon');\n\t\t\t\tactionId.setBackgroundAndHref(iconElem);\n\t\t\t\tbutton.appendChild(iconElem);\n\n\t\t\t\tconst textElem = document.createTextNode(actionId.name);\n\t\t\t\tbutton.appendChild(textElem);\n\t\t\t},\n\t\t});\n\t}\n}","import { ActionID } from '../../proto/common.js';\nimport { EventID } from '../../typed_event.js';\nimport { Player } from '../../player.js';\nimport { BooleanPicker } from '../boolean_picker.js';\nimport { DropdownPicker, DropdownPickerConfig, TextDropdownPicker } from '../dropdown_picker.js';\nimport { ListItemPickerConfig, ListPicker } from '../list_picker.js';\nimport { StringPicker } from '../string_picker.js';\nimport {\n\tAPLListItem,\n\tAPLAction,\n\tAPLActionCastSpell,\n\tAPLActionSequence,\n\tAPLActionWait,\n\tAPLRotation,\n} from '../../proto/apl.js';\n\nimport { Component } from '../component.js';\nimport { Input, InputConfig } from '../input.js';\nimport { SimUI } from '../../sim_ui.js';\n\nimport * as AplActions from './apl_actions.js';\n\nexport class APLRotationPicker extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI, modPlayer: Player<any>) {\n\t\tsuper(parent, 'apl-rotation-picker-root');\n\n\t\tnew ListPicker<Player<any>, APLListItem>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: ['apl-list-item-picker'],\n\t\t\ttitle: 'Priority List',\n\t\t\ttitleTooltip: 'At each decision point, the simulation will perform the first valid action from this list.',\n\t\t\titemLabel: 'Action',\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.aplRotation.priorityList,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<APLListItem>) => {\n                player.aplRotation.priorityList = newValue;\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tnewItem: () => APLListItem.create({\n\t\t\t\taction: {},\n\t\t\t}),\n\t\t\tcopyItem: (oldItem: APLListItem) => APLListItem.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Player<any>, APLListItem>, index: number, config: ListItemPickerConfig<Player<any>, APLListItem>) => new APLListItemPicker(parent, modPlayer, index, config),\n\t\t\tinlineMenuBar: true,\n\t\t});\n\n\t\tmodPlayer.rotationChangeEmitter.on(() => console.log('APL: ' + APLRotation.toJsonString(modPlayer.aplRotation)))\n\t}\n}\n\nclass APLListItemPicker extends Input<Player<any>, APLListItem> {\n\tprivate readonly player: Player<any>;\n\tprivate readonly itemIndex: number;\n\n\tprivate readonly hidePicker: Input<null, boolean>;\n\tprivate readonly notesPicker: Input<null, string>;\n\tprivate readonly actionPicker: APLActionPicker;\n\n    private getItem(): APLListItem {\n        return this.getSourceValue() || APLListItem.create({\n\t\t\taction: {},\n\t\t});\n    }\n\n\tconstructor(parent: HTMLElement, player: Player<any>, itemIndex: number, config: ListItemPickerConfig<Player<any>, APLListItem>) {\n\t\tsuper(parent, 'apl-list-item-picker-root', player, config);\n\t\tthis.player = player;\n\t\tthis.itemIndex = itemIndex;\n\n        this.hidePicker = new BooleanPicker(this.rootElem, null, {\n            label: 'Hide',\n            labelTooltip: 'Ignores this APL action.',\n            inline: true,\n            changedEvent: () => this.player.rotationChangeEmitter,\n            getValue: () => this.getItem().hide,\n            setValue: (eventID: EventID, _: null, newValue: boolean) => {\n                this.getItem().hide = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n            },\n        });\n\n        this.notesPicker = new StringPicker(this.rootElem, null, {\n            label: 'Notes',\n            labelTooltip: 'Description for this action. The sim will ignore this value, it\\'s just to allow self-documentation.',\n            inline: true,\n            changedEvent: () => this.player.rotationChangeEmitter,\n            getValue: () => this.getItem().notes,\n            setValue: (eventID: EventID, _: null, newValue: string) => {\n                this.getItem().notes = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n            },\n        });\n\n        this.actionPicker = new APLActionPicker(this.rootElem, this.player, {\n            changedEvent: () => this.player.rotationChangeEmitter,\n            getValue: () => this.getItem().action!,\n            setValue: (eventID: EventID, player: Player<any>, newValue: APLAction) => {\n                this.getItem().action = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n            },\n        });\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n    getInputValue(): APLListItem {\n        const item = APLListItem.create({\n\t\t\thide: this.hidePicker.getInputValue(),\n\t\t\tnotes: this.notesPicker.getInputValue(),\n\t\t\taction: this.actionPicker.getInputValue(),\n\t\t});\n\t\treturn item;\n    }\n\n\tsetInputValue(newValue: APLListItem) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hidePicker.setInputValue(newValue.hide);\n\t\tthis.notesPicker.setInputValue(newValue.notes);\n\t\tthis.actionPicker.setInputValue(newValue.action || APLAction.create());\n\t}\n}\n\nexport interface APLActionPickerConfig extends InputConfig<Player<any>, APLAction> {\n}\n\ntype APLActionType = APLAction['action']['oneofKind'];\n\nclass APLActionPicker extends Input<Player<any>, APLAction> {\n\n\tprivate typePicker: TextDropdownPicker<Player<any>, APLActionType>;\n\n\tprivate currentType: APLActionType;\n\tprivate actionPicker: Input<Player<any>, any>|null;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLActionPickerConfig) {\n\t\tsuper(parent, 'apl-action-picker-root', player, config);\n\n\t\tconst allActionTypes = Object.keys(APLActionPicker.actionTypeFactories) as Array<NonNullable<APLActionType>>;\n\t\tthis.typePicker = new TextDropdownPicker(this.rootElem, player, {\n            defaultLabel: 'Action',\n\t\t\tvalues: allActionTypes.map(actionType => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: actionType,\n\t\t\t\t\tlabel: APLActionPicker.actionTypeFactories[actionType].label,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tequals: (a, b) => a == b,\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => this.getSourceValue().action.oneofKind,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: APLActionType) => {\n\t\t\t\tconst action = this.getSourceValue();\n\t\t\t\tif (action.action.oneofKind == newValue) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (newValue) {\n\t\t\t\t\tconst factory = APLActionPicker.actionTypeFactories[newValue];\n\t\t\t\t\tconst obj: any = { oneofKind: newValue };\n\t\t\t\t\tobj[newValue] = factory.newValue();\n\t\t\t\t\taction.action = obj;\n\t\t\t\t} else {\n\t\t\t\t\taction.action = {\n\t\t\t\t\t\toneofKind: newValue,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.currentType = undefined;\n\t\tthis.actionPicker = null;\n\n\t\tthis.init();\n\t\t//player.rotationChangeEmitter.on(() => this.updateActionPicker(this.typePicker.getInputValue()));\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n    getInputValue(): APLAction {\n\t\tconst actionType = this.typePicker.getInputValue();\n        return APLAction.create({\n\t\t\taction: {\n\t\t\t\toneofKind: actionType,\n\t\t\t\t...((() => {\n\t\t\t\t\tif (!actionType || !this.actionPicker) return;\n\t\t\t\t\tconst val: any = {};\n\t\t\t\t\tval[actionType] = this.actionPicker.getInputValue();\n\t\t\t\t\treturn val;\n\t\t\t\t})()),\n\t\t\t},\n\t\t})\n    }\n\n\tsetInputValue(newValue: APLAction) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newActionType = newValue.action.oneofKind;\n\t\tthis.updateActionPicker(newActionType);\n\n\t\tif (newActionType) {\n\t\t\tthis.actionPicker!.setInputValue((newValue.action as any)[newActionType]);\n\t\t}\n\t}\n\n\tprivate updateActionPicker(newActionType: APLActionType) {\n\t\tconst actionType = this.currentType;\n\t\tif (newActionType == actionType) {\n\t\t\treturn;\n\t\t}\n\t\tthis.currentType = newActionType;\n\n\t\tif (this.actionPicker) {\n\t\t\tthis.actionPicker.rootElem.remove();\n\t\t\tthis.actionPicker = null;\n\t\t}\n\n\t\tif (!newActionType) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.typePicker.setInputValue(newActionType);\n\n\t\tconst factory = APLActionPicker.actionTypeFactories[newActionType];\n\t\tthis.actionPicker = new factory.factory(this.rootElem, this.modObject, {\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: () => (this.getSourceValue().action as any)[newActionType] || factory.newValue(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: any) => {\n\t\t\t\t(this.getSourceValue().action as any)[newActionType] = newValue;\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate static actionTypeFactories: Record<NonNullable<APLActionType>, { label: string, newValue: () => object, factory: new (parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, any>) => Input<Player<any>, any> }>  = {\n\t\t['castSpell']: { label: 'Cast', newValue: APLActionCastSpell.create, factory: AplActions.APLActionCastSpellPicker },\n\t\t['sequence']: { label: 'Sequence', newValue: APLActionSequence.create, factory: AplActions.APLActionSequencePicker },\n\t\t['wait']: { label: 'Wait', newValue: APLActionWait.create, factory: AplActions.APLActionWaitPicker },\n\t};\n}\n","import {\n\tAPLListItem,\n\tAPLAction,\n\tAPLActionCastSpell,\n\tAPLActionSequence,\n\tAPLActionWait,\n} from '../../proto/apl.js';\n\nimport { ActionID, Spec } from '../../proto/common.js';\nimport { EventID } from '../../typed_event.js';\nimport { Input, InputConfig } from '../input.js';\nimport { ActionId } from '../../proto_utils/action_id.js';\nimport { Player } from '../../player.js';\nimport { stringComparator } from '../../utils.js';\n\nimport * as AplHelpers from './apl_helpers.js';\n\nexport class APLActionCastSpellPicker extends Input<Player<any>, APLActionCastSpell> {\n\tprivate readonly spellIdPicker: AplHelpers.APLActionIDPicker;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, APLActionCastSpell>) {\n\t\tsuper(parent, 'apl-action-cast-spell-picker-root', player, config);\n\n        this.spellIdPicker = new AplHelpers.APLActionIDPicker(this.rootElem, player, {\n            defaultLabel: 'Spell',\n\t\t\tvalues: [],\n            changedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n            getValue: () => ActionId.fromProto(this.getSourceValue().spellId || ActionID.create()),\n            setValue: (eventID: EventID, player: Player<any>, newValue: ActionId) => {\n                this.getSourceValue().spellId = newValue.toProto();\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n            },\n        });\n\n\t\tthis.init();\n\n\t\tconst updateValues = async () => {\n\t\t\tconst playerStats = player.getCurrentStats();\n\t\t\tconst spellPromises = Promise.all(playerStats.spells.map(spell => ActionId.fromProto(spell).fill()));\n\t\t\tconst cooldownPromises = Promise.all(playerStats.cooldowns.map(cd => ActionId.fromProto(cd).fill()));\n\n\t\t\tlet [spells, cooldowns] = await Promise.all([spellPromises, cooldownPromises]);\n            spells = spells.sort((a, b) => stringComparator(a.name, b.name))\n            cooldowns = cooldowns.sort((a, b) => stringComparator(a.name, b.name))\n\n\t\t\tconst values = [...spells, ...cooldowns].map(actionId => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: actionId,\n\t\t\t\t};\n\t\t\t});\n            this.spellIdPicker.setOptions(values);\n\t\t};\n        updateValues();\n        player.currentStatsEmitter.on(updateValues);\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n    getInputValue(): APLActionCastSpell {\n        return APLActionCastSpell.create({\n\t\t\tspellId: this.spellIdPicker.getInputValue(),\n\t\t})\n    }\n\n\tsetInputValue(newValue: APLActionCastSpell) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.spellIdPicker.setInputValue(ActionId.fromProto(newValue.spellId || ActionID.create()));\n\t}\n}\n\nexport class APLActionSequencePicker extends Input<Player<any>, APLActionSequence> {\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, APLActionSequence>) {\n\t\tsuper(parent, 'apl-action-sequence-picker-root', player, config);\n\t\tthis.init();\n    }\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n    getInputValue(): APLActionSequence {\n        return APLActionSequence.create({\n\t\t})\n    }\n\n\tsetInputValue(newValue: APLActionSequence) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport class APLActionWaitPicker extends Input<Player<any>, APLActionWait> {\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, APLActionWait>) {\n\t\tsuper(parent, 'apl-action-wait-picker-root', player, config);\n\t\tthis.init();\n    }\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n    getInputValue(): APLActionWait {\n        return APLActionWait.create({\n\t\t})\n    }\n\n\tsetInputValue(newValue: APLActionWait) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t}\n}","import { IndividualSimUI } from \"../../individual_sim_ui\";\nimport {\n\tConsumes,\n\tCooldowns,\n\tDebuffs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tProfession,\n\tRaidBuffs,\n\tSpec,\n\tStat\n} from \"../../proto/common\";\nimport { ActionId } from \"../../proto_utils/action_id\";\nimport { EventID, TypedEvent } from \"../../typed_event\";\nimport { getEnumValues } from \"../../utils\";\nimport { Player } from \"../../player\";\n\nimport { SimTab } from \"../sim_tab\";\nimport { NumberPicker } from \"../number_picker\";\nimport { BooleanPicker } from \"../boolean_picker\";\nimport { EnumPicker } from \"../enum_picker\";\nimport { Input } from \"../input\";\nimport { MultiIconPicker } from \"../multi_icon_picker\";\nimport { IconPickerConfig } from \"../icon_picker\";\nimport { TypedIconPickerConfig } from \"../input_helpers\";\n\nimport { APLRotationPicker } from \"./apl_rotation_picker\";\n\nexport class RotationTab extends SimTab {\n  protected simUI: IndividualSimUI<Spec>;\n\n  readonly leftPanel: HTMLElement;\n  readonly rightPanel: HTMLElement;\n\n  constructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n    super(parentElem, simUI, {identifier: 'rotation-tab', title: 'Rotation'});\n    this.rootElem.classList.add('experimental');\n    this.simUI = simUI;\n\n    this.leftPanel = document.createElement('div');\n    this.leftPanel.classList.add('rotation-tab-left', 'tab-panel-left');\n\n    this.rightPanel = document.createElement('div');\n    this.rightPanel.classList.add('rotation-tab-right', 'tab-panel-right');\n\n    this.contentContainer.appendChild(this.leftPanel);\n    this.contentContainer.appendChild(this.rightPanel);\n\n    this.buildTabContent();\n  }\n\n  protected buildTabContent() {\n\tthis.buildHeader();\n\tthis.buildContent();\n  }\n\n  private buildHeader() {\n\tconst header = document.createElement('div');\n\theader.classList.add('rotation-tab-header');\n\tthis.leftPanel.appendChild(header);\n\n\tnew BooleanPicker(header, this.simUI.player, {\n\t\tlabel: 'Use APL Rotation',\n\t\tlabelTooltip: 'Enables the APL Rotation options.',\n\t\tinline: true,\n\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\tgetValue: (player: Player<any>) => player.aplRotation.enabled,\n\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\t\tplayer.aplRotation.enabled = newValue;\n\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t},\n\t});\n  }\n\n  private buildContent() {\n\tconst content = document.createElement('div');\n\tcontent.classList.add('rotation-tab-main');\n\tthis.leftPanel.appendChild(content);\n\n\tnew APLRotationPicker(content, this.simUI, this.simUI.player);\n  }\n}\n","import { Spec } from '../proto/common.js';\nimport { HunterPetTalents, Hunter_Options_PetType as PetType } from '../proto/hunter.js';\nimport { Player } from '../player.js';\nimport { Component } from '../components/component.js';\nimport { EnumPicker, EnumPickerConfig } from '../components/enum_picker.js';\nimport { SavedDataManager } from '../components/saved_data_manager.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ActionId } from '../proto_utils/action_id.js';\n\nimport { TalentsConfig, TalentsPicker, newTalentsConfig } from './talents_picker.js';\nimport { protoToTalentString, talentStringToProto } from './factory.js';\n\nimport * as InputHelpers from '../components/input_helpers.js';\nimport { SimUI } from '../sim_ui.js';\n\nimport HunterPetCunningJson from './trees/hunter_cunning.json'\nimport HunterPetFerocityJson from './trees/hunter_ferocity.json'\nimport HunterPetTenacityJson from './trees/hunter_tenacity.json'\n\nexport function makePetTypeInputConfig(includeLabel: boolean): InputHelpers.TypedIconEnumPickerConfig<Player<Spec.SpecHunter>, PetType> {\n\treturn InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecHunter, PetType>({\n\t\tfieldName: 'petType',\n\t\tnumColumns: 5,\n\t\t//label: includeLabel ? 'Pet' : '',\n\t\tvalues: [\n\t\t\t{ value: PetType.PetNone, tooltip: 'No Pet' },\n\t\t\t{ actionId: ActionId.fromPetName('Bat'), tooltip: 'Bat', value: PetType.Bat },\n\t\t\t{ actionId: ActionId.fromPetName('Bear'), tooltip: 'Bear', value: PetType.Bear },\n\t\t\t{ actionId: ActionId.fromPetName('Bird of Prey'), tooltip: 'Bird of Prey', value: PetType.BirdOfPrey },\n\t\t\t{ actionId: ActionId.fromPetName('Boar'), tooltip: 'Boar', value: PetType.Boar },\n\t\t\t{ actionId: ActionId.fromPetName('Carrion Bird'), tooltip: 'Carrion Bird', value: PetType.CarrionBird },\n\t\t\t{ actionId: ActionId.fromPetName('Cat'), tooltip: 'Cat', value: PetType.Cat },\n\t\t\t{ actionId: ActionId.fromPetName('Chimaera'), tooltip: 'Chimaera (Exotic)', value: PetType.Chimaera },\n\t\t\t{ actionId: ActionId.fromPetName('Core Hound'), tooltip: 'Core Hound (Exotic)', value: PetType.CoreHound },\n\t\t\t{ actionId: ActionId.fromPetName('Crab'), tooltip: 'Crab', value: PetType.Crab },\n\t\t\t{ actionId: ActionId.fromPetName('Crocolisk'), tooltip: 'Crocolisk', value: PetType.Crocolisk },\n\t\t\t{ actionId: ActionId.fromPetName('Devilsaur'), tooltip: 'Devilsaur (Exotic)', value: PetType.Devilsaur },\n\t\t\t{ actionId: ActionId.fromPetName('Dragonhawk'), tooltip: 'Dragonhawk', value: PetType.Dragonhawk },\n\t\t\t{ actionId: ActionId.fromPetName('Gorilla'), tooltip: 'Gorilla', value: PetType.Gorilla },\n\t\t\t{ actionId: ActionId.fromPetName('Hyena'), tooltip: 'Hyena', value: PetType.Hyena },\n\t\t\t{ actionId: ActionId.fromPetName('Moth'), tooltip: 'Moth', value: PetType.Moth },\n\t\t\t{ actionId: ActionId.fromPetName('Nether Ray'), tooltip: 'Nether Ray', value: PetType.NetherRay },\n\t\t\t{ actionId: ActionId.fromPetName('Raptor'), tooltip: 'Raptor', value: PetType.Raptor },\n\t\t\t{ actionId: ActionId.fromPetName('Ravager'), tooltip: 'Ravager', value: PetType.Ravager },\n\t\t\t{ actionId: ActionId.fromPetName('Rhino'), tooltip: 'Rhino', value: PetType.Rhino },\n\t\t\t{ actionId: ActionId.fromPetName('Scorpid'), tooltip: 'Scorpid', value: PetType.Scorpid },\n\t\t\t{ actionId: ActionId.fromPetName('Serpent'), tooltip: 'Serpent', value: PetType.Serpent },\n\t\t\t{ actionId: ActionId.fromPetName('Silithid'), tooltip: 'Silithid (Exotic)', value: PetType.Silithid },\n\t\t\t{ actionId: ActionId.fromPetName('Spider'), tooltip: 'Spider', value: PetType.Spider },\n\t\t\t{ actionId: ActionId.fromPetName('Spirit Beast'), tooltip: 'Spirit Beast (Exotic)', value: PetType.SpiritBeast },\n\t\t\t{ actionId: ActionId.fromPetName('Spore Bat'), tooltip: 'Spore Bat', value: PetType.SporeBat },\n\t\t\t{ actionId: ActionId.fromPetName('Tallstrider'), tooltip: 'Tallstrider', value: PetType.Tallstrider },\n\t\t\t{ actionId: ActionId.fromPetName('Turtle'), tooltip: 'Turtle', value: PetType.Turtle },\n\t\t\t{ actionId: ActionId.fromPetName('Warp Stalker'), tooltip: 'Warp Stalker', value: PetType.WarpStalker },\n\t\t\t{ actionId: ActionId.fromPetName('Wasp'), tooltip: 'Wasp', value: PetType.Wasp },\n\t\t\t{ actionId: ActionId.fromPetName('Wind Serpent'), tooltip: 'Wind Serpent', value: PetType.WindSerpent },\n\t\t\t{ actionId: ActionId.fromPetName('Wolf'), tooltip: 'Wolf', value: PetType.Wolf },\n\t\t\t{ actionId: ActionId.fromPetName('Worm'), tooltip: 'Worm (Exotic)', value: PetType.Worm },\n\t\t],\n\t});\n}\n\nenum PetCategory {\n\tCunning,\n\tFerocity,\n\tTenacity,\n}\n\nconst petCategories: Record<PetType, PetCategory> = {\n\t[PetType.PetNone]: PetCategory.Ferocity,\n\t[PetType.Bat]: PetCategory.Cunning,\n\t[PetType.Bear]: PetCategory.Tenacity,\n\t[PetType.BirdOfPrey]: PetCategory.Cunning,\n\t[PetType.Boar]: PetCategory.Tenacity,\n\t[PetType.CarrionBird]: PetCategory.Ferocity,\n\t[PetType.Cat]: PetCategory.Ferocity,\n\t[PetType.Chimaera]: PetCategory.Cunning,\n\t[PetType.CoreHound]: PetCategory.Ferocity,\n\t[PetType.Crab]: PetCategory.Tenacity,\n\t[PetType.Crocolisk]: PetCategory.Tenacity,\n\t[PetType.Devilsaur]: PetCategory.Ferocity,\n\t[PetType.Dragonhawk]: PetCategory.Cunning,\n\t[PetType.Gorilla]: PetCategory.Tenacity,\n\t[PetType.Hyena]: PetCategory.Ferocity,\n\t[PetType.Moth]: PetCategory.Ferocity,\n\t[PetType.NetherRay]: PetCategory.Cunning,\n\t[PetType.Raptor]: PetCategory.Ferocity,\n\t[PetType.Ravager]: PetCategory.Cunning,\n\t[PetType.Rhino]: PetCategory.Tenacity,\n\t[PetType.Scorpid]: PetCategory.Tenacity,\n\t[PetType.Serpent]: PetCategory.Cunning,\n\t[PetType.Silithid]: PetCategory.Cunning,\n\t[PetType.Spider]: PetCategory.Cunning,\n\t[PetType.SpiritBeast]: PetCategory.Ferocity,\n\t[PetType.SporeBat]: PetCategory.Cunning,\n\t[PetType.Tallstrider]: PetCategory.Ferocity,\n\t[PetType.Turtle]: PetCategory.Tenacity,\n\t[PetType.WarpStalker]: PetCategory.Tenacity,\n\t[PetType.Wasp]: PetCategory.Ferocity,\n\t[PetType.WindSerpent]: PetCategory.Cunning,\n\t[PetType.Wolf]: PetCategory.Ferocity,\n\t[PetType.Worm]: PetCategory.Tenacity,\n};\n\nconst categoryOrder = [PetCategory.Cunning, PetCategory.Ferocity, PetCategory.Tenacity];\nconst categoryClasses = ['cunning', 'ferocity', 'tenacity'];\n\nexport class HunterPetTalentsPicker extends Component {\n\tprivate readonly simUI: SimUI;\n\tprivate readonly player: Player<Spec.SpecHunter>;\n\tprivate curCategory: PetCategory | null;\n\tprivate curTalents: HunterPetTalents;\n\n\t// Not saved to storage, just holds last-used values for this session.\n\tprivate savedSets: Array<HunterPetTalents>;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<Spec.SpecHunter>) {\n\t\tsuper(parent, 'hunter-pet-talents-picker');\n\t\tthis.simUI = simUI;\n\t\tthis.player = player;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"pet-talents-container\"></div>\n\t\t`;\n\n\t\tthis.curCategory = this.getCategoryFromPlayer();\n\t\tthis.curTalents = this.getPetTalentsFromPlayer();\n\t\tthis.savedSets = defaultTalents.slice();\n\t\tthis.savedSets[this.curCategory] = this.curTalents;\n\t\tthis.rootElem.classList.add(categoryClasses[this.curCategory]);\n\n\t\tconst talentsContainer = this.rootElem.getElementsByClassName('pet-talents-container')[0] as HTMLElement;\n\n\t\tconst pickers = categoryOrder.map((category, i) => {\n\t\t\tconst talentsConfig = petTalentsConfig[i];\n\n\t\t\tconst pickerContainer = document.createElement('div');\n\t\t\tpickerContainer.classList.add('hunter-pet-talents-' + categoryClasses[i]);\n\t\t\ttalentsContainer.appendChild(pickerContainer);\n\n\t\t\tconst picker = new TalentsPicker(pickerContainer, player, {\n\t\t\t\ttrees: talentsConfig,\n\t\t\t\tchangedEvent: (player: Player<Spec.SpecHunter>) => player.specOptionsChangeEmitter,\n\t\t\t\tgetValue: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n\t\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n\t\t\t\t\tconst options = player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n\t\t\t\t\tplayer.setSpecOptions(eventID, options);\n\n\t\t\t\t\tthis.savedSets[i] = options.petTalents;\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t},\n\t\t\t\tpointsPerRow: 3,\n\t\t\t\tmaxPoints: 16,\n\t\t\t});\n\n\t\t\tconst savedTalentsManager = new SavedDataManager<Player<Spec.SpecHunter>, string>(pickerContainer, this.simUI, this.player, {\n\t\t\t\tpresetsOnly: true,\n\t\t\t\tlabel: 'Pet Talents',\n\t\t\t\tstorageKey: '__NEVER_USED__',\n\t\t\t\tgetData: (player: Player<Spec.SpecHunter>) => protoToTalentString(this.getPetTalentsFromPlayer(), talentsConfig),\n\t\t\t\tsetData: (eventID: EventID, player: Player<Spec.SpecHunter>, newValue: string) => {\n\t\t\t\t\tconst options = player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = talentStringToProto(HunterPetTalents.create(), newValue, talentsConfig);\n\t\t\t\t\tplayer.setSpecOptions(eventID, options);\n\n\t\t\t\t\tthis.savedSets[i] = options.petTalents;\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t},\n\t\t\t\tchangeEmitters: [this.player.specOptionsChangeEmitter],\n\t\t\t\tequals: (a: string, b: string) => a == b,\n\t\t\t\ttoJson: (a: string) => a,\n\t\t\t\tfromJson: (obj: any) => '',\n\t\t\t});\n\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\tname: 'Default',\n\t\t\t\tisPreset: true,\n\t\t\t\tdata: protoToTalentString(defaultTalents[i], talentsConfig),\n\t\t\t});\n\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\tname: 'BM',\n\t\t\t\tisPreset: true,\n\t\t\t\tdata: protoToTalentString(defaultBMTalents[i], talentsConfig),\n\t\t\t});\n\n\t\t\treturn picker;\n\t\t});\n\n\t\tplayer.specOptionsChangeEmitter.on(() => {\n\t\t\tconst petCategory = this.getCategoryFromPlayer();\n\t\t\tconst categoryIdx = categoryOrder.indexOf(petCategory);\n\n\t\t\tif (petCategory != this.curCategory) {\n\t\t\t\tthis.curCategory = petCategory;\n\t\t\t\tthis.rootElem.classList.remove(...categoryClasses);\n\t\t\t\tthis.rootElem.classList.add(categoryClasses[categoryIdx]);\n\n\t\t\t\tconst curTalents = this.getPetTalentsFromPlayer();\n\t\t\t\tif (!HunterPetTalents.equals(curTalents, this.curTalents)) {\n\t\t\t\t\t// If the current talents have also changed, this was probably a load so we shouldn't switch sets.\n\t\t\t\t\tthis.curTalents = curTalents;\n\t\t\t\t\tthis.savedSets[this.curCategory] = this.curTalents;\n\t\t\t\t} else {\n\t\t\t\t\t// Revert to the talents from last time the user was editing this category.\n\t\t\t\t\tconst options = this.player.getSpecOptions();\n\t\t\t\t\toptions.petTalents = this.savedSets[this.curCategory];\n\t\t\t\t\tthis.player.setSpecOptions(TypedEvent.nextEventID(), options);\n\t\t\t\t\tthis.curTalents = options.petTalents;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst updateIsBM = () => {\n\t\t\tconst maxPoints = this.player.getTalents().beastMastery ? 20 : 16;\n\t\t\tpickers.forEach(picker => picker.setMaxPoints(maxPoints));\n\t\t};\n\t\tplayer.talentsChangeEmitter.on(updateIsBM);\n\t\tupdateIsBM();\n\t}\n\n\tgetPetTalentsFromPlayer(): HunterPetTalents {\n\t\treturn this.player.getSpecOptions().petTalents || HunterPetTalents.create();\n\t}\n\n\tgetCategoryFromPlayer(): PetCategory {\n\t\tconst petType = this.player.getSpecOptions().petType;\n\t\treturn petCategories[petType];\n\t}\n}\n\nexport function getPetTalentsConfig(petType: PetType): TalentsConfig<HunterPetTalents> {\n\tconst petCategory = petCategories[petType];\n\tconst categoryIdx = categoryOrder.indexOf(petCategory);\n\treturn petTalentsConfig[categoryIdx];\n}\n\nexport const cunningDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tboarsSpeed: true,\n\tmobility: 2,\n\tspikedCollar: 3,\n\tcornered: 2,\n\tfeedingFrenzy: 2,\n\twolverineBite: true,\n\tbullheaded: true,\n\twildHunt: 1,\n});\nexport const ferocityDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tspikedCollar: 3,\n\tboarsSpeed: true,\n\tcullingTheHerd: 3,\n\tspidersBite: 3,\n\trabid: true,\n\tcallOfTheWild: true,\n\twildHunt: 1,\n});\nexport const tenacityDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tcharge: true,\n\tgreatStamina: 3,\n\tbloodOfTheRhino: 2,\n\tguardDog: 2,\n\tthunderstomp: true,\n\tgraceOfTheMantis: 2,\n\ttaunt: true,\n\troarOfSacrifice: true,\n\twildHunt: 1,\n});\nconst defaultTalents = [cunningDefault, ferocityDefault, tenacityDefault];\n\nexport const cunningBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tboarsSpeed: true,\n\tmobility: 2,\n\tspikedCollar: 3,\n\tcornered: 2,\n\tfeedingFrenzy: 2,\n\twolverineBite: true,\n\tbullheaded: true,\n\tgraceOfTheMantis: 2,\n\twildHunt: 2,\n\troarOfSacrifice: true,\n});\nexport const ferocityBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tdive: true,\n\tbloodthirsty: 1,\n\tspikedCollar: 3,\n\tboarsSpeed: true,\n\tcullingTheHerd: 3,\n\tspidersBite: 3,\n\trabid: true,\n\tcallOfTheWild: true,\n\tsharkAttack: 2,\n\twildHunt: 2,\n});\nexport const tenacityBMDefault: HunterPetTalents = HunterPetTalents.create({\n\tcobraReflexes: 2,\n\tcharge: true,\n\tgreatStamina: 3,\n\tspikedCollar: 3,\n\tbloodOfTheRhino: 2,\n\tguardDog: 2,\n\tthunderstomp: true,\n\tgraceOfTheMantis: 2,\n\ttaunt: true,\n\troarOfSacrifice: true,\n\twildHunt: 2,\n});\nconst defaultBMTalents = [cunningBMDefault, ferocityBMDefault, tenacityBMDefault];\n\nconst cunningPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig(HunterPetCunningJson);\nconst ferocityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig(HunterPetFerocityJson);\nconst tenacityPetTalentsConfig: TalentsConfig<HunterPetTalents> = newTalentsConfig(HunterPetTenacityJson);\n\nconst petTalentsConfig = [\n\tcunningPetTalentsConfig,\n\tferocityPetTalentsConfig,\n\ttenacityPetTalentsConfig,\n];\n","import { IndividualSimUI } from '../individual_sim_ui';\nimport { SimUI } from '../sim_ui';\nimport {\n\tPseudoStat,\n\tSpec,\n\tStat\n} from '../proto/common';\nimport { IndividualSimSettings } from '../proto/ui';\nimport { classNames, raceNames } from '../proto_utils/names';\nimport { UnitStat } from '../proto_utils/stats';\nimport { specNames } from '../proto_utils/utils';\nimport { downloadString } from '../utils';\nimport { BaseModal } from './base_modal';\nimport { IndividualWowheadGearPlannerImporter } from './importers';\nimport { RaidSimRequest } from '../proto/api';\n\nimport * as Mechanics from '../constants/mechanics';\n\nexport abstract class Exporter extends BaseModal {\n\tprivate readonly textElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, title: string, allowDownload: boolean) {\n\t\tsuper(parent, 'exporter', {title: title, footer: true});\n\n\t\tthis.body.innerHTML = `\n\t\t\t<textarea class=\"exporter-textarea form-control\"></textarea>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t<button class=\"exporter-button btn btn-primary clipboard-button me-2\">\n\t\t\t\t<i class=\"fas fa-clipboard\"></i>\n\t\t\t\tCopy to Clipboard\n\t\t\t</button>\n\t\t\t${allowDownload ? `\n\t\t\t\t<button class=\"exporter-button btn btn-primary download-button\">\n\t\t\t\t\t<i class=\"fa fa-download\"></i>\n\t\t\t\t\tDownload\n\t\t\t\t</button>\n\t\t\t` : ''\n\t\t\t}\n\t\t`;\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('exporter-textarea')[0] as HTMLElement;\n\n\t\tconst clipboardButton = this.rootElem.getElementsByClassName('clipboard-button')[0] as HTMLElement;\n\t\tclipboardButton.addEventListener('click', event => {\n\t\t\tconst data = this.textElem.textContent!;\n\t\t\tif (navigator.clipboard == undefined) {\n\t\t\t\talert(data);\n\t\t\t} else {\n\t\t\t\tnavigator.clipboard.writeText(data);\n\t\t\t\tconst originalContent = clipboardButton.innerHTML;\n\t\t\t\tclipboardButton.style.width = `${clipboardButton.getBoundingClientRect().width.toFixed(3)}px`;\n\t\t\t\tclipboardButton.innerHTML = `<i class=\"fas fa-check\"></i>&nbsp;Copied`;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tclipboardButton.innerHTML = originalContent;\n\t\t\t\t}, 1500);\n\t\t\t}\n\t\t});\n\n\t\tif (allowDownload) {\n\t\t\tconst downloadButton = this.rootElem.getElementsByClassName('download-button')[0] as HTMLElement;\n\t\t\tdownloadButton.addEventListener('click', event => {\n\t\t\t\tconst data = this.textElem.textContent!;\n\t\t\t\tdownloadString(data, 'wowsims.json');\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected init() {\n\t\tthis.textElem.textContent = this.getData();\n\t}\n\n\tabstract getData(): string;\n}\n\nexport class IndividualLinkExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Sharable Link', false);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn this.simUI.toLink();\n\t}\n}\n\nexport class IndividualJsonExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'JSON Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn JSON.stringify(IndividualSimSettings.toJson(this.simUI.toProto()), null, 2);\n\t}\n}\n\nexport class IndividualWowheadGearPlannerExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Wowhead Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\n\t\tconst classStr = classNames[player.getClass()].replaceAll(' ', '-').toLowerCase();\n\t\tconst raceStr = raceNames[player.getRace()].replaceAll(' ', '-').toLowerCase();\n\t\tlet url = `https://www.wowhead.com/wotlk/gear-planner/${classStr}/${raceStr}/`;\n\n\t\t// See comments on the importer for how the binary formatting is structured.\n\t\tlet bytes: Array<number> = [];\n\t\tbytes.push(6);\n\t\tbytes.push(0);\n\t\tbytes.push(Mechanics.CHARACTER_LEVEL);\n\n\t\tlet talentsStr = player.getTalentsString().replaceAll('-', 'f') + 'f';\n\t\tif (talentsStr.length % 2 == 1) {\n\t\t\ttalentsStr += '0';\n\t\t}\n\t\t//console.log('Talents str: ' + talentsStr);\n\t\tbytes.push(talentsStr.length / 2);\n\t\tfor (let i = 0; i < talentsStr.length; i += 2) {\n\t\t\tbytes.push(parseInt(talentsStr.substring(i, i + 2), 16));\n\t\t}\n\n\t\tlet glyphBytes: Array<number> = [];\n\t\tlet glyphStr = '';\n\t\tconst glyphs = player.getGlyphs();\n\t\tconst d = \"0123456789abcdefghjkmnpqrstvwxyz\";\n\t\tconst addGlyph = (glyphItemId: number, glyphPosition: number) => {\n\t\t\tconst spellId = this.simUI.sim.db.glyphItemToSpellId(glyphItemId);\n\t\t\tif (!spellId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tglyphStr += d[glyphPosition];\n\t\t\tglyphStr += d[(spellId >> 15) & 0b00011111];\n\t\t\tglyphStr += d[(spellId >> 10) & 0b00011111];\n\t\t\tglyphStr += d[(spellId >>  5) & 0b00011111];\n\t\t\tglyphStr += d[(spellId >>  0) & 0b00011111];\n\t\t};\n\t\taddGlyph(glyphs.major1, 0);\n\t\taddGlyph(glyphs.major2, 1);\n\t\taddGlyph(glyphs.major3, 2);\n\t\taddGlyph(glyphs.minor1, 3);\n\t\taddGlyph(glyphs.minor2, 4);\n\t\taddGlyph(glyphs.minor3, 5);\n\t\tif (glyphStr) {\n\t\t\tglyphBytes.push(0x30);\n\t\t\tfor (let i = 0; i < glyphStr.length; i++) {\n\t\t\t\tglyphBytes.push(glyphStr.charCodeAt(i));\n\t\t\t}\n\t\t}\n\t\tbytes.push(glyphBytes.length);\n\t\tbytes = bytes.concat(glyphBytes)\n\n\t\tconst to2Bytes = (val: number): Array<number> => {\n\t\t\treturn [\n\t\t\t\t(val & 0xff00) >> 8,\n\t\t\t\tval & 0x00ff,\n\t\t\t];\n\t\t};\n\n\t\tconst gear = player.getGear();\n\t\tconst isBlacksmithing = player.isBlacksmithing();\n\t\tgear.getItemSlots()\n\t\t\t\t.sort((slot1, slot2) => IndividualWowheadGearPlannerImporter.slotIDs[slot1] - IndividualWowheadGearPlannerImporter.slotIDs[slot2])\n\t\t\t\t.forEach(itemSlot => {\n\t\t\tconst item = gear.getEquippedItem(itemSlot);\n\t\t\tif (!item) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet slotId = IndividualWowheadGearPlannerImporter.slotIDs[itemSlot];\n\t\t\tif (item.enchant) {\n\t\t\t\tslotId = slotId | 0b10000000;\n\t\t\t}\n\t\t\tbytes.push(slotId);\n\t\t\tbytes.push(item.curGems(isBlacksmithing).length << 5);\n\t\t\tbytes = bytes.concat(to2Bytes(item.item.id));\n\n\t\t\tif (item.enchant) {\n\t\t\t\tbytes.push(0);\n\t\t\t\tbytes = bytes.concat(to2Bytes(item.enchant.spellId));\n\t\t\t}\n\n\t\t\titem.gems.slice(0, item.numSockets(isBlacksmithing)).forEach((gem, i) => {\n\t\t\t\tif (gem) {\n\t\t\t\t\tbytes.push(i << 5);\n\t\t\t\t\tbytes = bytes.concat(to2Bytes(gem.id));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t//console.log('Hex: ' + buf2hex(new Uint8Array(bytes)));\n\t\tconst binaryString = String.fromCharCode(...bytes);\n\t\tconst b64encoded = btoa(binaryString);\n\t\tconst b64converted = b64encoded.replaceAll('/', '_').replaceAll('+', '-').replace(/=+$/, '');\n\n\t\treturn url + b64converted;\n\t}\n}\n\nexport class Individual80UEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, '80Upgrades EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allUnitStats = UnitStat.getAll();\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallUnitStats\n\t\t.forEach(stat => {\n\t\t\tconst statName = Individual80UEPExporter.getName(stat);\n\t\t\tconst weight = epValues.getUnitStat(stat);\n\t\t\tif (weight == 0 || statName == '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn `https://eightyupgrades.com/ep/import?name=${encodeURIComponent(`${specNames[player.spec]} WoWSims Weights`)}` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `&${statName}=${namesToWeights[statName].toFixed(3)}`).join('');\n\t}\n\n\tstatic getName(stat: UnitStat): string {\n\t\tif (stat.isStat()) {\n\t\t\treturn Individual80UEPExporter.statNames[stat.getStat()];\n\t\t} else {\n\t\t\treturn Individual80UEPExporter.pseudoStatNames[stat.getPseudoStat()] || '';\n\t\t}\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'strength',\n\t\t[Stat.StatAgility]: 'agility',\n\t\t[Stat.StatStamina]: 'stamina',\n\t\t[Stat.StatIntellect]: 'intellect',\n\t\t[Stat.StatSpirit]: 'spirit',\n\t\t[Stat.StatSpellPower]: 'spellDamage',\n\t\t[Stat.StatMP5]: 'mp5',\n\t\t[Stat.StatSpellHit]: 'hitRating',\n\t\t[Stat.StatSpellCrit]: 'critRating',\n\t\t[Stat.StatSpellHaste]: 'hasteRating',\n\t\t[Stat.StatSpellPenetration]: 'spellPen',\n\t\t[Stat.StatAttackPower]: 'attackPower',\n\t\t[Stat.StatMeleeHit]: 'hitRating',\n\t\t[Stat.StatMeleeCrit]: 'critRating',\n\t\t[Stat.StatMeleeHaste]: 'hasteRating',\n\t\t[Stat.StatArmorPenetration]: 'armorPenRating',\n\t\t[Stat.StatExpertise]: 'expertiseRating',\n\t\t[Stat.StatMana]: 'mana',\n\t\t[Stat.StatEnergy]: 'energy',\n\t\t[Stat.StatRage]: 'rage',\n\t\t[Stat.StatArmor]: 'armor',\n\t\t[Stat.StatRangedAttackPower]: 'attackPower',\n\t\t[Stat.StatDefense]: 'defenseRating',\n\t\t[Stat.StatBlock]: 'blockRating',\n\t\t[Stat.StatBlockValue]: 'blockValue',\n\t\t[Stat.StatDodge]: 'dodgeRating',\n\t\t[Stat.StatParry]: 'parryRating',\n\t\t[Stat.StatResilience]: 'resilienceRating',\n\t\t[Stat.StatHealth]: 'health',\n\t\t[Stat.StatArcaneResistance]: 'arcaneResistance',\n\t\t[Stat.StatFireResistance]: 'fireResistance',\n\t\t[Stat.StatFrostResistance]: 'frostResistance',\n\t\t[Stat.StatNatureResistance]: 'natureResistance',\n\t\t[Stat.StatShadowResistance]: 'shadowResistance',\n\t\t[Stat.StatBonusArmor]: 'armorBonus',\n\t\t[Stat.StatRunicPower]: 'runicPower',\n\t\t[Stat.StatBloodRune]: 'bloodRune',\n\t\t[Stat.StatFrostRune]: 'frostRune',\n\t\t[Stat.StatUnholyRune]: 'unholyRune',\n\t\t[Stat.StatDeathRune]: 'deathRune',\n\t}\n\tstatic pseudoStatNames: Partial<Record<PseudoStat, string>> = {\n\t\t[PseudoStat.PseudoStatMainHandDps]: 'dps',\n\t\t[PseudoStat.PseudoStatRangedDps]: 'rangedDps',\n\t}\n}\n\nexport class IndividualPawnEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Pawn EP Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allUnitStats = UnitStat.getAll();\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallUnitStats\n\t\t.forEach(stat => {\n\t\t\tconst statName = IndividualPawnEPExporter.getName(stat);\n\t\t\tconst weight = epValues.getUnitStat(stat);\n\t\t\tif (weight == 0 || statName == '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn `( Pawn: v1: \"${specNames[player.spec]} WoWSims Weights\": Class=${classNames[player.getClass()]},` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `${statName}=${namesToWeights[statName].toFixed(3)}`).join(',') +\n\t\t\t' )';\n\t}\n\n\tstatic getName(stat: UnitStat): string {\n\t\tif (stat.isStat()) {\n\t\t\treturn IndividualPawnEPExporter.statNames[stat.getStat()];\n\t\t} else {\n\t\t\treturn IndividualPawnEPExporter.pseudoStatNames[stat.getPseudoStat()] || '';\n\t\t}\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'Strength',\n\t\t[Stat.StatAgility]: 'Agility',\n\t\t[Stat.StatStamina]: 'Stamina',\n\t\t[Stat.StatIntellect]: 'Intellect',\n\t\t[Stat.StatSpirit]: 'Spirit',\n\t\t[Stat.StatSpellPower]: 'SpellDamage',\n\t\t[Stat.StatMP5]: 'Mp5',\n\t\t[Stat.StatSpellHit]: 'HitRating',\n\t\t[Stat.StatSpellCrit]: 'CritRating',\n\t\t[Stat.StatSpellHaste]: 'HasteRating',\n\t\t[Stat.StatSpellPenetration]: 'SpellPen',\n\t\t[Stat.StatAttackPower]: 'Ap',\n\t\t[Stat.StatMeleeHit]: 'HitRating',\n\t\t[Stat.StatMeleeCrit]: 'CritRating',\n\t\t[Stat.StatMeleeHaste]: 'HasteRating',\n\t\t[Stat.StatArmorPenetration]: 'ArmorPenetration',\n\t\t[Stat.StatExpertise]: 'ExpertiseRating',\n\t\t[Stat.StatMana]: 'Mana',\n\t\t[Stat.StatEnergy]: 'Energy',\n\t\t[Stat.StatRage]: 'Rage',\n\t\t[Stat.StatArmor]: 'Armor',\n\t\t[Stat.StatRangedAttackPower]: 'Ap',\n\t\t[Stat.StatDefense]: 'DefenseRating',\n\t\t[Stat.StatBlock]: 'BlockRating',\n\t\t[Stat.StatBlockValue]: 'BlockValue',\n\t\t[Stat.StatDodge]: 'DodgeRating',\n\t\t[Stat.StatParry]: 'ParryRating',\n\t\t[Stat.StatResilience]: 'ResilienceRating',\n\t\t[Stat.StatHealth]: 'Health',\n\t\t[Stat.StatArcaneResistance]: 'ArcaneResistance',\n\t\t[Stat.StatFireResistance]: 'FireResistance',\n\t\t[Stat.StatFrostResistance]: 'FrostResistance',\n\t\t[Stat.StatNatureResistance]: 'NatureResistance',\n\t\t[Stat.StatShadowResistance]: 'ShadowResistance',\n\t\t[Stat.StatBonusArmor]: 'Armor2',\n\t\t[Stat.StatRunicPower]: 'RunicPower',\n\t\t[Stat.StatBloodRune]: 'BloodRune',\n\t\t[Stat.StatFrostRune]: 'FrostRune',\n\t\t[Stat.StatUnholyRune]: 'UnholyRune',\n\t\t[Stat.StatDeathRune]: 'DeathRune',\n\t}\n\tstatic pseudoStatNames: Partial<Record<PseudoStat, string>> = {\n\t\t[PseudoStat.PseudoStatMainHandDps]: 'MeleeDps',\n\t\t[PseudoStat.PseudoStatRangedDps]: 'RangedDps',\n\t}\n}\n\nexport class IndividualCLIExporter<SpecType extends Spec> extends Exporter {\n  private readonly simUI: IndividualSimUI<SpecType>;\n\n  constructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n    super(parent, simUI, \"CLI Export\", true);\n    this.simUI = simUI;\n    this.init();\n  }\n\n  getData(): string {\n    const raidSimJson: any = RaidSimRequest.toJson(\n      this.simUI.sim.makeRaidSimRequest(false)\n    );\n    delete raidSimJson.raid?.parties[0]?.players[0]?.database;\n    return JSON.stringify(raidSimJson, null, 2);\n  }\n}\n","import { simLaunchStatuses } from './launched_sims';\nimport { Player } from './player';\nimport { SimUI, SimWarning } from './sim_ui';\nimport { EventID, TypedEvent } from './typed_event';\n\nimport { CharacterStats, StatMods } from './components/character_stats';\nimport { ContentBlock } from './components/content_block';\nimport { EmbeddedDetailedResults } from './components/detailed_results';\nimport { EncounterPickerConfig } from './components/encounter_picker';\nimport { EnumPicker } from './components/enum_picker';\nimport { IconEnumPicker } from './components/icon_enum_picker';\nimport { LogRunner } from './components/log_runner';\nimport { addRaidSimAction, RaidSimResultsManager } from './components/raid_sim_action';\nimport { SavedDataConfig, SavedDataManager } from './components/saved_data_manager';\nimport { addStatWeightsAction } from './components/stat_weights_action';\n\nimport { BulkTab } from './components/individual_sim_ui/bulk_tab';\nimport { GearTab } from './components/individual_sim_ui/gear_tab';\nimport { SettingsTab } from './components/individual_sim_ui/settings_tab';\nimport { RotationTab } from './components/individual_sim_ui/rotation_tab';\n\nimport {\n\tClass,\n\tConsumes,\n\tDebuffs,\n\tEncounter as EncounterProto,\n\tEquipmentSpec,\n\tGlyphs,\n\tHandType,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tProfession,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n} from './proto/common';\n\nimport { IndividualSimSettings, SavedTalents } from './proto/ui';\nimport { StatWeightsResult } from './proto/api';\n\nimport { Gear } from './proto_utils/gear';\nimport { getMetaGemConditionDescription } from './proto_utils/gems';\nimport { professionNames } from './proto_utils/names';\nimport { Stats } from './proto_utils/stats';\nimport {\n\tgetTalentPoints,\n\tisHealingSpec,\n\tisTankSpec,\n\tSpecOptions,\n\tSpecRotation,\n\tspecToEligibleRaces,\n\tspecToLocalStorageKey,\n} from './proto_utils/utils';\n\nimport { HunterPetTalentsPicker, makePetTypeInputConfig } from './talents/hunter_pet';\nimport { newGlyphsPicker, newTalentsPicker } from './talents/factory';\n\nimport * as Exporters from './components/exporters';\nimport * as Importers from './components/importers';\nimport * as IconInputs from './components/icon_inputs';\nimport * as InputHelpers from './components/input_helpers';\nimport * as Mechanics from './constants/mechanics';\nimport * as Tooltips from './constants/tooltips';\n\ndeclare var pako: any;\n\nconst SAVED_GEAR_STORAGE_KEY = '__savedGear__';\nconst SAVED_ROTATION_STORAGE_KEY = '__savedRotation__';\nconst SAVED_SETTINGS_STORAGE_KEY = '__savedSettings__';\nconst SAVED_TALENTS_STORAGE_KEY = '__savedTalents__';\n\nexport type InputConfig<ModObject> = (\n\tInputHelpers.TypedBooleanPickerConfig<ModObject> |\n\tInputHelpers.TypedNumberPickerConfig<ModObject> |\n\tInputHelpers.TypedEnumPickerConfig<ModObject> |\n\tInputHelpers.TypedCustomRotationPickerConfig<any, any> |\n\tInputHelpers.TypedItemSwapPickerConfig<any, any>\n);\n\nexport interface InputSection {\n\ttooltip?: string,\n\tinputs: Array<InputConfig<Player<any>>>,\n}\n\nexport interface OtherDefaults {\n\tprofession1?: Profession,\n\tprofession2?: Profession,\n\tdistanceFromTarget?: number,\n}\n\nexport interface IndividualSimUIConfig<SpecType extends Spec> {\n\t// Additional css class to add to the root element.\n\tcssClass: string,\n\t// Used to generate schemed components. E.g. 'shaman', 'druid', 'raid'\n\tcssScheme: string,\n\n\tknownIssues?: Array<string>;\n\twarnings?: Array<(simUI: IndividualSimUI<SpecType>) => SimWarning>,\n\n\tepStats: Array<Stat>;\n\tepPseudoStats?: Array<PseudoStat>;\n\tepReferenceStat: Stat;\n\tdisplayStats: Array<Stat>;\n\tmodifyDisplayStats?: (player: Player<SpecType>) => StatMods,\n\n\tdefaults: {\n\t\tgear: EquipmentSpec,\n\t\tepWeights: Stats,\n\t\tconsumes: Consumes,\n\t\trotation: SpecRotation<SpecType>,\n\t\ttalents: SavedTalents,\n\t\tspecOptions: SpecOptions<SpecType>,\n\n\t\traidBuffs: RaidBuffs,\n\t\tpartyBuffs: PartyBuffs,\n\t\tindividualBuffs: IndividualBuffs,\n\n\t\tdebuffs: Debuffs,\n\n\t\tother?: OtherDefaults,\n\t},\n\n\tplayerInputs?: InputSection,\n\tplayerIconInputs: Array<IconInputs.IconInputConfig<Player<SpecType>, any>>,\n\tpetConsumeInputs?: Array<IconInputs.IconInputConfig<Player<SpecType>, any>>,\n\trotationInputs: InputSection;\n\trotationIconInputs?: Array<IconInputs.IconInputConfig<Player<any>, any>>;\n\tincludeBuffDebuffInputs: Array<any>,\n\texcludeBuffDebuffInputs: Array<any>,\n\totherInputs: InputSection;\n\n\t// For when extra sections are needed (e.g. Shaman totems)\n\tcustomSections?: Array<(parentElem: HTMLElement, simUI: IndividualSimUI<SpecType>) => ContentBlock>,\n\n\tencounterPicker: EncounterPickerConfig,\n\n\tpresets: {\n\t\tgear: Array<PresetGear>,\n\t\ttalents: Array<SavedDataConfig<Player<any>, SavedTalents>>,\n\t\trotation?: Array<SavedDataConfig<Player<any>, string>>,\n\t},\n}\n\nexport interface GearAndStats {\n\tgear: Gear,\n\tbonusStats?: Stats,\n}\n\nexport interface PresetGear {\n\tname: string;\n\tgear: EquipmentSpec;\n\ttooltip?: string;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface Settings {\n\traidBuffs: RaidBuffs,\n\tpartyBuffs: PartyBuffs,\n\tindividualBuffs: IndividualBuffs,\n\tconsumes: Consumes,\n\trace: Race,\n\tprofessions?: Array<Profession>;\n}\n\n// Extended shared UI for all individual player sims.\nexport abstract class IndividualSimUI<SpecType extends Spec> extends SimUI {\n\treadonly player: Player<SpecType>;\n\treadonly individualConfig: IndividualSimUIConfig<SpecType>;\n\n\tprivate raidSimResultsManager: RaidSimResultsManager | null;\n\n\tprevEpIterations: number;\n\tprevEpSimResult: StatWeightsResult | null;\n\tdpsRefStat?: Stat;\n\thealRefStat?: Stat;\n\ttankRefStat?: Stat;\n\n\treadonly bt: BulkTab;\n\n\tconstructor(parentElem: HTMLElement, player: Player<SpecType>, config: IndividualSimUIConfig<SpecType>) {\n\t\tsuper(parentElem, player.sim, {\n\t\t\tcssClass: config.cssClass,\n\t\t\tcssScheme: config.cssScheme,\n\t\t\tspec: player.spec,\n\t\t\tknownIssues: config.knownIssues,\n\t\t\tlaunchStatus: simLaunchStatuses[player.spec],\n\t\t});\n\t\tthis.rootElem.classList.add('individual-sim-ui');\n\t\tthis.player = player;\n\t\tthis.individualConfig = config;\n\t\tthis.raidSimResultsManager = null;\n\t\tthis.prevEpIterations = 0;\n\t\tthis.prevEpSimResult = null;\n\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.getGear().hasInactiveMetaGem(this.player.isBlacksmithing())) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tconst metaGem = this.player.getGear().getMetaGem()!;\n\t\t\t\treturn `Meta gem disabled (${metaGem.name}): ${getMetaGemConditionDescription(metaGem)}`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.professionChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tconst failedProfReqs = this.player.getGear().getFailedProfessionRequirements(this.player.getProfessions());\n\t\t\t\tif (failedProfReqs.length == 0) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn failedProfReqs.map(fpr => `${fpr.name} requires ${professionNames[fpr.requiredProfession]}, but it is not selected.`);\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.gearChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst jcGems = this.player.getGear().getJCGems(this.player.isBlacksmithing());\n\t\t\t\tif (jcGems.length <= 3) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn `Only 3 Jewelcrafting Gems are allowed, but ${jcGems.length} are equipped.`;\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: this.player.talentsChangeEmitter,\n\t\t\tgetContent: () => {\n\t\t\t\tconst talentPoints = getTalentPoints(this.player.getTalentsString());\n\n\t\t\t\tif (talentPoints == 0) {\n\t\t\t\t\t// Just return here, so we don't show a warning during page load.\n\t\t\t\t\treturn '';\n\t\t\t\t} else if (talentPoints < Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'Unspent talent points.';\n\t\t\t\t} else if (talentPoints > Mechanics.MAX_TALENT_POINTS) {\n\t\t\t\t\treturn 'More than maximum talent points spent.';\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.talentsChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tif (!this.player.canDualWield2H() &&\n\t\t\t\t\t(this.player.getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.handType == HandType.HandTypeTwoHand &&\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand) != null ||\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.handType == HandType.HandTypeTwoHand)) {\n\t\t\t\t\treturn \"Dual wielding two-handed weapon(s) without Titan's Grip spec.\"\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\t(config.warnings || []).forEach(warning => this.addWarning(warning(this)));\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\t// This needs to go before all the UI components so that gear loading is the\n\t\t\t// first callback invoked from waitForInit().\n\t\t\tthis.sim.waitForInit().then(() => {\n\t\t\t\tthis.loadSettings();\n\n\t\t\t\tif (isHealingSpec(this.player.spec)) {\n\t\t\t\t\talert(Tooltips.HEALING_SIM_DISCLAIMER);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addGearTab();\n\t\tthis.bt = this.addBulkTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addTalentsTab();\n\t\t//this.addRotationTab();\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.addDetailedResultsTab();\n\t\t\tthis.addLogTab();\n\t\t}\n\n\t\tthis.addTopbarComponents();\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet loadedSettings = false;\n\n\t\t\tlet hash = window.location.hash;\n\t\t\tif (hash.length > 1) {\n\t\t\t\t// Remove leading '#'\n\t\t\t\thash = hash.substring(1);\n\t\t\t\ttry {\n\t\t\t\t\tconst binary = atob(hash);\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst settingsBytes = pako.inflate(bytes);\n\t\t\t\t\tconst settings = IndividualSimSettings.fromBinary(settingsBytes);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse settings from window hash: ' + e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.location.hash = '';\n\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (!loadedSettings && savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = IndividualSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!loadedSettings) {\n\t\t\t\tthis.applyDefaults(initEventID);\n\t\t\t}\n\t\t\tthis.player.setName(initEventID, 'Player');\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(eventID => {\n\t\t\t\tconst jsonStr = IndividualSimSettings.toJsonString(this.toProto());\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\taddStatWeightsAction(this, this.individualConfig.epStats, this.individualConfig.epPseudoStats, this.individualConfig.epReferenceStat);\n\n\t\tconst characterStats = new CharacterStats(\n\t\t\tthis.rootElem.getElementsByClassName('sim-sidebar-footer')[0] as HTMLElement,\n\t\t\tthis.player,\n\t\t\tthis.individualConfig.displayStats,\n\t\t\tthis.individualConfig.modifyDisplayStats);\n\t}\n\n\tprivate addGearTab() {\n\t\tlet gearTab = new GearTab(this.simTabContentsContainer, this);\n\t\tgearTab.rootElem.classList.add('active', 'show');\n\t}\n\n\tprivate addBulkTab(): BulkTab {\n\t\tlet bulkTab = new BulkTab(this.simTabContentsContainer, this);\n\t\tbulkTab.navLink.hidden = !this.sim.getShowExperimental()\n\t\tthis.sim.showExperimentalChangeEmitter.on(() => {\n\t\t\tbulkTab.navLink.hidden = !this.sim.getShowExperimental();\n\t\t});\n\t\treturn bulkTab;\n\t}\n\n\tprivate addSettingsTab() {\n\t\tnew SettingsTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addTalentsTab() {\n\t\tthis.addTab('Talents', 'talents-tab', `\n\t\t\t<div class=\"talents-content tab-pane-content-container\">\n\t\t\t\t<div class=\"talents-tab-content tab-panel-left\">\n\t\t\t\t\t<div class=\"player-pet-toggle hide\"></div>\n\t\t\t\t\t<div class=\"talents-picker\"></div>\n\t\t\t\t\t<div class=\"glyphs-picker\">\n\t\t\t\t\t\t<span>Glyphs</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"pet-talents-picker hide\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"saved-talents-manager tab-panel-right\"></div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst talentsPicker = newTalentsPicker(this.rootElem.getElementsByClassName('talents-picker')[0] as HTMLElement, this.player);\n\t\tconst glyphsPicker = newGlyphsPicker(this.rootElem.getElementsByClassName('glyphs-picker')[0] as HTMLElement, this.player);\n\n\t\tthis.rootElem.querySelector('#talents-tab-tab')?.classList.add('sim-tab');\n\n\t\tconst savedTalentsManager = new SavedDataManager<Player<any>, SavedTalents>(\n\t\t\tthis.rootElem.getElementsByClassName('saved-talents-manager')[0] as HTMLElement, this, this.player, {\n\t\t\t\tlabel: 'Talents',\n\t\t\t\theader: {title: 'Saved Talents'},\n\t\t\t\tstorageKey: this.getSavedTalentsStorageKey(),\n\t\t\t\tgetData: (player: Player<any>) => SavedTalents.create({\n\t\t\t\t\ttalentsString: player.getTalentsString(),\n\t\t\t\t\tglyphs: player.getGlyphs(),\n\t\t\t\t}),\n\t\t\t\tsetData: (eventID: EventID, player: Player<any>, newTalents: SavedTalents) => {\n\t\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, newTalents.talentsString);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, newTalents.glyphs || Glyphs.create());\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tchangeEmitters: [this.player.talentsChangeEmitter, this.player.glyphsChangeEmitter],\n\t\t\t\tequals: (a: SavedTalents, b: SavedTalents) => SavedTalents.equals(a, b),\n\t\t\t\ttoJson: (a: SavedTalents) => SavedTalents.toJson(a),\n\t\t\t\tfromJson: (obj: any) => SavedTalents.fromJson(obj),\n\t\t\t}\n\t\t);\n\n\t\tthis.sim.waitForInit().then(() => {\n\t\t\tsavedTalentsManager.loadUserData();\n\t\t\tthis.individualConfig.presets.talents.forEach(config => {\n\t\t\t\tconfig.isPreset = true;\n\t\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\t\tname: config.name,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: config.data,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (this.player.getClass() == Class.ClassHunter) {\n\t\t\t\tconst petTalentsPicker = new HunterPetTalentsPicker(\n\t\t\t\t\tthis.rootElem.getElementsByClassName('pet-talents-picker')[0] as HTMLElement, this, this.player as Player<Spec.SpecHunter>\n\t\t\t\t);\n\n\t\t\t\tlet curShown = 0;\n\t\t\t\tconst updateToggle = () => {\n\t\t\t\t\tthis.rootElem.querySelector('.talents-picker')?.classList.toggle('hide');\n\t\t\t\t\tthis.rootElem.querySelector('.glyphs-picker')?.classList.toggle('hide');\n\t\t\t\t\tthis.rootElem.querySelector('.pet-talents-picker')?.classList.toggle('hide');\n\t\t\t\t}\n\n\t\t\t\tconst toggleContainer = this.rootElem.getElementsByClassName('player-pet-toggle')[0] as HTMLElement;\n\t\t\t\ttoggleContainer.classList.remove('hide');\n\t\t\t\tconst playerPetToggle = new EnumPicker(toggleContainer, this, {\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{ name: 'Player', value: 0 },\n\t\t\t\t\t\t{ name: 'Pet', value: 1 },\n\t\t\t\t\t],\n\t\t\t\t\tchangedEvent: sim => new TypedEvent(),\n\t\t\t\t\tgetValue: sim => curShown,\n\t\t\t\t\tsetValue: (eventID, sim, newValue) => {\n\t\t\t\t\t\tcurShown = newValue;\n\t\t\t\t\t\tupdateToggle();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tconst petTypeToggle = new IconEnumPicker(toggleContainer, this.player as Player<Spec.SpecHunter>, makePetTypeInputConfig(false));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate addRotationTab() {\n\t\tnew RotationTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab('Results', 'detailed-results-tab', `\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst detailedResults = new EmbeddedDetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate addLogTab() {\n\t\tthis.addTab('Log', 'log-tab', `\n\t\t\t<div class=\"log-runner\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst logRunner = new LogRunner(this.rootElem.getElementsByClassName('log-runner')[0] as HTMLElement, this);\n\t}\n\n\tprivate addTopbarComponents() {\n\t\tthis.simHeader.addImportLink('JSON', _parent => new Importers.IndividualJsonImporter(this.rootElem, this), true);\n\t\tthis.simHeader.addImportLink('80U', _parent => new Importers.Individual80UImporter(this.rootElem, this), true);\n\t\tthis.simHeader.addImportLink('WoWHead', _parent => new Importers.IndividualWowheadGearPlannerImporter(this.rootElem, this), false);\n\t\tthis.simHeader.addImportLink('Addon', _parent => new Importers.IndividualAddonImporter(this.rootElem, this), true);\n\n\t\tthis.simHeader.addExportLink('Link', _parent => new Exporters.IndividualLinkExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('JSON', _parent => new Exporters.IndividualJsonExporter(this.rootElem, this), true);\n\t\tthis.simHeader.addExportLink('WoWHead', _parent => new Exporters.IndividualWowheadGearPlannerExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('80U EP', _parent => new Exporters.Individual80UEPExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('Pawn EP', _parent => new Exporters.IndividualPawnEPExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink(\"CLI\", _parent => new Exporters.IndividualCLIExporter(this.rootElem, this), true);\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\n\t\t\t//Special case for Totem of Wrath keeps buff and debuff sync'd\n\t\t\tconst towEnabled =  this.individualConfig.defaults.raidBuffs.totemOfWrath || this.individualConfig.defaults.debuffs.totemOfWrath\n\t\t\tthis.individualConfig.defaults.raidBuffs.totemOfWrath = towEnabled;\n\t\t\tthis.individualConfig.defaults.debuffs.totemOfWrath = towEnabled;\n\t\t\t\n\t\t\tthis.player.applySharedDefaults(eventID);\n\t\t\tthis.player.setRace(eventID, specToEligibleRaces[this.player.spec][0]);\n\t\t\tthis.player.setGear(eventID, this.sim.db.lookupEquipmentSpec(this.individualConfig.defaults.gear));\n\t\t\tthis.player.setConsumes(eventID, this.individualConfig.defaults.consumes);\n\t\t\tthis.player.setRotation(eventID, this.individualConfig.defaults.rotation);\n\t\t\tthis.player.setTalentsString(eventID, this.individualConfig.defaults.talents.talentsString);\n\t\t\tthis.player.setGlyphs(eventID, this.individualConfig.defaults.talents.glyphs || Glyphs.create());\n\t\t\tthis.player.setSpecOptions(eventID, this.individualConfig.defaults.specOptions);\n\t\t\tthis.player.setBuffs(eventID, this.individualConfig.defaults.individualBuffs);\n\t\t\tthis.player.getParty()!.setBuffs(eventID, this.individualConfig.defaults.partyBuffs);\n\t\t\tthis.player.getRaid()!.setBuffs(eventID, this.individualConfig.defaults.raidBuffs);\n\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\tconst defaultRatios = this.player.getDefaultEpRatios(tankSpec, healingSpec)\n\t\t\tthis.player.setEpRatios(eventID, defaultRatios);\n\t\t\tthis.player.setProfession1(eventID, this.individualConfig.defaults.other?.profession1 || Profession.Engineering);\n\t\t\tthis.player.setProfession2(eventID, this.individualConfig.defaults.other?.profession2 || Profession.Jewelcrafting);\n\t\t\tthis.player.setDistanceFromTarget(eventID, this.individualConfig.defaults.other?.distanceFromTarget || 0);\n\n\t\t\tif (this.isWithinRaidSim) {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, 0);\n\t\t\t} else {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, healingSpec ? 9 : 0);\n\t\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\t\tthis.sim.raid.setDebuffs(eventID, this.individualConfig.defaults.debuffs);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\n\t\t\t\tif (tankSpec) {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, [this.player.makeRaidTarget()]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, []);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSavedGearStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_GEAR_STORAGE_KEY);\n\t}\n\n\tgetSavedRotationStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_ROTATION_STORAGE_KEY);\n\t}\n\n\tgetSavedSettingsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_SETTINGS_STORAGE_KEY);\n\t}\n\n\tgetSavedTalentsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_TALENTS_STORAGE_KEY);\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\t// Local storage is shared by all sites under the same domain, so we need to use\n\t\t// different keys for each spec site.\n\t\treturn specToLocalStorageKey[this.player.spec] + keyPart;\n\t}\n\n\ttoProto(): IndividualSimSettings {\n\t\treturn IndividualSimSettings.create({\n\t\t\tsettings: this.sim.toProto(),\n\t\t\tplayer: this.player.toProto(true),\n\t\t\traidBuffs: this.sim.raid.getBuffs(),\n\t\t\tdebuffs: this.sim.raid.getDebuffs(),\n\t\t\ttanks: this.sim.raid.getTanks(),\n\t\t\tpartyBuffs: this.player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t\tepWeightsStats: this.player.getEpWeights().toProto(),\n\t\t\tepRatios: this.player.getEpRatios(),\n\t\t\ttargetDummies: this.sim.raid.getTargetDummies(),\n\t\t});\n\t}\n\n\ttoLink(): string {\n\t\tconst proto = this.toProto();\n\t\t// When sharing links, people generally don't intend to share settings/ep weights.\n\t\tproto.settings = undefined;\n\t\tproto.epWeights = [];\n\n\t\tconst protoBytes = IndividualSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\treturn linkUrl.toString();\n\t}\n\n\tfromProto(eventID: EventID, settings: IndividualSimSettings) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (!settings.player) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.player.fromProto(eventID, settings.player);\n\t\t\tif (settings.epWeights?.length > 0) {\n\t\t\t\tthis.player.setEpWeights(eventID, new Stats(settings.epWeights));\n\t\t\t} else if (settings.epWeightsStats) {\n\t\t\t\tthis.player.setEpWeights(eventID, Stats.fromProto(settings.epWeightsStats));\n\t\t\t} else {\n\t\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\t}\n\n\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\t\t\tconst defaultRatios = this.player.getDefaultEpRatios(tankSpec, healingSpec);\n\t\t\tif (settings.epRatios) {\n\t\t\t\tconst missingRatios = new Array<number>(defaultRatios.length - settings.epRatios.length).fill(0);\n\t\t\t\tthis.player.setEpRatios(eventID, settings.epRatios.concat(missingRatios));\n\t\t\t} else {\n\t\t\t\tthis.player.setEpRatios(eventID, defaultRatios);\n\t\t\t}\n\n\t\t\tthis.sim.raid.setBuffs(eventID, settings.raidBuffs || RaidBuffs.create());\n\t\t\tthis.sim.raid.setDebuffs(eventID, settings.debuffs || Debuffs.create());\n\t\t\tthis.sim.raid.setTanks(eventID, settings.tanks || []);\n\t\t\tthis.sim.raid.setTargetDummies(eventID, settings.targetDummies);\n\t\t\tconst party = this.player.getParty();\n\t\t\tif (party) {\n\t\t\t\tparty.setBuffs(eventID, settings.partyBuffs || PartyBuffs.create());\n\t\t\t}\n\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\n\t\t\tif (settings.settings) {\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t} else {\n\t\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\t\t\t}\n\n\t\t\t// Needed because of new proto field addition. Can remove on 2022/11/14 (2 months).\n\t\t\tif (!isHealingSpec(this.player.spec)) {\n\t\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tsplitRelevantOptions<T>(options: Array<StatOption<T> | null>): Array<T> {\n\t\treturn options\n\t\t\t.filter(option => option != null)\n\t\t\t.filter(option =>\n\t\t\t\tthis.individualConfig.includeBuffDebuffInputs.includes(option!.item) ||\n\t\t\t\toption!.stats.length == 0 ||\n\t\t\t\toption!.stats.some(stat => this.individualConfig.epStats.includes(stat)))\n\t\t\t.filter(option =>\n\t\t\t\t!this.individualConfig.excludeBuffDebuffInputs.includes(option!.item))\n\t\t\t.map(option => option!.item);\n\t}\n}\n\nexport interface StatOption<T> {\n\tstats: Array<Stat>,\n\titem: T,\n}\n"],"names":["EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","MELEE_CRIT_RATING_PER_CRIT_CHANCE","SPELL_CRIT_RATING_PER_CRIT_CHANCE","SPELL_HIT_RATING_PER_HIT_CHANCE","Encounter","constructor","sim","this","duration","durationVariation","executeProportion20","executeProportion25","executeProportion35","useHealth","targetsChangeEmitter","TypedEvent","durationChangeEmitter","executeProportionChangeEmitter","changeEmitter","targets","defaultTargetProto","forEach","emitter","on","eventID","emit","primaryTarget","TargetProto","clone","getDurationVariation","setDurationVariation","newDuration","getDuration","setDuration","getExecuteProportion20","setExecuteProportion20","newExecuteProportion20","getExecuteProportion25","setExecuteProportion25","newExecuteProportion25","getExecuteProportion35","setExecuteProportion35","newExecuteProportion35","getUseHealth","setUseHealth","newUseHealth","matchesPreset","preset","length","every","t","i","equals","target","applyPreset","map","presetTarget","create","applyPresetTarget","index","toProto","EncounterProto","fromProto","proto","freezeAllAndDo","applyDefaults","static","level","CHARACTER_LEVEL","mobType","MobType","MobTypeGiant","tankIndex","swingSpeed","minBaseDamage","dualWield","dualWieldPenalty","suppressDodge","parryHaste","spellSchool","SpellSchool","SpellSchoolPhysical","stats","Stats","fromMap","Stat","StatArmor","StatAttackPower","StatBlockValue","asArray","targetInputs","Array","TalentsPicker","Input","parent","modObject","config","super","inline","pointsPerRow","maxPoints","numRows","Math","max","trees","treeConfig","talents","talentConfig","location","rowIdx","flat","TalentTreePicker","rootElem","tree","talent","setPoints","init","getInputElem","getInputValue","getTalentsString","join","replace","setInputValue","newValue","parts","split","idx","setTalentsString","updateTrees","isFull","classList","add","remove","update","numPoints","sum","setMaxPoints","newMaxPoints","Component","picker","innerHTML","title","getElementsByClassName","main","style","backgroundImage","backgroundUrl","gridTemplateRows","iconSize","min","height","width","TalentPicker","prereqLocation","getTalent","prereqOfLocation","addEventListener","event","inputChanged","nextEventID","textContent","name","find","getRow","getCol","colIdx","Error","String","getPoints","str","Number","charAt","document","createElement","gridRow","gridColumn","dataset","wowhead","pointsDisplay","appendChild","preventDefault","longTouchTimer","window","setTimeout","clearTimeout","newPoints","isRightClick","pts","points","isNaN","canSetPoints","oldPoints","additionalPoints","removedPoints","pointTotalsByRow","keys","filter","talentsInRow","cumulativeTotalsByRow","_","slice","checkValidity","spellId","getSpellIdForPoints","ActionId","fromSpellId","fill","then","actionId","setWowheadHref","iconUrl","rank","spellIds","fieldName","newTalentsConfig","prevTalent","curSpellId","pointIdx","push","druidTalentsConfig","druidGlyphsConfig","majorGlyphs","DruidMajorGlyph","GlyphOfBarkskin","description","GlyphOfBerserk","GlyphOfClaw","GlyphOfEntanglingRoots","GlyphOfFocus","GlyphOfFrenziedRegeneration","GlyphOfGrowling","GlyphOfHealingTouch","GlyphOfHurricane","GlyphOfInnervate","GlyphOfInsectSwarm","GlyphOfLifebloom","GlyphOfMangle","GlyphOfMaul","GlyphOfMonsoon","GlyphOfMoonfire","GlyphOfOmenOfClarity","GlyphOfNourish","GlyphOfRake","GlyphOfRapidRejuvenation","GlyphOfRebirth","GlyphOfRegrowth","GlyphOfRejuvenation","GlyphOfRip","GlyphOfSavageRoar","GlyphOfShred","GlyphOfStarfall","GlyphOfStarfire","GlyphOfSurvivalInstincts","GlyphOfSwiftmend","GlyphOfWildGrowth","GlyphOfWrath","minorGlyphs","DruidMinorGlyph","GlyphOfAquaticForm","GlyphOfChallengingRoar","GlyphOfDash","GlyphOfTheWild","GlyphOfThorns","GlyphOfTyphoon","GlyphOfUnburdenedRebirth","hunterTalentsConfig","hunterGlyphsConfig","HunterMajorGlyph","GlyphOfAimedShot","GlyphOfArcaneShot","GlyphOfAspectOfTheViper","GlyphOfBestialWrath","GlyphOfChimeraShot","GlyphOfDeterrence","GlyphOfDisengage","GlyphOfExplosiveShot","GlyphOfExplosiveTrap","GlyphOfFreezingTrap","GlyphOfFrostTrap","GlyphOfHuntersMark","GlyphOfImmolationTrap","GlyphOfKillShot","GlyphOfMending","GlyphOfMultiShot","GlyphOfRapidFire","GlyphOfRaptorStrike","GlyphOfScatterShot","GlyphOfSerpentSting","GlyphOfSnakeTrap","GlyphOfSteadyShot","GlyphOfTheBeast","GlyphOfTheHawk","GlyphOfTrueshotAura","GlyphOfVolley","GlyphOfWyvernSting","HunterMinorGlyph","GlyphOfFeignDeath","GlyphOfMendPet","GlyphOfPossessedStrength","GlyphOfRevivePet","GlyphOfScareBeast","GlyphOfThePack","mageTalentsConfig","mageGlyphsConfig","MageMajorGlyph","GlyphOfArcaneBarrage","GlyphOfArcaneBlast","GlyphOfArcaneExplosion","GlyphOfArcaneMissiles","GlyphOfArcanePower","GlyphOfBlink","GlyphOfDeepFreeze","GlyphOfEternalWater","GlyphOfEvocation","GlyphOfFireBlast","GlyphOfFireball","GlyphOfFrostNova","GlyphOfFrostbolt","GlyphOfFrostfire","GlyphOfIceArmor","GlyphOfIceBarrier","GlyphOfIceBlock","GlyphOfIceLance","GlyphOfIcyVeins","GlyphOfInvisibility","GlyphOfLivingBomb","GlyphOfMageArmor","GlyphOfManaGem","GlyphOfMirrorImage","GlyphOfMoltenArmor","GlyphOfPolymorph","GlyphOfRemoveCurse","GlyphOfScorch","GlyphOfWaterElemental","MageMinorGlyph","GlyphOfArcaneIntellect","GlyphOfBlastWave","GlyphOfFireWard","GlyphOfFrostArmor","GlyphOfFrostWard","GlyphOfSlowFall","GlyphOfThePenguin","paladinTalentsConfig","paladinGlyphsConfig","PaladinMajorGlyph","GlyphOfAvengerSShield","GlyphOfAvengingWrath","GlyphOfBeaconOfLight","GlyphOfCleansing","GlyphOfConsecration","GlyphOfCrusaderStrike","GlyphOfDivinePlea","GlyphOfDivineStorm","GlyphOfDivinity","GlyphOfExorcism","GlyphOfFlashOfLight","GlyphOfHammerOfJustice","GlyphOfHammerOfTheRighteous","GlyphOfHammerOfWrath","GlyphOfHolyLight","GlyphOfHolyShock","GlyphOfHolyWrath","GlyphOfJudgement","GlyphOfRighteousDefense","GlyphOfSalvation","GlyphOfSealOfCommand","GlyphOfSealOfLight","GlyphOfSealOfRighteousness","GlyphOfSealOfVengeance","GlyphOfSealOfWisdom","GlyphOfShieldOfRighteousness","GlyphOfSpiritualAttunement","GlyphOfTurnEvil","GlyphOfReckoning","PaladinMinorGlyph","GlyphOfBlessingOfKings","GlyphOfBlessingOfMight","GlyphOfBlessingOfWisdom","GlyphOfLayOnHands","GlyphOfSenseUndead","GlyphOfTheWise","priestTalentsConfig","priestGlyphsConfig","PriestMajorGlyph","GlyphOfCircleOfHealing","GlyphOfDispelMagic","GlyphOfDispersion","GlyphOfFade","GlyphOfFearWard","GlyphOfFlashHeal","GlyphOfGuardianSpirit","GlyphOfHolyNova","GlyphOfHymnOfHope","GlyphOfInnerFire","GlyphOfLightwell","GlyphOfMassDispel","GlyphOfMindControl","GlyphOfMindFlay","GlyphOfMindSear","GlyphOfPainSuppression","GlyphOfPenance","GlyphOfPowerWordShield","GlyphOfPrayerOfHealing","GlyphOfPsychicScream","GlyphOfRenew","GlyphOfScourgeImprisonment","GlyphOfShadow","GlyphOfShadowWordDeath","GlyphOfShadowWordPain","GlyphOfSmite","GlyphOfSpiritOfRedemption","PriestMinorGlyph","GlyphOfFading","GlyphOfFortitude","GlyphOfLevitate","GlyphOfShackleUndead","GlyphOfShadowProtection","GlyphOfShadowfiend","rogueTalentsConfig","rogueGlyphsConfig","RogueMajorGlyph","GlyphOfAdrenalineRush","GlyphOfAmbush","GlyphOfBackstab","GlyphOfBladeFlurry","GlyphOfCloakOfShadows","GlyphOfCripplingPoison","GlyphOfDeadlyThrow","GlyphOfEvasion","GlyphOfEviscerate","GlyphOfExposeArmor","GlyphOfFanOfKnives","GlyphOfFeint","GlyphOfGarrote","GlyphOfGhostlyStrike","GlyphOfGouge","GlyphOfHemorrhage","GlyphOfHungerForBlood","GlyphOfKillingSpree","GlyphOfMutilate","GlyphOfPreparation","GlyphOfRupture","GlyphOfSap","GlyphOfShadowDance","GlyphOfSinisterStrike","GlyphOfSliceAndDice","GlyphOfSprint","GlyphOfTricksOfTheTrade","GlyphOfVigor","RogueMinorGlyph","GlyphOfBlurredSpeed","GlyphOfDistract","GlyphOfPickLock","GlyphOfPickPocket","GlyphOfSafeFall","GlyphOfVanish","shamanTalentsConfig","shamanGlyphsConfig","ShamanMajorGlyph","GlyphOfChainHeal","GlyphOfChainLightning","GlyphOfEarthShield","GlyphOfEarthlivingWeapon","GlyphOfElementalMastery","GlyphOfFeralSpirit","GlyphOfFireElementalTotem","GlyphOfFireNova","GlyphOfFlameShock","GlyphOfFlametongueWeapon","GlyphOfFrostShock","GlyphOfHealingStreamTotem","GlyphOfHealingWave","GlyphOfHex","GlyphOfLava","GlyphOfLavaLash","GlyphOfLesserHealingWave","GlyphOfLightningBolt","GlyphOfLightningShield","GlyphOfManaTide","GlyphOfRiptide","GlyphOfShocking","GlyphOfStoneclawTotem","GlyphOfStormstrike","GlyphOfThunder","GlyphOfTotemOfWrath","GlyphOfWaterMastery","GlyphOfWindfuryWeapon","ShamanMinorGlyph","GlyphOfAstralRecall","GlyphOfGhostWolf","GlyphOfRenewedLife","GlyphOfThunderstorm","GlyphOfWaterBreathing","GlyphOfWaterShield","GlyphOfWaterWalking","warlockTalentsConfig","warlockGlyphsConfig","WarlockMajorGlyph","GlyphOfChaosBolt","GlyphOfConflagrate","GlyphOfCorruption","GlyphOfCurseOfAgony","GlyphOfDeathCoil","GlyphOfDemonicCircle","GlyphOfFear","GlyphOfFelguard","GlyphOfFelhunter","GlyphOfHaunt","GlyphOfHealthFunnel","GlyphOfHealthstone","GlyphOfHowlOfTerror","GlyphOfImmolate","GlyphOfImp","GlyphOfIncinerate","GlyphOfLifeTap","GlyphOfMetamorphosis","GlyphOfQuickDecay","GlyphOfSearingPain","GlyphOfShadowBolt","GlyphOfShadowburn","GlyphOfShadowflame","GlyphOfSiphonLife","GlyphOfSoulLink","GlyphOfSoulstone","GlyphOfSuccubus","GlyphOfUnstableAffliction","GlyphOfVoidwalker","WarlockMinorGlyph","GlyphOfCurseOfExhausion","GlyphOfDrainSoul","GlyphOfSubjugateDemon","GlyphOfKilrogg","GlyphOfSouls","GlyphOfUnendingBreath","warriorTalentsConfig","warriorGlyphsConfig","WarriorMajorGlyph","GlyphOfBarbaricInsults","GlyphOfBladestorm","GlyphOfBlocking","GlyphOfBloodthirst","GlyphOfCleaving","GlyphOfDevastate","GlyphOfEnragedRegeneration","GlyphOfExecution","GlyphOfHamstring","GlyphOfHeroicStrike","GlyphOfIntervene","GlyphOfLastStand","GlyphOfMortalStrike","GlyphOfOverpower","GlyphOfRapidCharge","GlyphOfRending","GlyphOfResonatingPower","GlyphOfRevenge","GlyphOfShieldWall","GlyphOfShockwave","GlyphOfSpellReflection","GlyphOfSunderArmor","GlyphOfSweepingStrikes","GlyphOfTaunt","GlyphOfVictoryRush","GlyphOfVigilance","GlyphOfWhirlwind","WarriorMinorGlyph","GlyphOfBattle","GlyphOfBloodrage","GlyphOfCharge","GlyphOfCommand","GlyphOfEnduringVictory","GlyphOfMockingBlow","GlyphOfThunderClap","GlyphOfShatteringThrow","deathknightTalentsConfig","deathknightGlyphsConfig","DeathknightMajorGlyph","GlyphOfAntiMagicShell","GlyphOfBloodStrike","GlyphOfBoneShield","GlyphOfChainsOfIce","GlyphOfDancingRuneWeapon","GlyphOfDarkCommand","GlyphOfDarkDeath","GlyphOfDeathAndDecay","GlyphOfDeathGrip","GlyphOfDeathStrike","GlyphOfDisease","GlyphOfFrostStrike","GlyphOfHeartStrike","GlyphOfHowlingBlast","GlyphOfHungeringCold","GlyphOfIceboundFortitude","GlyphOfIcyTouch","GlyphOfObliterate","GlyphOfPlagueStrike","GlyphOfRuneStrike","GlyphOfRuneTap","GlyphOfScourgeStrike","GlyphOfStrangulate","GlyphOfTheGhoul","GlyphOfUnbreakableArmor","GlyphOfUnholyBlight","GlyphOfVampiricBlood","DeathknightMinorGlyph","GlyphOfBloodTap","GlyphOfCorpseExplosion","GlyphOfDeathSEmbrace","GlyphOfHornOfWinter","GlyphOfPestilence","GlyphOfRaiseDead","itemQualityCssClasses","ItemQuality","ItemQualityJunk","ItemQualityCommon","ItemQualityUncommon","ItemQualityRare","ItemQualityEpic","ItemQualityLegendary","setItemQualityCssClass","elem","quality","Object","values","cssClass","DEFAULT_CONFIG","fixed","CloseButton","onClick","setAttribute","insertAdjacentHTML","closeButton","footer","header","scrollContents","size","BaseModal","modalConfig","modalSizeKlass","dialog","querySelector","container","body","addCloseButton","modal","Modal","open","close","async","stopImmediatePropagation","backdrop","Promise","resolve","_backdrop","_element","insertAdjacentElement","stopPropagation","show","hide","emptyGlyphData","id","GlyphsPicker","player","glyphsConfig","majorGlyphPickers","minorGlyphPickers","idStr","majorGlyphsData","getGlyphData","glyph","minorGlyphsData","sort","a","b","stringComparator","glyphField","GlyphPicker","glyphConfig","glyphOptions","isMajor","changedEvent","glyphsChangeEmitter","getValue","getGlyphs","setValue","glyphs","player2","setGlyphs","selectedGlyph","iconElem","GlyphSelectorModal","closest","glyphData","href","makeItemUrl","glyphPicker","listElem","listItemElems","concat","glyphIdx","listItemElem","children","nameElem","onclick","updateSelected","selectedGlyphId","listItemIdx","parseInt","listItemData","applyFilters","validItemElems","searchInput","value","searchQuery","toLowerCase","include","v","includes","numShown","ev","key","ele","contains","click","classTalentsConfig","Class","ClassUnknown","ClassDeathknight","ClassDruid","ClassShaman","ClassHunter","ClassMage","ClassRogue","ClassPaladin","ClassPriest","ClassWarlock","ClassWarrior","classGlyphsConfig","talentStringToProto","talentString","talentsConfig","treeString","treeIdx","protoToTalentString","_Player","spec","buffs","IndividualBuffs","consumes","Consumes","bonusStats","gear","Gear","itemSwapGear","ItemSwapGear","profession1","profession2","aplRotation","APLRotation","talentsString","Glyphs","cooldowns","Cooldowns","inFrontOfTarget","distanceFromTarget","healingModel","HealingModel","healingEnabled","itemEPCache","Map","gemEPCache","enchantEPCache","epRatios","numEpRatios","epWeights","currentStats","PlayerStats","nameChangeEmitter","buffsChangeEmitter","consumesChangeEmitter","bonusStatsChangeEmitter","gearChangeEmitter","professionChangeEmitter","raceChangeEmitter","rotationChangeEmitter","talentsChangeEmitter","specOptionsChangeEmitter","cooldownsChangeEmitter","inFrontOfTargetChangeEmitter","distanceFromTargetChangeEmitter","healingModelChangeEmitter","epWeightsChangeEmitter","currentStatsEmitter","epRatiosChangeEmitter","party","raid","race","specToEligibleRaces","specTypeFunctions","rotation","rotationCreate","specOptions","optionsCreate","onAny","getSpecIcon","getTalentTreeIcon","getClass","specToClass","getClassColor","classColors","isSpec","isClass","clazz","getParty","getRaid","getPartyIndex","getPlayers","indexOf","getRaidIndex","getIndex","MAX_PARTY_SIZE","setParty","newParty","getOtherPartyMembers","getItems","slot","db","item","canEquipItem","getEnchants","enchant","canEquipEnchant","getGems","socketColor","getEpWeights","setEpWeights","newEpWeights","getDefaultEpRatios","isTankSpec","isHealingSpec","defaultRatios","getEpRatios","setEpRatios","newRatios","epStats","epPseudoStats","epReferenceStat","onProgress","statWeights","getCurrentStats","setCurrentStats","newStats","getName","setName","newName","getLabel","getRace","setRace","newRace","getProfession1","setProfession1","newProfession","getProfession2","setProfession2","getProfessions","p","Profession","ProfessionUnknown","setProfessions","newProfessions","hasProfession","prof","isBlacksmithing","Blacksmithing","getFaction","raceToFaction","getBuffs","setBuffs","newBuffs","getConsumes","setConsumes","newConsumes","getCooldowns","setCooldowns","newCooldowns","canDualWield2H","getTalents","titansGrip","equipItem","newItem","setGear","withEquippedItem","getEquippedItem","getGear","getItemSwapGear","newGear","getBonusStats","setBonusStats","newBonusStats","getRotation","rotationCopy","setRotation","newRotation","rotationEquals","setAplRotation","talentsCreate","newTalentsString","getTalentTree","newGlyphs","getMajorGlyphs","major1","major2","major3","getMinorGlyphs","minor1","minor2","minor3","getAllGlyphs","getSpecOptions","optionsCopy","setSpecOptions","newSpecOptions","optionsEquals","getInFrontOfTarget","setInFrontOfTarget","newInFrontOfTarget","getDistanceFromTarget","setDistanceFromTarget","newDistanceFromTarget","setDefaultHealingParams","hm","boss","encounter","cadenceSeconds","hps","enableHealing","getHealingModel","setHealingModel","newHealingModel","computeStatsEP","computeEP","computeGemEP","gem","has","get","epFromStats","epFromEffect","getMetaGemEffectEP","finalStats","bonusEP","unique","ep","set","computeEnchantEP","effectId","computeItemEP","itemStats","weaponSpeed","weaponDps","getWeaponDPS","ItemSlot","ItemSlotMainHand","withPseudoStat","PseudoStat","PseudoStatMainHandDps","ItemSlotOffHand","PseudoStatOffHandDps","ItemSlotRanged","PseudoStatRangedDps","bestGemEPNotMatchingSockets","gemSockets","gems","isUnrestrictedGem","getPhase","bestGemEPMatchingSockets","gemMatchesSocket","socketBonus","setWowheadData","equippedItem","lang","getLanguageCode","langPrefix","curGems","ei","hasExtraSocket","filterItemData","itemData","getItemFunc","filters","getFilters","filterItems","filterFunc","itemElem","factionRestriction","UIItem_FactionRestriction","UNSPECIFIED","sources","SourceFilterOption","SourceCrafting","some","itemSrc","source","oneofKind","SourceQuest","srcOptionStr","difficulty","entries","DIFFICULTY_SRCS","srcOption","drop","DungeonDifficulty","DifficultyRaid10H","DifficultyRaid25H","normalDifficulty","HEROIC_TO_NORMAL","category","AL_CATEGORY_HARD_MODE","raids","RaidFilterOption","RaidVanilla","expansion","Expansion","ExpansionVanilla","RaidTbc","ExpansionTbc","raidOptionStr","zoneId","RAID_IDS","raidOption","ARMOR_SLOTS","armorTypes","armorType","WEAPON_SLOTS","weaponTypes","weaponType","oneHandedWeapons","handType","HandType","HandTypeTwoHand","twoHandedWeapons","minSpeed","minMhWeaponSpeed","minOhWeaponSpeed","maxSpeed","maxMhWeaponSpeed","maxOhWeaponSpeed","rangedWeaponTypes","rangedWeaponType","minRangedWeaponSpeed","maxRangedWeaponSpeed","filterEnchantData","enchantData","getEnchantFunc","currentEquippedItem","enchantElem","enchantAppliesToItem","filterGemData","gemData","getGemFunc","gemElem","matchingGemsOnly","makeRaidTarget","emptyRaidTarget","newRaidTarget","toDatabase","dbGear","dbItemSwapGear","SimDatabase","items","enchants","forExport","withSpecProto","PlayerProto","class","equipment","asSpec","database","lookupEquipmentSpec","UnitStats","rotationFromPlayer","optionsFromPlayer","newPlayer","applySharedDefaults","burstWindow","hpPercentForDefensives","Player","ItemSlotHead","ItemSlotShoulder","ItemSlotChest","ItemSlotWrist","ItemSlotHands","ItemSlotLegs","ItemSlotWaist","ItemSlotFeet","SourceDungeon","DifficultyNormal","SourceDungeonH","DifficultyHeroic","SourceRaid10","DifficultyRaid10","SourceRaid10H","SourceRaid25","DifficultyRaid25","SourceRaid25H","RaidNaxxramas","RaidEyeOfEternity","RaidObsidianSanctum","RaidVaultOfArchavon","RaidUlduar","RaidTrialOfTheCrusader","RaidOnyxiasLair","RaidIcecrownCitadel","RaidRubySanctum","Party","PartyBuffs","compChangeEmitter","players","playerChangeListener","isEmpty","clear","setPlayer","getParties","getPlayer","playerIndex","oldPlayer","off","newPlayerOldParty","PartyProto","playerProto","playerToSpec","currentPlayer","MAX_NUM_PARTIES","Raid","RaidBuffs","debuffs","Debuffs","tanks","targetDummies","numActiveParties","debuffsChangeEmitter","tanksChangeEmitter","targetDummiesChangeEmitter","numActivePartiesChangeEmitter","parties","activePlayers","floor","getPlayerFromRaidTarget","raidTarget","targetIndex","NO_TARGET","getClassCount","playerClass","demonicPact","demonicPactSp","demonicPactOld","totemOfWrath","newDebuff","setDebuffs","getDebuffs","newDebuffs","getTanks","RaidTarget","tank","setTanks","newTanks","getTargetDummies","setTargetDummies","newTargetDummies","getNumActiveParties","setNumActiveParties","newNumActiveParties","getActivePlayers","activeParties","RaidProto","SIM_WORKER_URL","REPO_NAME","WorkerPool","numWorkers","workers","SimWorker","getLeastBusyWorker","reduce","curMinWorker","nextWorker","numTasksRunning","requestName","request","doApiCall","result","makeApiCall","ComputeStatsRequest","toBinary","ComputeStatsResult","fromBinary","console","log","StatWeightsRequest","toJsonString","worker","makeTaskId","addPromiseFunc","newProgressHandler","err","resultData","ProgressMetrics","StatWeightsResult","finalWeightResult","BulkSimRequest","enumAsInteger","resultJson","BulkSimResult","toJson","finalBulkResult","JSON","stringify","RaidSimRequest","RaidSimResult","finalRaidResult","progressData","progress","taskIdsToPromiseFuncs","Worker","resolveReady","onReady","_resolve","_reject","onmessage","data","msg","postMessage","warn","promiseFuncs","outputData","callback","onError","characters","random","taskPromise","reject","inputData","_Sim","iterations","phase","OtherConstants.CURRENT_PHASE","faction","Faction","Alliance","fixedRngSeed","defaultFilters","showDamageMetrics","showThreatMetrics","showHealingMetrics","showExperimental","language","db_","iterationsChangeEmitter","phaseChangeEmitter","factionChangeEmitter","fixedRngSeedChangeEmitter","lastUsedRngSeedChangeEmitter","filtersChangeEmitter","showDamageMetricsChangeEmitter","showThreatMetricsChangeEmitter","showHealingMetricsChangeEmitter","showExperimentalChangeEmitter","languageChangeEmitter","crashEmitter","simResultEmitter","bulkSimStartEmitter","bulkSimResultEmitter","lastUsedRngSeed","modifyRaidProto","workerPool","_initPromise","Database","settingsChangeEmitter","updateCharacterStats","waitForInit","setModifyRaidProto","newModFn","getModifiedRaidProto","raidProto","gearChanged","isBlacksmith","hasInactiveMetaGem","withoutMetaGem","withoutBlacksmithSockets","makeRaidSimRequest","debug","simOptions","SimOptions","getIterations","randomSeed","BigInt","nextRngSeed","debugFirstIteration","bulkSettings","bulkItemsDb","baseSettings","playerDatabase","bulkSimAsync","errorResult","SimError","raidSimAsync","simResult","SimResult","makeNew","req","computeStats","raidStats","partyStats","partyIndex","playerStats","raidBuffs","partyBuffs","statsToWeigh","pseudoStatsToWeigh","statWeightsAsync","setPhase","newPhase","setFaction","newFaction","getFixedRngSeed","setFixedRngSeed","newFixedRngSeed","rngSeed","MAX_RNG_SEED","getLastUsedRngSeed","DatabaseFilters","setFilters","newFilters","getShowDamageMetrics","setShowDamageMetrics","newShowDamageMetrics","getShowThreatMetrics","setShowThreatMetrics","newShowThreatMetrics","getShowHealingMetrics","setShowHealingMetrics","newShowHealingMetrics","getShowExperimental","setShowExperimental","newShowExperimental","getLanguage","setLanguage","newLanguage","getBrowserLanguageCode","setLanguageCode","setIterations","newIterations","ALL_ARMOR_TYPES","ALL_WEAPON_TYPES","ALL_RANGED_WEAPON_TYPES","ALL_SOURCES","ALL_RAIDS","SimSettingsProto","isTankSim","isHealingSim","Sim","pow","getEnumValues","ArmorType","WeaponType","RangedWeaponType","errorStr","LaunchStatus","LaunchStatus2","raidSimStatus","simLaunchStatuses","Spec","SpecBalanceDruid","SpecFeralDruid","SpecFeralTankDruid","SpecRestorationDruid","SpecElementalShaman","SpecEnhancementShaman","SpecRestorationShaman","SpecHunter","SpecMage","SpecRogue","SpecHolyPaladin","SpecProtectionPaladin","SpecRetributionPaladin","SpecHealingPriest","SpecShadowPriest","SpecSmitePriest","SpecWarlock","SpecWarrior","SpecProtectionWarrior","SpecDeathknight","SpecTankDeathknight","memeSpecs","getLaunchedSimsForClass","klass","specStr","NumberPicker","float","positive","inputElem","type","onchange","e","abs","parseFloat","toFixed","toString","ResultsViewer","parentElem","warnings","pendingElem","contentElem","warningElem","warningsLink","addWarningsLink","updateWarnings","hideAll","addWarningLink","args","fragment","classes","tooltip","icon","text","link","Tooltip","addWarning","warning","updateOn","activeWarnings","getContent","content","tooltipFragment","getAttribute","list","parentElement","listItem","outerHTML","display","setPending","setContent","SimTitleDropdown","currentSpecIndex","specLabels","rootLinkArgs","rootLink","buildRootSimLink","noDropdown","dropdownMenu","buildDropdown","Alpha","raidListItem","buildRaidLink","naturalClassOrder","classIndex","sims","buildClassLink","buildClassDropdown","dropdownFragment","classLink","specIndex","buildSpecLink","label","iconPath","getSimIconPath","textKlass","getContextualKlass","raidSimLabel","specNames","classNames","launchStatusLabel","raidSimSiteUrl","specIndexes","getSpecSiteUrl","className","specLabel","Launched","raidSimIcon","titleIcons","textCssClassForClass","textCssClassForSpec","BooleanPicker","Boolean","checked","EnumPicker","selectElem","option","SettingsMenu","simUI","restoreDefaultsButton","getOrCreateInstance","labelTooltip","extraCssClasses","langs","wowheadSupportedLanguages","defaultLang","reload","SimHeader","simTabsContainer","simToolbar","knownIssuesLink","addKnownIssuesLink","addBugReportLink","addDownloadBinaryLink","addSimOptionsLink","addSocialLinks","activateTab","addTab","contentId","isFirstTab","tabFragment","addSimTabLink","tab","navLink","navItem","addImportLink","hideInRaidSim","addImportExportLink","addExportLink","menuElem","itemFragment","addToolbarLink","addKnownIssue","issue","fetch","resp","json","versionInfo","outdated","catch","error","addDiscordLink","addGitHubLink","addPatreonLink","customRootElement","headerFragment","globalKnownIssues","SimUI","cssScheme","isWithinRaidSim","simHTML","simContentContainer","simHeader","simMain","handleCrash","updateShowDamageMetrics","updateShowThreatMetrics","updateShowHealingMetrics","updateShowEpRatios","updateShowExperimental","addKnownIssues","titleElem","resultsViewerElem","resultsViewer","simActionsContainer","sim2","iterationsPicker","simTabContentsContainer","runSimOnce","addAction","actFn","button","tabContentFragment","addSimTab","statusStr","launchStatus","Unlaunched","Beta","knownIssues","getSettingsStorageKey","getStorageKey","getSavedEncounterStorageKey","isIndividualSim","runRaidSim","runRaidSimWithLogs","alert","confirm","hash","hashCode","toLink","issues","total_count","html_url","base","maxBodyLength","issueBody","encodeURIComponent","truncated","lastIndexOf","CrashModal","fetchErr","len","charCodeAt","createTextNode","CharacterStats","modifyDisplayStats","statOrder","stat","table","valueElems","statName","getClassStatName","row","valueElem","bonusStatsLink","updateStats","statMods","baseStats","gearStats","talentsStats","buffsStats","consumesStats","debuffStats","getDebuffStats","baseDelta","subtract","gearDelta","talentsDelta","buffsDelta","consumesDelta","statDisplayString","prepend","bonusStatValue","getStat","deltaStats","rawValue","getPseudoStat","PseudoStatBlockValueMultiplier","displayStr","round","StatMeleeHit","StatSpellHit","StatMeleeCrit","StatSpellCrit","StatMeleeHaste","StatSpellHaste","StatArmorPenetration","StatExpertise","StatDefense","Mechanics.CHARACTER_LEVEL","StatBlock","StatDodge","PseudoStatDodge","StatParry","PseudoStatParry","StatResilience","misery","faerieFire","TristateEffect","TristateEffectImproved","addStat","heartOfTheCrusader","masterPoisoner","improvedScorch","wintersChill","shadowMastery","popover","Popover","customClass","fallbackPlacement","sanitize","popoverBody","withStat","IconEnumPicker","modObj","currentValue","zeroValue","showWhen","buttonElem","buttonText","gridTemplateColumns","numColumns","valueConfig","optionContainer","setImage","optionText","append","dispatchEvent","Event","setActionImage","fillAndSet","backgroundColor","color","setActive","enabled","backupIconUrl","backupId","active","LogRunner","controlBar","simButton","logsDiv","logs","isCastCompleted","lineElem","ContentBlock","headerElement","buildHeader","bodyElement","buildBody","bodyClasses","cl","titleTag","bodyElem","SavedDataManager","userData","presets","frozen","contentBlock","savedDataDiv","presetsOnly","buildCreateContainer","saveInput","addSavedData","newData","makeSavedData","dataArr","isPreset","oldIdx","findIndex","insertBefore","replaceChild","dataElemFragment","dataElem","setData","deleteFragment","deleteButton","dispose","splice","saveUserData","checkActive","getData","enableWhen","changeEmitters","savedData","localStorage","setItem","storageKey","loadUserData","dataStr","getItem","jsonData","parse","fromJson","freeze","savedDataCreateFragment","_EpWeightsMenu","baseConfig","getModalConfig","showAllStats","statsType","tableBody","resultsElem","updateType","getNameFromStat","getStatFromName","updateEpRefStat","prevEpSimResult","calculateEp","getPrevSimResult","updateTable","prevEpIterations","querySelectorAll","epSelect","options","Option","dpsRefStat","getDpsEpRefStat","healRefStat","getHealEpRefStat","tankRefStat","getTankEpRefStat","optimizeGemsButton","previousContents","getBoundingClientRect","optimizeGems","calcButton","scrollTo","top","computeStatWeights","setSimProgress","colActionButtons","from","makeUpdateWeights","weightsFunc","epRefStat","previousElementSibling","labelTooltipConfig","toggle","html","refStatName","dps","weights","epValues","tps","dtps","tmi","pDeath","individualConfig","defaults","showAllStatsContainer","menu","makeEpRatioCell","cell","updateButton","results","scaledDpsEp","scale","scaledHpsEp","scaledTpsEp","scaledDtpsEp","scaledTmiEp","scaledPDeathEp","newEp","scaledDpsWeights","scaledHpsWeights","scaledTpsWeights","scaledDtpsWeights","scaledTmiWeights","scaledPDeathWeights","newWeights","completedSims","totalSims","completedIterations","totalIterations","skipFormatting","epUnitStats","isStat","isPseudoStat","makeTableRow","makeWeightAndEpCellHtml","epCurrent","getUnitStat","epAvg","getProtoValue","template","stDevToConf90","weightsStdev","epValuesStdev","epAvgElem","epDelta","currentEpCell","withUnitStat","normaliseValue","refStat","refUnitStat","UnitStat","fromStat","refWeight","refStdev","setProtoValue","valueStdev","w","allGems","isJewelcrafting","Jewelcrafting","optimizedGear","optimizeGemsForWeights","unrestrictedGems","Gems.isUnrestrictedGem","bestGemForColor","bestGemForColorEP","bestGemForSocket","bestGemForSocketEP","bestGem","bestGemEP","findBestGems","asMap","socketBonusEPs","itemSlot","socketColors","curSocketColors","GemColor","GemColorMeta","withGem","allSockets","itemSlotStr","numSockets","socketIdx","threeSocketCombos","permutations","calculateGearGemsEP","statsFromGems","jcGems","requiredProfession","bestJcGemForColor","bestJcGemForColorEP","bestJcGemForSocket","bestJcGemForSocketEP","bestJcGem","bestJcGemEP","bestGear","bestGearEP","socketCombo","curItems","gemColor","curGear","hasActiveMetaGem","curGearEP","metaGem","getMetaGem","condition","Gems.getMetaGemCondition","isCompareColorCondition","getAllGems","colorCombos","getColorCombosToSatisfyCondition","colorCombo","isOneOfEach","Gems.PRIMARY_COLORS","GemColorPrismatic","Gems.SECONDARY_COLORS","secondaryColor","remainingColor","Gems.socketToMatchingColors","matchingColor","isTwoAndOne","oneColor","minRed","minYellow","minBlue","twoColor","Gems.gemColorMatchesSocket","partialCombo","isThreeOfAColor","threeColor","matchingColors","combinationsWithDups","gemList","Gems.GEM_COLORS","gemEP","GEM_COLORS","Gems.gemMatchesSocket","EpWeightsMenu","getAll","Importer","includeFile","uploadInputId","replaceAll","textElem","descriptionElem","files","importButton","onImport","charClass","equipmentSpec","talentsStr","professions","loadLeftoversIfNecessary","expectedEnchantIds","foundEnchantIds","missingEnchants","expectedId","expectedItemIds","foundItemIds","missingItems","IndividualJsonImporter","IndividualSimSettings","fromJsonString","ignoreUnknownFields","Individual80UImporter","importJson","nameToClass","character","gameClass","nameToRace","Race","RaceUnknown","talentIds","spellIdIndex","talentSpellIdsToTalentString","talentJson","EquipmentSpec","itemJson","itemSpec","ItemSpec","gemJson","finishIndividualImport","_IndividualWowheadGearPlannerImporter","url","match","base64Data","Uint8Array","atob","c","numTalentBytes","talentBytes","subarray","buf2hex","cur","numGlyphBytes","glyphBytes","gearBytes","hasGlyphs","d","glyphStr","fromCharCode","glyphIds","glyphPosition","itemId","glyphSpellToItemId","slotId","isEnchanted","numGems","highid","enchantSpellId","enchantSpellIdToEffectId","gemIdx","gemPosition","highgemid","gemId","slotIDs","IndividualWowheadGearPlannerImporter","ItemSlotNeck","ItemSlotBack","ItemSlotFinger1","ItemSlotFinger2","ItemSlotTrinket1","ItemSlotTrinket2","IndividualAddonImporter","nameToProfession","profData","majorGlyphIDs","g","glyphToID","minorGlyphIDs","gearJson","glyphName","glyphIDStr","glyphNameToID","factionRestrictionsToLabels","ALLIANCE_ONLY","HORDE_ONLY","FiltersMenu","section","newSection","restriction","s","SourceUnknown","sourceNames","RaidUnknown","raidNames","maxArmorType","classToMaxArmorType","ArmorTypeLeather","section2","at","ArmorTypeUnknown","armorTypeNames","weaponTypeSection","classToEligibleWeaponTypes","ewt","weaponTypeNames","weaponSpeedSection","isDualWieldSpec","classToEligibleRangedWeaponTypes","rangedWeaponTypeSection","rangedWeaponTypeNames","rangedWeaponSpeedSection","InFrontOfTarget","DistanceFromTarget","TankAssignment","IncomingHps","HealingCadence","HealingCadenceVariation","cadenceVariation","BurstWindow","HpPercentForDefensives","InspirationUptime","inspirationUptime","descriptionsPromise","getEnchantDescription","response","descriptionsMap","getUniqueEnchantString","GearPicker","leftSide","rightSide","leftItemPickers","ItemPicker","rightItemPickers","itemPickers","ItemRenderer","socketsContainerElem","removeAttribute","heroic","heroic_span","marginLeft","innerText","asActionId","filledId","setBackgroundAndHref","makeSpellUrl","allSocketColors","gemFragment","gemContainer","gemIconElem","src","getEmptyGemSocketIconUrl","fromItemId","numPossibleSockets","ItemType","ItemTypeWrist","ItemTypeHands","updateProfession","_items","_enchants","_equippedItem","gearData","changeEvent","openGearSelector","openSelectorModal","SelectorModalTabs","Items","openEnchantSelector","Enchants","onClickEnd","slotNames","getEmptySlotIconUrl","SelectorModal","selectedTab","eligibleItems","eligibleEnchants","IconItemSwapPicker","iconAnchor","addItemSpecToGear","onClickStart","finally","itemSwap","getFieldNameFromItemSlot","lookupItemSpec","tabsElem","openTabName","openTab","fromItem","baseEP","ignoreEPFilter","onEquip","withItem","EquippedItem","GemColorUnknown","withEnchant","addGemTabs","socketBonusEP","tabAnchor","socketElem","emptySocketUrl","updateGemIcon","addOnDisposeCallback","equippedToItemFn","onRemove","setTabContent","dataA","dataB","ilvl","diff","tabContentId","selected","tabElem","ilist","ItemList","Item","is","removeTabs","invokeUpdate","applyFilter","labelSubstring","tabElems","prototype","call","contentElems","getElementById","substring","emptySlotIcons","onItemClick","tabContent","helpIcon","tippy","makeShow1hWeaponsSelector","makeShow2hWeaponsSelector","makeShowMatchingGemsSelector","startsWith","makePhaseSelector","initialFilters","lastFavElem","itemIdx","itemEP","sourceElem","fillSourceInfo","clickHandle","favoriteElem","isFavorite","favId","favoriteItems","favIdx","favoriteEnchants","favoriteGems","curItemElems","nextElem","fav","curIdx","setFavorite","after","removeButton","simAllButton","hidden","IndividualSimUI","itemSpecs","isRangedOrTrinket","curItem","curEP","idata","bt","addItems","newEquippedItem","newItemId","newEP","epDeltaElem","listItemEP","formatDeltaTextElem","crafted","professionNames","profession","zone","getZone","npc","getNpc","npcId","makeZoneUrl","difficultyNames","makeNpcUrl","otherName","quest","makeQuestUrl","soldBy","npcName","SimTab","identifier","childNodes","buildNavItem","contentContainer","buildColumn","customCssClass","column","BulkGearJsonImporter","bulkUI","BulkSimResultRenderer","baseResult","dpsDivParent","dpsDiv","dpsNumber","formatDps","unitMetrics","avg","dpsDelta","dpsDeltaSpan","formatDpsDelta","itemsContainer","itemsAdded","equipBtn","itemAdded","renderer","itemSlotName","delta","ItemSpecWithSlot","emitDefaultValues","BulkItemPicker","getEligibleItemSlots","openEnchantGemSelector","allItems","setItems","_gems","destroyItemButton","closeX","opacity","alignItems","BulkTab","itemsChangedEmitter","column1","leftPanel","rightPanel","pendingDiv","pendingResults","doCombos","fastMode","autoGem","autoEnchant","defaultGems","UIGem","gemIconElements","buildTabContent","loadSettings","getSettingsKey","storedSettings","settings","BulkSettings","combinations","SimGem","defaultRedGem","defaultYellowGem","defaultBlueGem","defaultMetaGem","storeSettings","createBulkSettings","setStr","iterationsPerCombo","createBulkItemsDatabase","itemsDb","SimItem","UIItem","SimEnchant","UIEnchant","clearItems","setCombinations","setFastMode","runBulkSim","itemsBlock","noticeWorkInProgress","itemTextIntro","itemList","resultsBlock","bulkSimResult","r","resultBlock","equippedGearResult","settingsBlock","bulkSimButton","disabled","simStart","Date","getTime","lastTotal","rounds","currentRound","progressMetrics","msSinceStart","iterPerSecond","ceil","importFavsButton","itemID","searchButton","searchText","placeholder","searchResults","toAdd","node","strID","searchString","pieces","displayCount","matched","lcName","lcSetName","piece","lcPiece","itemElement","htxt","ftxt","baseSearchHTML","getAllItems","focus","clearButton","defaultGemDiv","gemLabel","gemSocketsDiv","GemColorRed","GemColorYellow","GemColorBlue","socketIndex","selector","handleChoose","openGemSelector","GemSelectorModal","obj","secondsRemain","roundsText","onSelect","Gem1","GearTab","buildGearPickers","buildSavedGearsetPicker","savedGearManager","getSavedGearStorageKey","SavedGearSet","bonusStatsStats","newSavedGear","presetGear","ListPicker","itemPickerPairs","titleTooltip","itemLabel","hideUi","itemsDiv","newList","pair","ipp","numToAdd","addNewPicker","val","itemContainer","inlineMenuBar","itemHTML","upButton","upButtonTooltip","swap","downButton","downButtonTooltip","copyButton","copyButtonTooltip","copyItem","deleteButtonTooltip","itemPicker","newItemPicker","getSourceValue","EncounterPicker","modEncounter","addEncounterFieldPickers","showExecuteProportion","presetTargets","getAllPresetTargets","pe","path","equalTargetsIgnoreInputs","ti","makeTargetInputsPicker","advancedButton","AdvancedEncounterModal","addHeader","targetsElem","encounter2","oldItem","listPicker","TargetPicker","presetEncounters","getAllPresetEncounters","section1","section3","getTarget","aiPicker","TargetInput","levelPicker","mobTypePicker","mobTypeEnumValues","tankIndexPicker","targetInputPickers","statPickers","ALL_TARGET_STATS","statData","statNames","swingSpeedPicker","minBaseDamagePicker","dualWieldPicker","dwMissPenaltyPicker","parryHastePicker","spellSchoolPicker","SpellSchoolArcane","SpellSchoolFire","SpellSchoolFrost","SpellSchoolHoly","SpellSchoolNature","SpellSchoolShadow","suppressDodgePicker","tightDamageRangePicker","tightEnemyDamage","Target","statValue","totalStats","curStats","TargetInputPicker","targetInputIndex","boolPicker","numberPicker","getTargetInput","boolValue","numberValue","inputType","InputType","Bool","durationGroup","newGroupContainer","executeGroup","target1","target2","modTarget2","StatHealth","StatArcaneResistance","StatFireResistance","StatFrostResistance","StatNatureResistance","StatShadowResistance","MobTypeUnknown","MobTypeBeast","MobTypeDemon","MobTypeDragonkin","MobTypeElemental","MobTypeHumanoid","MobTypeMechanical","MobTypeUndead","IconPicker","handleLeftClick","states","handleRightClick","rootAnchor","useImprovedIcons","improvedId","improvedId2","levelContainer","improvedAnchor","improvedAnchor2","counterElem","getActionId","MultiIconPicker","dropdownRootElem","labelElem","hasOwnProperty","clearPicker","buildBlankOption","pickers","inputs","pickerConfig","updateButtonImage","getMaxValue","categoryId","CustomRotationPicker","modPlayer","spells","CustomRotation","CustomSpell","itemConfig","CustomSpellPicker","spellIndex","crConfig","spellPicker","oldShowWhen","getSpell","spell","setSpell","cpmPicker","showCastsPerMinute","castsPerMinute","customSpells","NumberListPicker","arrayEquals","CooldownsPicker","cooldownPickers","cooldown","makeActionPicker","makeTimingsPicker","deleteButtonFragment","addTrinketDesyncPicker","pickerInput","desyncProcTrinket1Seconds","desyncProcTrinket2Seconds","validator","reportValidity","cooldownIndex","availableCooldowns","ActionIdProto","cooldownAction","Cooldown","timings","curCooldown","makeMultiIconInput","makeWrappedBooleanInput","getModObject","makeSpecOptionsBooleanInput","newVal","newMessage","makeRotationBooleanInput","makeWrappedNumberInput","makeSpecOptionsNumberInput","internalConfig","percent","makeRotationNumberInput","makeWrappedEnumInput","makeSpecOptionsEnumInput","makeRotationEnumInput","makeWrappedIconInput","makeBooleanIconInput","getFieldValue","setFieldValue","makeSpecOptionsBooleanIconInput","makeNumberIconInput","multiplier","sign","makeTristateIconInput","impId","input","makeMultistateIconInput","numStates","makeWrappedEnumIconInput","makeSpecOptionsEnumIconInput","makeRotationEnumIconInput","makeCustomRotationInput","MakeItemSwapInput","ItemSwap","itemSlots","buildIconInput","inputConfig","AllStatsBuff","InputHelpers.makeMultiIconInput","makeTristateRaidBuffInput","makeBooleanRaidBuffInput","AllStatsPercentBuff","makeBooleanIndividualBuffInput","ArmorBuff","StaminaBuff","StrengthAndAgilityBuff","IntellectBuff","SpiritBuff","AttackPowerBuff","makeTristateIndividualBuffInput","AttackPowerPercentBuff","DamagePercentBuff","DamageReductionPercentBuff","HastePercentBuff","HealthBuff","MP5Buff","MeleeCritBuff","MeleeHasteBuff","ReplenishmentBuff","SpellCritBuff","SpellHasteBuff","withLabel","SpellPowerBuff","InputHelpers.makeMultistateIconInput","Bloodlust","DefensiveCooldownBuff","makeMultistateIndividualBuffInput","RetributionAura","ShadowProtection","BraidedEterniumChain","makeBooleanPartyBuffInput","ChainOfTheTwilightOwl","HeroicPresence","EyeOfTheNight","Thorns","ManaTideTotem","makeMultistatePartyBuffInput","Innervate","PowerInfusion","FocusMagic","TricksOfTheTrade","UnholyFrenzy","RevitalizeRejuvination","makeMultistateMultiplierIndividualBuffInput","RevitalizeWildGrowth","MajorArmorDebuff","makeBooleanDebuffInput","MinorArmorDebuff","makeTristateDebuffInput","AttackPowerDebuff","BleedDebuff","CritDebuff","MeleeAttackSpeedDebuff","MeleeHitDebuff","PhysicalDamageDebuff","SpellCritDebuff","SpellHitDebuff","SpellDamageDebuff","HuntersMark","impId2","InputHelpers.makeQuadstateIconInput","makeQuadstateDebuffInput","JudgementOfWisdom","JudgementOfLight","ShatteringThrow","GiftOfArthas","ThermalSapper","makeBooleanConsumeInput","ExplosiveDecoy","SpicedMammothTreats","PetFood","PetFoodSpicedMammothTreats","InputHelpers.makeBooleanIconInput","InputHelpers.makeTristateIconInput","makePotionInputFactory","consumesFieldName","makeConsumeInputFactory","allOptions","Potions","RunicHealingPotion","RunicHealingInjector","RunicManaPotion","RunicManaInjector","IndestructiblePotion","PotionOfSpeed","PotionOfWildMagic","DestructionPotion","HastePotion","MightyRagePotion","SuperManaPotion","FelManaPotion","InsaneStrengthPotion","IronshieldPotion","HeroicPotion","makePotionsInput","makePrepopPotionsInput","makeConjuredInput","Conjured","ConjuredDarkRune","ConjuredFlameCap","ConjuredHealthstone","ConjuredRogueThistleTea","makeFlasksInput","Flask","FlaskOfTheFrostWyrm","FlaskOfEndlessRage","FlaskOfPureMojo","FlaskOfStoneblood","LesserFlaskOfToughness","LesserFlaskOfResistance","FlaskOfBlindingLight","FlaskOfMightyRestoration","FlaskOfPureDeath","FlaskOfRelentlessAssault","FlaskOfSupremePower","FlaskOfFortification","FlaskOfChromaticWonder","onSet","battleElixir","BattleElixir","BattleElixirUnknown","guardianElixir","GuardianElixir","GuardianElixirUnknown","makeBattleElixirsInput","ElixirOfAccuracy","ElixirOfArmorPiercing","ElixirOfDeadlyStrikes","ElixirOfExpertise","ElixirOfLightningSpeed","ElixirOfMightyAgility","ElixirOfMightyStrength","GurusElixir","SpellpowerElixir","WrathElixir","AdeptsElixir","ElixirOfDemonslaying","ElixirOfMajorAgility","ElixirOfMajorFirePower","ElixirOfMajorFrostPower","ElixirOfMajorShadowPower","ElixirOfMajorStrength","ElixirOfMastery","ElixirOfTheMongoose","FelStrengthElixir","GreaterArcaneElixir","flask","FlaskUnknown","makeGuardianElixirsInput","ElixirOfMightyDefense","ElixirOfMightyFortitude","ElixirOfMightyMageblood","ElixirOfMightyThoughts","ElixirOfProtection","ElixirOfSpirit","ElixirOfDraenicWisdom","ElixirOfIronskin","ElixirOfMajorDefense","ElixirOfMajorFortitude","ElixirOfMajorMageblood","makeFoodInput","Food","FoodFishFeast","FoodGreatFeast","FoodBlackenedDragonfin","FoodHeartyRhino","FoodMegaMammothMeal","FoodSpicedWormBurger","FoodRhinoliciousWormsteak","FoodImperialMantaSteak","FoodSnapperExtreme","FoodMightyRhinoDogs","FoodFirecrackerSalmon","FoodCuttlesteak","FoodDragonfinFilet","FoodBlackenedBasilisk","FoodGrilledMudfish","FoodRavagerDog","FoodRoastedClefthoof","FoodSpicyHotTalbuk","FoodSkullfishSoup","FoodFishermansFeast","FillerExplosiveInput","Explosive","ExplosiveSaroniteBomb","ExplosiveCobaltFragBomb","factory","allOption","ConsumesPicker","settingsTab","buildPotionsPicker","buildElixirsPicker","buildFoodPicker","buildEngPicker","buildPetPicker","prepopPotionOptions","splitRelevantOptions","StatStrength","StatStamina","StatSpellPower","IconInputs.makePrepopPotionsInput","potionOptions","StatIntellect","IconInputs.makePotionsInput","conjuredOptions","IconInputs.makeConjuredInput","flaskOptions","StatRangedAttackPower","StatMP5","IconInputs.makeFlasksInput","battleElixirOptions","StatAgility","StatSpirit","battleElixirsContainer","IconInputs.makeBattleElixirsInput","guardianElixirOptions","guardianElixirsContainer","IconInputs.makeGuardianElixirsInput","foodOptions","IconInputs.makeFoodInput","tradeConsumesElem","IconInputs.ThermalSapper","IconInputs.ExplosiveDecoy","IconInputs.FillerExplosiveInput","Engineering","petConsumeInputs","petConsumesElem","iconInput","BLESSINGS_SECTION","BASIC_BIS_DISCLAIMER","ItemSwapPicker","allowHTML","itemSwapContainer","swapButtonFragment","swapButton","swapWithGear","gearMap","itemSwapMap","gearItem","swapItem","SettingsTab","column2","column3","column4","buildEncounterSettings","buildRotationSettings","buildPlayerSettings","buildCustomSettingsSections","buildConsumesSection","buildCooldownSettings","buildOtherSettings","buildBuffsSettings","buildDebuffsSettings","buildSavedDataPickers","encounterPicker","rotationIconGroup","rotationIconInputs","configureIconSection","IconInputs.buildIconInput","configureInputSection","rotationInputs","playerIconGroup","playerIconInputs","races","raceNames","playerInputs","professionGroup","customSections","customSection","otherInputs","buffOptions","IconInputs.AllStatsBuff","IconInputs.AllStatsPercentBuff","IconInputs.HealthBuff","IconInputs.ArmorBuff","IconInputs.StaminaBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.IntellectBuff","IconInputs.SpiritBuff","IconInputs.AttackPowerBuff","IconInputs.AttackPowerPercentBuff","IconInputs.MeleeCritBuff","IconInputs.MeleeHasteBuff","IconInputs.SpellPowerBuff","IconInputs.SpellCritBuff","IconInputs.HastePercentBuff","IconInputs.DamagePercentBuff","IconInputs.DamageReductionPercentBuff","IconInputs.DefensiveCooldownBuff","IconInputs.MP5Buff","IconInputs.ReplenishmentBuff","multiIconInput","IconInputs.Bloodlust","IconInputs.SpellHasteBuff","revitalizeBuffOptions","IconInputs.RevitalizeRejuvination","IconInputs.RevitalizeWildGrowth","miscBuffOptions","IconInputs.HeroicPresence","IconInputs.BraidedEterniumChain","IconInputs.ChainOfTheTwilightOwl","IconInputs.FocusMagic","IconInputs.EyeOfTheNight","IconInputs.Thorns","IconInputs.RetributionAura","IconInputs.ShadowProtection","IconInputs.ManaTideTotem","IconInputs.Innervate","IconInputs.PowerInfusion","IconInputs.TricksOfTheTrade","IconInputs.UnholyFrenzy","debuffOptions","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.BleedDebuff","IconInputs.SpellDamageDebuff","IconInputs.SpellHitDebuff","IconInputs.SpellCritDebuff","IconInputs.CritDebuff","IconInputs.AttackPowerDebuff","IconInputs.MeleeAttackSpeedDebuff","IconInputs.MeleeHitDebuff","IconInputs.JudgementOfWisdom","IconInputs.HuntersMark","miscDebuffOptions","IconInputs.JudgementOfLight","IconInputs.ShatteringThrow","IconInputs.GiftOfArthas","savedEncounterManager","SavedEncounter","newEncounter","savedSettingsManager","getSavedSettingsStorageKey","SavedSettings","playerBuffs","rotationJson","rotationToJson","newSettings","rotationFromJson","sectionElem","sectionConfig","iconPickers","adjustColumns","DropdownPicker","valueConfigs","currentSelection","defaultLabel","setOptions","newValueConfigs","setOptionContent","updateValue","newSelection","TextDropdownPicker","StringPicker","APLActionIDPicker","APLRotationPicker","priorityList","APLListItem","action","APLListItemPicker","itemIndex","hidePicker","notesPicker","notes","actionPicker","APLActionPicker","APLAction","_APLActionPicker","allActionTypes","actionTypeFactories","typePicker","actionType","currentType","newActionType","updateActionPicker","castSpell","APLActionCastSpell","spellIdPicker","AplHelpers.APLActionIDPicker","ActionID","updateValues","spellPromises","all","cooldownPromises","cd","sequence","APLActionSequence","wait","APLActionWait","RotationTab","buildContent","makePetTypeInputConfig","includeLabel","InputHelpers.makeSpecOptionsEnumIconInput","PetType","PetNone","fromPetName","Bat","Bear","BirdOfPrey","Boar","CarrionBird","Cat","Chimaera","CoreHound","Crab","Crocolisk","Devilsaur","Dragonhawk","Gorilla","Hyena","Moth","NetherRay","Raptor","Ravager","Rhino","Scorpid","Serpent","Silithid","Spider","SpiritBeast","SporeBat","Tallstrider","Turtle","WarpStalker","Wasp","WindSerpent","Wolf","Worm","petCategories","categoryOrder","categoryClasses","HunterPetTalentsPicker","curCategory","getCategoryFromPlayer","curTalents","getPetTalentsFromPlayer","savedSets","defaultTalents","talentsContainer","petTalentsConfig","pickerContainer","petTalents","HunterPetTalents","savedTalentsManager","defaultBMTalents","petCategory","categoryIdx","updateIsBM","beastMastery","petType","getPetTalentsConfig","cunningDefault","cobraReflexes","dive","boarsSpeed","mobility","spikedCollar","cornered","feedingFrenzy","wolverineBite","bullheaded","wildHunt","ferocityDefault","cullingTheHerd","spidersBite","rabid","callOfTheWild","charge","greatStamina","bloodOfTheRhino","guardDog","thunderstomp","graceOfTheMantis","taunt","roarOfSacrifice","cunningBMDefault","ferocityBMDefault","bloodthirsty","sharkAttack","Exporter","allowDownload","clipboardButton","navigator","clipboard","writeText","originalContent","downloadString","IndividualLinkExporter","IndividualJsonExporter","IndividualWowheadGearPlannerExporter","bytes","addGlyph","glyphItemId","glyphItemToSpellId","to2Bytes","getItemSlots","slot1","slot2","binaryString","btoa","_Individual80UEPExporter","allUnitStats","namesToWeights","weight","pseudoStatNames","Individual80UEPExporter","StatSpellPenetration","StatMana","StatEnergy","StatRage","StatBonusArmor","StatRunicPower","StatBloodRune","StatFrostRune","StatUnholyRune","StatDeathRune","_IndividualPawnEPExporter","IndividualPawnEPExporter","IndividualCLIExporter","raidSimJson","raidSimResultsManager","getMetaGemConditionDescription","failedProfReqs","getFailedProfessionRequirements","fpr","getJCGems","talentPoints","getTalentPoints","addSidebarComponents","addGearTab","addBulkTab","addSettingsTab","addTalentsTab","addDetailedResultsTab","addLogTab","addTopbarComponents","initEventID","loadedSettings","binary","settingsBytes","pako","inflate","savedSettings","jsonStr","addRaidSimAction","displayStats","bulkTab","newGlyphsPicker","getSavedTalentsStorageKey","SavedTalents","newTalents","curShown","updateToggle","toggleContainer","addRotationTab","EmbeddedDetailedResults","_parent","Importers.IndividualJsonImporter","Importers.Individual80UImporter","Importers.IndividualWowheadGearPlannerImporter","Importers.IndividualAddonImporter","Exporters.IndividualLinkExporter","Exporters.IndividualJsonExporter","Exporters.IndividualWowheadGearPlannerExporter","Exporters.Individual80UEPExporter","Exporters.IndividualPawnEPExporter","Exporters.IndividualCLIExporter","tankSpec","healingSpec","towEnabled","individualBuffs","other","getSavedRotationStorageKey","keyPart","specToLocalStorageKey","epWeightsStats","protoBytes","deflated","deflate","to","encoded","linkUrl","URL","missingRatios","includeBuffDebuffInputs","excludeBuffDebuffInputs"],"mappings":"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"}